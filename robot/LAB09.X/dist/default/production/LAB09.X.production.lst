

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Apr  5 00:46:33 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	text56,global,reloc=2,class=CODE,delta=1
    66                           	psect	text57,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	opt stack 0
    75  001000  00                 	db	0
    76  001001                     set_motor_speed@motor_speeds:
    77                           	opt stack 0
    78  001001  FCE0               	dw	64736
    79  001003  FD2B               	dw	64811
    80  001005  FD76               	dw	64886
    81  001007  0000               	dw	0
    82  001009  028A               	dw	650
    83  00100B  02D5               	dw	725
    84  00100D  0320               	dw	800
    85  00100F                     __end_ofset_motor_speed@motor_speeds:
    86                           	opt stack 0
    87  0000                     _ADCON0	set	4034
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADRESL	set	4035
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _CCP1CON	set	4029
    95  0000                     _CCP2CON	set	4026
    96  0000                     _CCPR1L	set	4030
    97  0000                     _CCPR2L	set	4027
    98  0000                     _HLVDCONbits	set	4050
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR2bits	set	4002
   101  0000                     _OSCCONbits	set	4051
   102  0000                     _OSCTUNEbits	set	3995
   103  0000                     _PIE1bits	set	3997
   104  0000                     _PIE2bits	set	4000
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _PORTCbits	set	3970
   108  0000                     _PORTD	set	3971
   109  0000                     _PORTDbits	set	3971
   110  0000                     _PORTEbits	set	3972
   111  0000                     _PR2	set	4043
   112  0000                     _RCONbits	set	4048
   113  0000                     _RCSTA	set	4011
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _SPBRG	set	4015
   116  0000                     _SPBRGH	set	4016
   117  0000                     _STKPTRbits	set	4092
   118  0000                     _T0CON	set	4053
   119  0000                     _T0CONbits	set	4053
   120  0000                     _T2CON	set	4042
   121  0000                     _T2CONbits	set	4042
   122  0000                     _TMR0H	set	4055
   123  0000                     _TMR0L	set	4054
   124  0000                     _TMR2	set	4044
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISCbits	set	3988
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISE	set	3990
   132  0000                     _TXREG	set	4013
   133  0000                     _TXSTA	set	4012
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _TMR0IF	set	32658
   136  0000                     _TXIF	set	31988
   137  00100F                     __stringdata:
   138                           	opt stack 0
   139  00100F                     STR_1:
   140  00100F  0A                 	db	10
   141  001010  0D                 	db	13
   142  001011  4B                 	db	75	;'K'
   143  001012  77                 	db	119	;'w'
   144  001013  61                 	db	97	;'a'
   145  001014  6E                 	db	110	;'n'
   146  001015  74                 	db	116	;'t'
   147  001016  6C                 	db	108	;'l'
   148  001017  65                 	db	101	;'e'
   149  001018  6E                 	db	110	;'n'
   150  001019  20                 	db	32
   151  00101A  41                 	db	65	;'A'
   152  00101B  50                 	db	80	;'P'
   153  00101C  53                 	db	83	;'S'
   154  00101D  43                 	db	67	;'C'
   155  00101E  31                 	db	49	;'1'
   156  00101F  32                 	db	50	;'2'
   157  001020  39                 	db	57	;'9'
   158  001021  39                 	db	57	;'9'
   159  001022  20                 	db	32
   160  001023  73                 	db	115	;'s'
   161  001024  69                 	db	105	;'i'
   162  001025  6D                 	db	109	;'m'
   163  001026  70                 	db	112	;'p'
   164  001027  6C                 	db	108	;'l'
   165  001028  65                 	db	101	;'e'
   166  001029  20                 	db	32
   167  00102A  63                 	db	99	;'c'
   168  00102B  75                 	db	117	;'u'
   169  00102C  72                 	db	114	;'r'
   170  00102D  76                 	db	118	;'v'
   171  00102E  65                 	db	101	;'e'
   172  00102F  20                 	db	32
   173  001030  66                 	db	102	;'f'
   174  001031  6F                 	db	111	;'o'
   175  001032  6C                 	db	108	;'l'
   176  001033  6C                 	db	108	;'l'
   177  001034  6F                 	db	111	;'o'
   178  001035  77                 	db	119	;'w'
   179  001036  65                 	db	101	;'e'
   180  001037  72                 	db	114	;'r'
   181  001038  20                 	db	32
   182  001039  2D                 	db	45
   183  00103A  2D                 	db	45
   184  00103B  20                 	db	32
   185  00103C  77                 	db	119	;'w'
   186  00103D  69                 	db	105	;'i'
   187  00103E  74                 	db	116	;'t'
   188  00103F  68                 	db	104	;'h'
   189  001040  20                 	db	32
   190  001041  65                 	db	101	;'e'
   191  001042  72                 	db	114	;'r'
   192  001043  72                 	db	114	;'r'
   193  001044  6F                 	db	111	;'o'
   194  001045  72                 	db	114	;'r'
   195  001046  20                 	db	32
   196  001047  63                 	db	99	;'c'
   197  001048  6F                 	db	111	;'o'
   198  001049  64                 	db	100	;'d'
   199  00104A  65                 	db	101	;'e'
   200  00104B  73                 	db	115	;'s'
   201  00104C  0A                 	db	10
   202  00104D  0D                 	db	13
   203  00104E  00                 	db	0
   204  00104F                     STR_6:
   205  00104F  20                 	db	32
   206  001050  3C                 	db	60	;'<'
   207  001051  72                 	db	114	;'r'
   208  001052  65                 	db	101	;'e'
   209  001053  73                 	db	115	;'s'
   210  001054  65                 	db	101	;'e'
   211  001055  74                 	db	116	;'t'
   212  001056  3E                 	db	62	;'>'
   213  001057  20                 	db	32
   214  001058  00                 	db	0
   215  001059                     STR_5:
   216  001059  3C                 	db	60	;'<'
   217  00105A  53                 	db	83	;'S'
   218  00105B  54                 	db	84	;'T'
   219  00105C  4B                 	db	75	;'K'
   220  00105D  46                 	db	70	;'F'
   221  00105E  55                 	db	85	;'U'
   222  00105F  4C                 	db	76	;'L'
   223  001060  3E                 	db	62	;'>'
   224  001061  00                 	db	0
   225  001062                     STR_4:
   226  001062  3C                 	db	60	;'<'
   227  001063  57                 	db	87	;'W'
   228  001064  44                 	db	68	;'D'
   229  001065  54                 	db	84	;'T'
   230  001066  20                 	db	32
   231  001067  54                 	db	84	;'T'
   232  001068  4F                 	db	79	;'O'
   233  001069  3E                 	db	62	;'>'
   234  00106A  00                 	db	0
   235  00106B                     STR_7:
   236  00106B  5C                 	db	92	;'\'
   237  00106C  3C                 	db	60	;'<'
   238  00106D  4C                 	db	76	;'L'
   239  00106E  56                 	db	86	;'V'
   240  00106F  44                 	db	68	;'D'
   241  001070  3E                 	db	62	;'>'
   242  001071  00                 	db	0
   243  001072                     STR_3:
   244  001072  3C                 	db	60	;'<'
   245  001073  42                 	db	66	;'B'
   246  001074  4F                 	db	79	;'O'
   247  001075  52                 	db	82	;'R'
   248  001076  3E                 	db	62	;'>'
   249  001077  00                 	db	0
   250  001078                     STR_2:
   251  001078  3C                 	db	60	;'<'
   252  001079  50                 	db	80	;'P'
   253  00107A  4F                 	db	79	;'O'
   254  00107B  52                 	db	82	;'R'
   255  00107C  3E                 	db	62	;'>'
   256  00107D  00                 	db	0
   257  00107E                     __end_of__stringdata:
   258                           	opt stack 0
   259                           
   260                           ; #config settings
   261  00107E  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  001EA4                     __pcinit:
   265                           	opt stack 0
   266  001EA4                     start_initialization:
   267                           	opt stack 0
   268  001EA4                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Clear objects allocated to COMRAM (14 bytes)
   272  001EA4  EE00  F020         	lfsr	0,__pbssCOMRAM
   273  001EA8  0E0E               	movlw	14
   274  001EAA                     clear_0:
   275  001EAA  6AEE               	clrf	postinc0,c
   276  001EAC  06E8               	decf	wreg,f,c
   277  001EAE  E1FD               	bnz	clear_0
   278  001EB0                     end_of_initialization:
   279                           	opt stack 0
   280  001EB0                     __end_of__initialization:
   281                           	opt stack 0
   282  001EB0  0100               	movlb	0
   283  001EB2  EF41  F00D         	goto	_main	;jump to C main() function
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	bssCOMRAM
   288  000020                     __pbssCOMRAM:
   289                           	opt stack 0
   290  000020                     _count:
   291                           	opt stack 0
   292  000020                     	ds	2
   293  000022                     _memory:
   294                           	opt stack 0
   295  000022                     	ds	2
   296  000024                     _move_state:
   297                           	opt stack 0
   298  000024                     	ds	2
   299  000026                     _side_mem:
   300                           	opt stack 0
   301  000026                     	ds	2
   302  000028                     _threshold:
   303                           	opt stack 0
   304  000028                     	ds	2
   305  00002A                     _tmr_state:
   306                           	opt stack 0
   307  00002A                     	ds	2
   308  00002C                     _SeeLine:
   309                           	opt stack 0
   310  00002C                     	ds	1
   311  00002D                     _lvd_flag:
   312                           	opt stack 0
   313  00002D                     	ds	1
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           
   317                           	psect	cstackCOMRAM
   318  000001                     __pcstackCOMRAM:
   319                           	opt stack 0
   320  000001                     ??_high_isr:
   321  000001                     
   322                           ; 2 bytes @ 0x0
   323  000001                     	ds	14
   324  00000F                     ??_set_leds:
   325  00000F                     ??_OpenPWM2:
   326  00000F                     ??_SetChanADC:
   327  00000F                     ?_ReadADC:
   328                           	opt stack 0
   329  00000F                     ?_ReadTimer0:
   330                           	opt stack 0
   331  00000F                     putch@data:
   332                           	opt stack 0
   333  00000F                     OpenADC@config2:
   334                           	opt stack 0
   335  00000F                     OpenPWM1@period:
   336                           	opt stack 0
   337  00000F                     OpenTimer0@config:
   338                           	opt stack 0
   339  00000F                     OpenTimer2@config:
   340                           	opt stack 0
   341  00000F                     set_osc_32MHz@i:
   342                           	opt stack 0
   343  00000F                     SetDCPWM1@dutycycle:
   344                           	opt stack 0
   345  00000F                     SetDCPWM2@dutycycle:
   346                           	opt stack 0
   347  00000F                     WriteTimer0@timer0:
   348                           	opt stack 0
   349  00000F                     OpenUSART@spbrg:
   350                           	opt stack 0
   351  00000F                     gtrap@count:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0xE
   355  00000F                     	ds	1
   356  000010                     ?_printf:
   357                           	opt stack 0
   358  000010                     OpenADC@portconfig:
   359                           	opt stack 0
   360  000010                     SetChanADC@channel:
   361                           	opt stack 0
   362  000010                     OpenPWM2@period:
   363                           	opt stack 0
   364  000010                     printf@f:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xF
   368  000010                     	ds	1
   369  000011                     ??_OpenUSART:
   370  000011                     ??_OpenADC:
   371  000011                     ??_SetDCPWM1:
   372  000011                     ??_SetDCPWM2:
   373  000011                     ?_adc:
   374                           	opt stack 0
   375  000011                     OpenPWM2@ccp2mx:
   376                           	opt stack 0
   377  000011                     ReadTimer0@timer:
   378                           	opt stack 0
   379  000011                     WriteTimer0@timer:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  000011                     	ds	1
   384  000012                     printf@ap:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x11
   388  000012                     	ds	1
   389  000013                     adc@channel:
   390                           	opt stack 0
   391  000013                     OpenADC@config:
   392                           	opt stack 0
   393  000013                     SetDCPWM1@DCycle:
   394                           	opt stack 0
   395  000013                     SetDCPWM2@DCycle:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x12
   399  000013                     	ds	1
   400  000014                     ??_check_sensors:
   401  000014                     printf@c:
   402                           	opt stack 0
   403  000014                     OpenUSART@config:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x13
   407  000014                     	ds	1
   408  000015                     set_motor_speed@motor_speed:
   409                           	opt stack 0
   410  000015                     PORtask@count1:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x14
   414  000015                     	ds	1
   415  000016                     set_motor_speed@speed_modifier:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x15
   419  000016                     	ds	2
   420  000018                     ??_set_motor_speed:
   421                           
   422                           ; 0 bytes @ 0x17
   423  000018                     	ds	1
   424  000019                     PORtask@count2:
   425                           	opt stack 0
   426                           
   427                           ; 4 bytes @ 0x18
   428  000019                     	ds	1
   429  00001A                     set_motor_speed@the_motor:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x19
   433  00001A                     	ds	1
   434  00001B                     set_motor_speed@dir_modifier:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x1A
   438  00001B                     	ds	1
   439  00001C                     set_motor_speed@duty_cycle:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1B
   443  00001C                     	ds	1
   444  00001D                     
   445                           ; 0 bytes @ 0x1C
   446  00001D                     	ds	1
   447  00001E                     set_directive@directive:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1D
   451  00001E                     	ds	2
   452  000020                     postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           
   455                           ; 0 bytes @ 0x1F
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 16 in file "../main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels required when called:    7
   481 ;; This function calls:
   482 ;;		_LVtrap
   483 ;;		_OpenTimer0
   484 ;;		_check_sensors
   485 ;;		_initialization
   486 ;;		_lvd_flag_set
   487 ;;		_motor_control
   488 ;;		_printf
   489 ;;		_set_leds
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text0
   496  001A82                     __ptext0:
   497                           	opt stack 0
   498  001A82                     _main:
   499                           	opt stack 24
   500                           
   501                           ;main.c: 19: initialization();
   502                           
   503                           ;incstack = 0
   504  001A82  ECBA  F00B         	call	_initialization	;wreg free
   505                           
   506                           ;main.c: 24: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   507  001A86  0E10               	movlw	high STR_1
   508  001A88  6E11               	movwf	printf@f+1,c
   509  001A8A  0E0F               	movlw	low STR_1
   510  001A8C  6E10               	movwf	printf@f,c
   511  001A8E  ECDF  F00D         	call	_printf	;wreg free
   512  001A92  0004               	clrwdt		;# 
   513                           
   514                           ;main.c: 27: threshold = 240u;
   515  001A94  0E00               	movlw	0
   516  001A96  6E29               	movwf	_threshold+1,c
   517  001A98  0EF0               	movlw	240
   518  001A9A  6E28               	movwf	_threshold,c
   519                           
   520                           ;main.c: 30: OpenTimer0(0b01111111 & 0b10000111 & 0b11111110);
   521  001A9C  0E06               	movlw	6
   522  001A9E  ECC2  F00E         	call	_OpenTimer0
   523                           
   524                           ;main.c: 32: side_mem=2;
   525  001AA2  0E00               	movlw	0
   526  001AA4  6E27               	movwf	_side_mem+1,c
   527  001AA6  0E02               	movlw	2
   528  001AA8  6E26               	movwf	_side_mem,c
   529                           
   530                           ;main.c: 33: count = 0;
   531  001AAA  0E00               	movlw	0
   532  001AAC  6E21               	movwf	_count+1,c
   533  001AAE  0E00               	movlw	0
   534  001AB0  6E20               	movwf	_count,c
   535  001AB2                     l2124:
   536                           
   537                           ;main.c: 35: {
   538                           ;main.c: 36: check_sensors();
   539  001AB2  ECAC  F00A         	call	_check_sensors	;wreg free
   540                           
   541                           ;main.c: 37: set_leds();
   542  001AB6  EC02  F00C         	call	_set_leds	;wreg free
   543                           
   544                           ;main.c: 42: motor_control();
   545  001ABA  EC40  F008         	call	_motor_control	;wreg free
   546  001ABE  0004               	clrwdt		;# 
   547                           
   548                           ;main.c: 44: if(lvd_flag_set()) LVtrap();
   549  001AC0  ECB9  F00F         	call	_lvd_flag_set	;wreg free
   550  001AC4  0900               	iorlw	0
   551  001AC6  B4D8               	btfsc	status,2,c
   552  001AC8  D7F4               	goto	l2124
   553  001ACA  ECD2  F00E         	call	_LVtrap	;wreg free
   554  001ACE  D7F1               	goto	l2124
   555  001AD0                     __end_of_main:
   556                           	opt stack 0
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _motor_control *****************
   562 ;; Defined at:
   563 ;;		line 140 in file "../motor_control.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;		None               void
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    6
   584 ;; This function calls:
   585 ;;		_ReadTimer0
   586 ;;		_change_track
   587 ;;		_check_state
   588 ;;		_clr_tmr
   589 ;;		_full_stp
   590 ;;		_set_directive
   591 ;;		_start_tmr
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  001080                     __ptext1:
   599                           	opt stack 0
   600  001080                     _motor_control:
   601                           	opt stack 24
   602                           
   603                           ;motor_control.c: 144: if(SeeLine.B != 0b00000 && SeeLine.B != 0b11111)if(tmr_state != 0
      +                          )clr_tmr();
   604                           
   605                           ;incstack = 0
   606  001080  502C               	movf	_SeeLine,w,c
   607  001082  0B1F               	andlw	31
   608  001084  0900               	iorlw	0
   609  001086  B4D8               	btfsc	status,2,c
   610  001088  D1C7               	goto	l2090
   611  00108A  502C               	movf	_SeeLine,w,c
   612  00108C  0B1F               	andlw	31
   613  00108E  0A1F               	xorlw	31
   614  001090  B4D8               	btfsc	status,2,c
   615  001092  D1C2               	goto	l2090
   616  001094  502B               	movf	_tmr_state+1,w,c
   617  001096  102A               	iorwf	_tmr_state,w,c
   618  001098  B4D8               	btfsc	status,2,c
   619  00109A  D1BE               	goto	l2090
   620  00109C  EC84  F00F         	call	_clr_tmr	;wreg free
   621  0010A0  D1BB               	goto	l2090
   622  0010A2                     l1892:
   623                           
   624                           ;motor_control.c: 149: if(move_state!=4)set_directive(4);
   625  0010A2  5024               	movf	_move_state,w,c
   626  0010A4  0A04               	xorlw	4
   627  0010A6  1025               	iorwf	_move_state+1,w,c
   628  0010A8  B4D8               	btfsc	status,2,c
   629  0010AA  D1EE               	goto	l2092
   630  0010AC  0E00               	movlw	0
   631  0010AE  6E1F               	movwf	set_directive@directive+1,c
   632  0010B0  0E04               	movlw	4
   633  0010B2  6E1E               	movwf	set_directive@directive,c
   634  0010B4  EC0E  F00B         	call	_set_directive	;wreg free
   635  0010B8  D1E7               	goto	l2092
   636  0010BA                     l1896:
   637                           
   638                           ;motor_control.c: 154: if(memory==0)
   639  0010BA  5023               	movf	_memory+1,w,c
   640  0010BC  1022               	iorwf	_memory,w,c
   641  0010BE  A4D8               	btfss	status,2,c
   642  0010C0  D1E3               	goto	l2092
   643                           
   644                           ;motor_control.c: 155: if(move_state!=4)
   645  0010C2  5024               	movf	_move_state,w,c
   646  0010C4  0A04               	xorlw	4
   647  0010C6  1025               	iorwf	_move_state+1,w,c
   648  0010C8  B4D8               	btfsc	status,2,c
   649  0010CA  D1DE               	goto	l2092
   650                           
   651                           ;motor_control.c: 156: set_directive(4);
   652  0010CC  0E00               	movlw	0
   653  0010CE  6E1F               	movwf	set_directive@directive+1,c
   654  0010D0  0E04               	movlw	4
   655  0010D2  6E1E               	movwf	set_directive@directive,c
   656  0010D4  EC0E  F00B         	call	_set_directive	;wreg free
   657  0010D8  D1D7               	goto	l2092
   658  0010DA                     l1904:
   659                           
   660                           ;motor_control.c: 164: if(move_state!=4)set_directive(4);
   661  0010DA  5024               	movf	_move_state,w,c
   662  0010DC  0A04               	xorlw	4
   663  0010DE  1025               	iorwf	_move_state+1,w,c
   664  0010E0  B4D8               	btfsc	status,2,c
   665  0010E2  D1D2               	goto	l2092
   666  0010E4  0E00               	movlw	0
   667  0010E6  6E1F               	movwf	set_directive@directive+1,c
   668  0010E8  0E04               	movlw	4
   669  0010EA  6E1E               	movwf	set_directive@directive,c
   670  0010EC  EC0E  F00B         	call	_set_directive	;wreg free
   671  0010F0  D1CB               	goto	l2092
   672  0010F2                     l1908:
   673                           
   674                           ;motor_control.c: 169: if(move_state!=4)set_directive(4);
   675  0010F2  5024               	movf	_move_state,w,c
   676  0010F4  0A04               	xorlw	4
   677  0010F6  1025               	iorwf	_move_state+1,w,c
   678  0010F8  B4D8               	btfsc	status,2,c
   679  0010FA  D1C6               	goto	l2092
   680  0010FC  0E00               	movlw	0
   681  0010FE  6E1F               	movwf	set_directive@directive+1,c
   682  001100  0E04               	movlw	4
   683  001102  6E1E               	movwf	set_directive@directive,c
   684  001104  EC0E  F00B         	call	_set_directive	;wreg free
   685  001108  D1BF               	goto	l2092
   686  00110A                     l1912:
   687                           
   688                           ;motor_control.c: 174: if(memory==0)
   689  00110A  5023               	movf	_memory+1,w,c
   690  00110C  1022               	iorwf	_memory,w,c
   691  00110E  A4D8               	btfss	status,2,c
   692  001110  D1BB               	goto	l2092
   693                           
   694                           ;motor_control.c: 175: if(move_state!=4)
   695  001112  5024               	movf	_move_state,w,c
   696  001114  0A04               	xorlw	4
   697  001116  1025               	iorwf	_move_state+1,w,c
   698  001118  B4D8               	btfsc	status,2,c
   699  00111A  D007               	goto	l1918
   700                           
   701                           ;motor_control.c: 176: set_directive(4);
   702  00111C  0E00               	movlw	0
   703  00111E  6E1F               	movwf	set_directive@directive+1,c
   704  001120  0E04               	movlw	4
   705  001122  6E1E               	movwf	set_directive@directive,c
   706  001124  EC0E  F00B         	call	_set_directive	;wreg free
   707  001128  D1AF               	goto	l2092
   708  00112A                     l1918:
   709                           
   710                           ;motor_control.c: 177: else if(memory==1)
   711  00112A  0422               	decf	_memory,w,c
   712  00112C  1023               	iorwf	_memory+1,w,c
   713  00112E  A4D8               	btfss	status,2,c
   714  001130  D1AB               	goto	l2092
   715                           
   716                           ;motor_control.c: 178: {
   717                           ;motor_control.c: 179: change_track();
   718  001132  ECB4  F00C         	call	_change_track	;wreg free
   719  001136  D1A8               	goto	l2092
   720  001138                     l1922:
   721                           
   722                           ;motor_control.c: 184: if(memory==0)
   723  001138  5023               	movf	_memory+1,w,c
   724  00113A  1022               	iorwf	_memory,w,c
   725  00113C  A4D8               	btfss	status,2,c
   726  00113E  D011               	goto	l1932
   727                           
   728                           ;motor_control.c: 185: if(move_state!=4){
   729  001140  5024               	movf	_move_state,w,c
   730  001142  0A04               	xorlw	4
   731  001144  1025               	iorwf	_move_state+1,w,c
   732  001146  B4D8               	btfsc	status,2,c
   733  001148  D007               	goto	l1928
   734                           
   735                           ;motor_control.c: 186: set_directive(4);
   736  00114A  0E00               	movlw	0
   737  00114C  6E1F               	movwf	set_directive@directive+1,c
   738  00114E  0E04               	movlw	4
   739  001150  6E1E               	movwf	set_directive@directive,c
   740  001152  EC0E  F00B         	call	_set_directive	;wreg free
   741                           
   742                           ;motor_control.c: 188: }
   743  001156  D005               	goto	l1932
   744  001158                     l1928:
   745                           
   746                           ;motor_control.c: 190: else if(memory==1)
   747  001158  0422               	decf	_memory,w,c
   748  00115A  1023               	iorwf	_memory+1,w,c
   749  00115C  B4D8               	btfsc	status,2,c
   750                           
   751                           ;motor_control.c: 191: {
   752                           ;motor_control.c: 192: change_track();
   753  00115E  ECB4  F00C         	call	_change_track	;wreg free
   754  001162                     l1932:
   755                           
   756                           ;motor_control.c: 193: }
   757                           ;motor_control.c: 194: count = 0;
   758  001162  0E00               	movlw	0
   759  001164  6E21               	movwf	_count+1,c
   760  001166  0E00               	movlw	0
   761  001168  6E20               	movwf	_count,c
   762                           
   763                           ;motor_control.c: 195: side_mem = 1;
   764  00116A  0E00               	movlw	0
   765  00116C  6E27               	movwf	_side_mem+1,c
   766  00116E  0E01               	movlw	1
   767  001170  D04A               	goto	L3
   768  001172                     l1936:
   769                           
   770                           ;motor_control.c: 199: if(memory==0)
   771  001172  5023               	movf	_memory+1,w,c
   772  001174  1022               	iorwf	_memory,w,c
   773  001176  A4D8               	btfss	status,2,c
   774  001178  D011               	goto	l1946
   775                           
   776                           ;motor_control.c: 200: if(move_state!=4){
   777  00117A  5024               	movf	_move_state,w,c
   778  00117C  0A04               	xorlw	4
   779  00117E  1025               	iorwf	_move_state+1,w,c
   780  001180  B4D8               	btfsc	status,2,c
   781  001182  D007               	goto	l1942
   782                           
   783                           ;motor_control.c: 201: set_directive(4);
   784  001184  0E00               	movlw	0
   785  001186  6E1F               	movwf	set_directive@directive+1,c
   786  001188  0E04               	movlw	4
   787  00118A  6E1E               	movwf	set_directive@directive,c
   788  00118C  EC0E  F00B         	call	_set_directive	;wreg free
   789                           
   790                           ;motor_control.c: 202: }
   791  001190  D005               	goto	l1946
   792  001192                     l1942:
   793                           
   794                           ;motor_control.c: 204: else if(memory==1)
   795  001192  0422               	decf	_memory,w,c
   796  001194  1023               	iorwf	_memory+1,w,c
   797  001196  B4D8               	btfsc	status,2,c
   798                           
   799                           ;motor_control.c: 205: {
   800                           ;motor_control.c: 206: change_track();
   801  001198  ECB4  F00C         	call	_change_track	;wreg free
   802  00119C                     l1946:
   803                           
   804                           ;motor_control.c: 207: }
   805                           ;motor_control.c: 209: count = 0;
   806  00119C  0E00               	movlw	0
   807  00119E  6E21               	movwf	_count+1,c
   808  0011A0  0E00               	movlw	0
   809  0011A2  6E20               	movwf	_count,c
   810                           
   811                           ;motor_control.c: 210: side_mem = 3;
   812  0011A4  0E00               	movlw	0
   813  0011A6  6E27               	movwf	_side_mem+1,c
   814  0011A8  0E03               	movlw	3
   815  0011AA  D02D               	goto	L3
   816  0011AC                     l1950:
   817                           
   818                           ;motor_control.c: 213: if(memory==0)
   819  0011AC  5023               	movf	_memory+1,w,c
   820  0011AE  1022               	iorwf	_memory,w,c
   821  0011B0  A4D8               	btfss	status,2,c
   822  0011B2  D7D7               	goto	l1932
   823                           
   824                           ;motor_control.c: 214: if(move_state!=4){
   825  0011B4  5024               	movf	_move_state,w,c
   826  0011B6  0A04               	xorlw	4
   827  0011B8  1025               	iorwf	_move_state+1,w,c
   828  0011BA  B4D8               	btfsc	status,2,c
   829  0011BC  D007               	goto	l1956
   830                           
   831                           ;motor_control.c: 215: set_directive(4);
   832  0011BE  0E00               	movlw	0
   833  0011C0  6E1F               	movwf	set_directive@directive+1,c
   834  0011C2  0E04               	movlw	4
   835  0011C4  6E1E               	movwf	set_directive@directive,c
   836  0011C6  EC0E  F00B         	call	_set_directive	;wreg free
   837                           
   838                           ;motor_control.c: 217: }
   839  0011CA  D7CB               	goto	l1932
   840  0011CC                     l1956:
   841                           
   842                           ;motor_control.c: 219: else if(memory==1)
   843  0011CC  0422               	decf	_memory,w,c
   844  0011CE  1023               	iorwf	_memory+1,w,c
   845  0011D0  B4D8               	btfsc	status,2,c
   846                           
   847                           ;motor_control.c: 220: {
   848                           ;motor_control.c: 221: change_track();
   849  0011D2  ECB4  F00C         	call	_change_track	;wreg free
   850  0011D6  D7C5               	goto	l1932
   851  0011D8                     l1964:
   852                           
   853                           ;motor_control.c: 228: if(memory==0)
   854  0011D8  5023               	movf	_memory+1,w,c
   855  0011DA  1022               	iorwf	_memory,w,c
   856  0011DC  A4D8               	btfss	status,2,c
   857  0011DE  D7DE               	goto	l1946
   858                           
   859                           ;motor_control.c: 229: if(move_state!=4){
   860  0011E0  5024               	movf	_move_state,w,c
   861  0011E2  0A04               	xorlw	4
   862  0011E4  1025               	iorwf	_move_state+1,w,c
   863  0011E6  B4D8               	btfsc	status,2,c
   864  0011E8  D007               	goto	l1970
   865                           
   866                           ;motor_control.c: 230: set_directive(4);
   867  0011EA  0E00               	movlw	0
   868  0011EC  6E1F               	movwf	set_directive@directive+1,c
   869  0011EE  0E04               	movlw	4
   870  0011F0  6E1E               	movwf	set_directive@directive,c
   871  0011F2  EC0E  F00B         	call	_set_directive	;wreg free
   872                           
   873                           ;motor_control.c: 231: }
   874  0011F6  D7D2               	goto	l1946
   875  0011F8                     l1970:
   876                           
   877                           ;motor_control.c: 233: else if(memory==1)
   878  0011F8  0422               	decf	_memory,w,c
   879  0011FA  1023               	iorwf	_memory+1,w,c
   880  0011FC  A4D8               	btfss	status,2,c
   881  0011FE  D7CE               	goto	l1946
   882                           
   883                           ;motor_control.c: 234: {
   884                           ;motor_control.c: 235: change_track();
   885  001200  ECB4  F00C         	call	_change_track	;wreg free
   886  001204  D7CB               	goto	l1946
   887  001206                     L3:
   888  001206  6E26               	movwf	_side_mem,c
   889                           
   890                           ;motor_control.c: 239: break;
   891  001208  D13F               	goto	l2092
   892  00120A                     l1978:
   893                           
   894                           ;motor_control.c: 241: if(memory==0)
   895  00120A  5023               	movf	_memory+1,w,c
   896  00120C  1022               	iorwf	_memory,w,c
   897  00120E  A4D8               	btfss	status,2,c
   898  001210  D7C5               	goto	l1946
   899                           
   900                           ;motor_control.c: 242: if(move_state!=4){
   901  001212  5024               	movf	_move_state,w,c
   902  001214  0A04               	xorlw	4
   903  001216  1025               	iorwf	_move_state+1,w,c
   904  001218  B4D8               	btfsc	status,2,c
   905  00121A  D007               	goto	l1984
   906                           
   907                           ;motor_control.c: 243: set_directive(4);
   908  00121C  0E00               	movlw	0
   909  00121E  6E1F               	movwf	set_directive@directive+1,c
   910  001220  0E04               	movlw	4
   911  001222  6E1E               	movwf	set_directive@directive,c
   912  001224  EC0E  F00B         	call	_set_directive	;wreg free
   913                           
   914                           ;motor_control.c: 244: }
   915  001228  D7B9               	goto	l1946
   916  00122A                     l1984:
   917                           
   918                           ;motor_control.c: 245: else if(memory==1)
   919  00122A  0422               	decf	_memory,w,c
   920  00122C  1023               	iorwf	_memory+1,w,c
   921  00122E  B4D8               	btfsc	status,2,c
   922                           
   923                           ;motor_control.c: 246: {
   924                           ;motor_control.c: 247: change_track();
   925  001230  ECB4  F00C         	call	_change_track	;wreg free
   926  001234  D7B3               	goto	l1946
   927  001236                     l1992:
   928                           
   929                           ;motor_control.c: 254: if(memory==0)
   930  001236  5023               	movf	_memory+1,w,c
   931  001238  1022               	iorwf	_memory,w,c
   932  00123A  A4D8               	btfss	status,2,c
   933  00123C  D011               	goto	l2002
   934                           
   935                           ;motor_control.c: 255: if(move_state!=4){
   936  00123E  5024               	movf	_move_state,w,c
   937  001240  0A04               	xorlw	4
   938  001242  1025               	iorwf	_move_state+1,w,c
   939  001244  B4D8               	btfsc	status,2,c
   940  001246  D007               	goto	l1998
   941                           
   942                           ;motor_control.c: 256: set_directive(4);
   943  001248  0E00               	movlw	0
   944  00124A  6E1F               	movwf	set_directive@directive+1,c
   945  00124C  0E04               	movlw	4
   946  00124E  6E1E               	movwf	set_directive@directive,c
   947  001250  EC0E  F00B         	call	_set_directive	;wreg free
   948                           
   949                           ;motor_control.c: 257: }
   950  001254  D005               	goto	l2002
   951  001256                     l1998:
   952                           
   953                           ;motor_control.c: 258: else if(memory==1)
   954  001256  0422               	decf	_memory,w,c
   955  001258  1023               	iorwf	_memory+1,w,c
   956  00125A  B4D8               	btfsc	status,2,c
   957                           
   958                           ;motor_control.c: 259: {
   959                           ;motor_control.c: 260: change_track();
   960  00125C  ECB4  F00C         	call	_change_track	;wreg free
   961  001260                     l2002:
   962                           
   963                           ;motor_control.c: 261: }
   964                           ;motor_control.c: 262: side_mem = 1;
   965  001260  0E00               	movlw	0
   966  001262  6E27               	movwf	_side_mem+1,c
   967  001264  0E01               	movlw	1
   968  001266  6E26               	movwf	_side_mem,c
   969                           
   970                           ;motor_control.c: 263: count = 0;
   971  001268  0E00               	movlw	0
   972  00126A  6E21               	movwf	_count+1,c
   973  00126C  0E00               	movlw	0
   974  00126E  6E20               	movwf	_count,c
   975                           
   976                           ;motor_control.c: 264: break;
   977  001270  D10B               	goto	l2092
   978  001272                     l2006:
   979                           
   980                           ;motor_control.c: 268: if(move_state!=5)set_directive(5);
   981  001272  5024               	movf	_move_state,w,c
   982  001274  0A05               	xorlw	5
   983  001276  1025               	iorwf	_move_state+1,w,c
   984  001278  B4D8               	btfsc	status,2,c
   985  00127A  D106               	goto	l2092
   986  00127C  0E00               	movlw	0
   987  00127E  6E1F               	movwf	set_directive@directive+1,c
   988  001280  0E05               	movlw	5
   989  001282  6E1E               	movwf	set_directive@directive,c
   990  001284  EC0E  F00B         	call	_set_directive	;wreg free
   991  001288  D0FF               	goto	l2092
   992  00128A                     l2010:
   993                           
   994                           ;motor_control.c: 272: if(move_state!=2)set_directive(2);
   995  00128A  5024               	movf	_move_state,w,c
   996  00128C  0A02               	xorlw	2
   997  00128E  1025               	iorwf	_move_state+1,w,c
   998  001290  B4D8               	btfsc	status,2,c
   999  001292  D0FA               	goto	l2092
  1000  001294  0E00               	movlw	0
  1001  001296  6E1F               	movwf	set_directive@directive+1,c
  1002  001298  0E02               	movlw	2
  1003  00129A  6E1E               	movwf	set_directive@directive,c
  1004  00129C  EC0E  F00B         	call	_set_directive	;wreg free
  1005  0012A0  D0F3               	goto	l2092
  1006  0012A2                     l2014:
  1007                           
  1008                           ;motor_control.c: 276: if(move_state!=6)set_directive(6);
  1009  0012A2  5024               	movf	_move_state,w,c
  1010  0012A4  0A06               	xorlw	6
  1011  0012A6  1025               	iorwf	_move_state+1,w,c
  1012  0012A8  B4D8               	btfsc	status,2,c
  1013  0012AA  D0EE               	goto	l2092
  1014  0012AC  0E00               	movlw	0
  1015  0012AE  6E1F               	movwf	set_directive@directive+1,c
  1016  0012B0  0E06               	movlw	6
  1017  0012B2  6E1E               	movwf	set_directive@directive,c
  1018  0012B4  EC0E  F00B         	call	_set_directive	;wreg free
  1019  0012B8  D0E7               	goto	l2092
  1020  0012BA                     l2018:
  1021                           
  1022                           ;motor_control.c: 280: if(move_state!=1)set_directive(1);
  1023  0012BA  0424               	decf	_move_state,w,c
  1024  0012BC  1025               	iorwf	_move_state+1,w,c
  1025  0012BE  B4D8               	btfsc	status,2,c
  1026  0012C0  D0E3               	goto	l2092
  1027  0012C2  0E00               	movlw	0
  1028  0012C4  6E1F               	movwf	set_directive@directive+1,c
  1029  0012C6  0E01               	movlw	1
  1030  0012C8  6E1E               	movwf	set_directive@directive,c
  1031  0012CA  EC0E  F00B         	call	_set_directive	;wreg free
  1032  0012CE  D0DC               	goto	l2092
  1033  0012D0                     l2022:
  1034                           
  1035                           ;motor_control.c: 287: if(tmr_state!=1){
  1036  0012D0  042A               	decf	_tmr_state,w,c
  1037  0012D2  102B               	iorwf	_tmr_state+1,w,c
  1038  0012D4  B4D8               	btfsc	status,2,c
  1039  0012D6  D00D               	goto	l2030
  1040                           
  1041                           ;motor_control.c: 288: if(move_state!=4)set_directive(4);
  1042  0012D8  5024               	movf	_move_state,w,c
  1043  0012DA  0A04               	xorlw	4
  1044  0012DC  1025               	iorwf	_move_state+1,w,c
  1045  0012DE  B4D8               	btfsc	status,2,c
  1046  0012E0  D006               	goto	l2028
  1047  0012E2  0E00               	movlw	0
  1048  0012E4  6E1F               	movwf	set_directive@directive+1,c
  1049  0012E6  0E04               	movlw	4
  1050  0012E8  6E1E               	movwf	set_directive@directive,c
  1051  0012EA  EC0E  F00B         	call	_set_directive	;wreg free
  1052  0012EE                     l2028:
  1053                           
  1054                           ;motor_control.c: 289: start_tmr();
  1055  0012EE  EC1B  F00F         	call	_start_tmr	;wreg free
  1056  0012F2                     l2030:
  1057                           
  1058                           ;motor_control.c: 290: }
  1059                           ;motor_control.c: 292: if(count<=1000){
  1060  0012F2  5021               	movf	_count+1,w,c
  1061  0012F4  0A80               	xorlw	128
  1062  0012F6  6EF3               	movwf	prodl,c
  1063  0012F8  0E83               	movlw	131
  1064  0012FA  5CF3               	subwf	prodl,w,c
  1065  0012FC  0EE9               	movlw	233
  1066  0012FE  B4D8               	btfsc	status,2,c
  1067  001300  5C20               	subwf	_count,w,c
  1068  001302  B0D8               	btfsc	status,0,c
  1069  001304  D019               	goto	l2042
  1070                           
  1071                           ;motor_control.c: 293: if(side_mem==1)set_directive(0);
  1072  001306  0426               	decf	_side_mem,w,c
  1073  001308  1027               	iorwf	_side_mem+1,w,c
  1074  00130A  A4D8               	btfss	status,2,c
  1075  00130C  D006               	goto	l2036
  1076  00130E  0E00               	movlw	0
  1077  001310  6E1F               	movwf	set_directive@directive+1,c
  1078  001312  0E00               	movlw	0
  1079  001314  6E1E               	movwf	set_directive@directive,c
  1080  001316  EC0E  F00B         	call	_set_directive	;wreg free
  1081  00131A                     l2036:
  1082                           
  1083                           ;motor_control.c: 294: if(side_mem==3)set_directive(7);
  1084  00131A  5026               	movf	_side_mem,w,c
  1085  00131C  0A03               	xorlw	3
  1086  00131E  1027               	iorwf	_side_mem+1,w,c
  1087  001320  A4D8               	btfss	status,2,c
  1088  001322  D006               	goto	l2040
  1089  001324  0E00               	movlw	0
  1090  001326  6E1F               	movwf	set_directive@directive+1,c
  1091  001328  0E07               	movlw	7
  1092  00132A  6E1E               	movwf	set_directive@directive,c
  1093  00132C  EC0E  F00B         	call	_set_directive	;wreg free
  1094  001330                     l2040:
  1095                           
  1096                           ;motor_control.c: 295: side_mem=2;`
  1097  001330  0E00               	movlw	0
  1098  001332  6E27               	movwf	_side_mem+1,c
  1099  001334  0E02               	movlw	2
  1100  001336  6E26               	movwf	_side_mem,c
  1101  001338                     l2042:
  1102                           
  1103                           ;motor_control.c: 297: }
  1104                           ;motor_control.c: 312: if(tmr_state==1 && ReadTimer0()>35000){
  1105  001338  042A               	decf	_tmr_state,w,c
  1106  00133A  102B               	iorwf	_tmr_state+1,w,c
  1107  00133C  A4D8               	btfss	status,2,c
  1108  00133E  D0A4               	goto	l2092
  1109  001340  EC64  F00F         	call	_ReadTimer0	;wreg free
  1110  001344  0EB9               	movlw	185
  1111  001346  5C0F               	subwf	?_ReadTimer0,w,c
  1112  001348  0E88               	movlw	136
  1113  00134A  5810               	subwfb	?_ReadTimer0+1,w,c
  1114  00134C  A0D8               	btfss	status,0,c
  1115  00134E  D09C               	goto	l2092
  1116                           
  1117                           ;motor_control.c: 314: set_directive(0);
  1118  001350  0E00               	movlw	0
  1119  001352  6E1F               	movwf	set_directive@directive+1,c
  1120  001354  0E00               	movlw	0
  1121  001356  6E1E               	movwf	set_directive@directive,c
  1122  001358  EC0E  F00B         	call	_set_directive	;wreg free
  1123  00135C                     l404:
  1124  00135C  A4F2               	btfss	intcon,2,c	;volatile
  1125  00135E  D7FE               	goto	l404
  1126  001360  EC64  F00F         	call	_ReadTimer0	;wreg free
  1127  001364  0EC8               	movlw	200
  1128  001366  5C0F               	subwf	?_ReadTimer0,w,c
  1129  001368  0E32               	movlw	50
  1130  00136A  5810               	subwfb	?_ReadTimer0+1,w,c
  1131  00136C  A0D8               	btfss	status,0,c
  1132  00136E  D7F6               	goto	l404
  1133                           
  1134                           ;motor_control.c: 316: clr_tmr();
  1135  001370  EC84  F00F         	call	_clr_tmr	;wreg free
  1136  001374  D089               	goto	l2092
  1137  001376                     l2052:
  1138                           
  1139                           ;motor_control.c: 322: if(tmr_state==1 && side_mem!=2 && ReadTimer0() < 20000){
  1140  001376  042A               	decf	_tmr_state,w,c
  1141  001378  102B               	iorwf	_tmr_state+1,w,c
  1142  00137A  A4D8               	btfss	status,2,c
  1143  00137C  D026               	goto	l2068
  1144  00137E  5026               	movf	_side_mem,w,c
  1145  001380  0A02               	xorlw	2
  1146  001382  1027               	iorwf	_side_mem+1,w,c
  1147  001384  B4D8               	btfsc	status,2,c
  1148  001386  D021               	goto	l2068
  1149  001388  EC64  F00F         	call	_ReadTimer0	;wreg free
  1150  00138C  0E20               	movlw	32
  1151  00138E  5C0F               	subwf	?_ReadTimer0,w,c
  1152  001390  0E4E               	movlw	78
  1153  001392  5810               	subwfb	?_ReadTimer0+1,w,c
  1154  001394  B0D8               	btfsc	status,0,c
  1155  001396  D019               	goto	l2068
  1156                           
  1157                           ;motor_control.c: 323: if(side_mem==1)set_directive(0);
  1158  001398  0426               	decf	_side_mem,w,c
  1159  00139A  1027               	iorwf	_side_mem+1,w,c
  1160  00139C  A4D8               	btfss	status,2,c
  1161  00139E  D006               	goto	l2062
  1162  0013A0  0E00               	movlw	0
  1163  0013A2  6E1F               	movwf	set_directive@directive+1,c
  1164  0013A4  0E00               	movlw	0
  1165  0013A6  6E1E               	movwf	set_directive@directive,c
  1166  0013A8  EC0E  F00B         	call	_set_directive	;wreg free
  1167  0013AC                     l2062:
  1168                           
  1169                           ;motor_control.c: 324: if(side_mem==3)set_directive(7);
  1170  0013AC  5026               	movf	_side_mem,w,c
  1171  0013AE  0A03               	xorlw	3
  1172  0013B0  1027               	iorwf	_side_mem+1,w,c
  1173  0013B2  A4D8               	btfss	status,2,c
  1174  0013B4  D006               	goto	l2066
  1175  0013B6  0E00               	movlw	0
  1176  0013B8  6E1F               	movwf	set_directive@directive+1,c
  1177  0013BA  0E07               	movlw	7
  1178  0013BC  6E1E               	movwf	set_directive@directive,c
  1179  0013BE  EC0E  F00B         	call	_set_directive	;wreg free
  1180  0013C2                     l2066:
  1181                           
  1182                           ;motor_control.c: 325: side_mem=2;
  1183  0013C2  0E00               	movlw	0
  1184  0013C4  6E27               	movwf	_side_mem+1,c
  1185  0013C6  0E02               	movlw	2
  1186  0013C8  6E26               	movwf	_side_mem,c
  1187  0013CA                     l2068:
  1188                           
  1189                           ;motor_control.c: 364: if(tmr_state!=1){
  1190  0013CA  042A               	decf	_tmr_state,w,c
  1191  0013CC  102B               	iorwf	_tmr_state+1,w,c
  1192  0013CE  B4D8               	btfsc	status,2,c
  1193  0013D0  D00D               	goto	l2076
  1194                           
  1195                           ;motor_control.c: 365: if(move_state!=4)set_directive(4);
  1196  0013D2  5024               	movf	_move_state,w,c
  1197  0013D4  0A04               	xorlw	4
  1198  0013D6  1025               	iorwf	_move_state+1,w,c
  1199  0013D8  B4D8               	btfsc	status,2,c
  1200  0013DA  D006               	goto	l2074
  1201  0013DC  0E00               	movlw	0
  1202  0013DE  6E1F               	movwf	set_directive@directive+1,c
  1203  0013E0  0E04               	movlw	4
  1204  0013E2  6E1E               	movwf	set_directive@directive,c
  1205  0013E4  EC0E  F00B         	call	_set_directive	;wreg free
  1206  0013E8                     l2074:
  1207                           
  1208                           ;motor_control.c: 366: start_tmr();
  1209  0013E8  EC1B  F00F         	call	_start_tmr	;wreg free
  1210  0013EC                     l2076:
  1211                           
  1212                           ;motor_control.c: 367: }
  1213                           ;motor_control.c: 369: if(tmr_state==1){
  1214  0013EC  042A               	decf	_tmr_state,w,c
  1215  0013EE  102B               	iorwf	_tmr_state+1,w,c
  1216  0013F0  A4D8               	btfss	status,2,c
  1217  0013F2  D00F               	goto	l2086
  1218                           
  1219                           ;motor_control.c: 370: if(ReadTimer0()>15767){
  1220  0013F4  EC64  F00F         	call	_ReadTimer0	;wreg free
  1221  0013F8  0E98               	movlw	152
  1222  0013FA  5C0F               	subwf	?_ReadTimer0,w,c
  1223  0013FC  0E3D               	movlw	61
  1224  0013FE  5810               	subwfb	?_ReadTimer0+1,w,c
  1225  001400  A0D8               	btfss	status,0,c
  1226  001402  D007               	goto	l2086
  1227                           
  1228                           ;motor_control.c: 371: full_stp();
  1229  001404  EC8D  F00E         	call	_full_stp	;wreg free
  1230                           
  1231                           ;motor_control.c: 373: while(SeeLine.b.Center == 1)check_state();
  1232  001408  D002               	goto	l2084
  1233  00140A                     l2082:
  1234  00140A  EC96  F00F         	call	_check_state	;wreg free
  1235  00140E                     l2084:
  1236  00140E  B42C               	btfsc	_SeeLine,2,c
  1237  001410  D7FC               	goto	l2082
  1238  001412                     l2086:
  1239                           
  1240                           ;motor_control.c: 374: }
  1241                           ;motor_control.c: 375: }
  1242                           ;motor_control.c: 376: check_state();
  1243  001412  EC96  F00F         	call	_check_state	;wreg free
  1244                           
  1245                           ;motor_control.c: 378: break;
  1246  001416  D038               	goto	l2092
  1247  001418                     l2090:
  1248  001418  502C               	movf	_SeeLine,w,c
  1249  00141A  0B1F               	andlw	31
  1250                           
  1251                           ; Switch size 1, requested type "space"
  1252                           ; Number of cases is 18, Range of values is 0 to 31
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte           55    28 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257  00141C  0A00               	xorlw	0	; case 0
  1258  00141E  B4D8               	btfsc	status,2,c
  1259  001420  D757               	goto	l2022
  1260  001422  0A01               	xorlw	1	; case 1
  1261  001424  B4D8               	btfsc	status,2,c
  1262  001426  D73D               	goto	l2014
  1263  001428  0A03               	xorlw	3	; case 2
  1264  00142A  B4D8               	btfsc	status,2,c
  1265  00142C  D722               	goto	l2006
  1266  00142E  0A06               	xorlw	6	; case 4
  1267  001430  B4D8               	btfsc	status,2,c
  1268  001432  D637               	goto	l1892
  1269  001434  0A01               	xorlw	1	; case 5
  1270  001436  B4D8               	btfsc	status,2,c
  1271  001438  D668               	goto	l1912
  1272  00143A  0A03               	xorlw	3	; case 6
  1273  00143C  B4D8               	btfsc	status,2,c
  1274  00143E  D659               	goto	l1908
  1275  001440  0A01               	xorlw	1	; case 7
  1276  001442  B4D8               	btfsc	status,2,c
  1277  001444  D696               	goto	l1936
  1278  001446  0A0F               	xorlw	15	; case 8
  1279  001448  B4D8               	btfsc	status,2,c
  1280  00144A  D71F               	goto	l2010
  1281  00144C  0A04               	xorlw	4	; case 12
  1282  00144E  B4D8               	btfsc	status,2,c
  1283  001450  D644               	goto	l1904
  1284  001452  0A03               	xorlw	3	; case 15
  1285  001454  B4D8               	btfsc	status,2,c
  1286  001456  D6C0               	goto	l1964
  1287  001458  0A1F               	xorlw	31	; case 16
  1288  00145A  B4D8               	btfsc	status,2,c
  1289  00145C  D72E               	goto	l2018
  1290  00145E  0A01               	xorlw	1	; case 17
  1291  001460  B4D8               	btfsc	status,2,c
  1292  001462  D789               	goto	l2052
  1293  001464  0A05               	xorlw	5	; case 20
  1294  001466  B4D8               	btfsc	status,2,c
  1295  001468  D628               	goto	l1896
  1296  00146A  0A03               	xorlw	3	; case 23
  1297  00146C  B4D8               	btfsc	status,2,c
  1298  00146E  D6CD               	goto	l1978
  1299  001470  0A0B               	xorlw	11	; case 28
  1300  001472  B4D8               	btfsc	status,2,c
  1301  001474  D661               	goto	l1922
  1302  001476  0A01               	xorlw	1	; case 29
  1303  001478  B4D8               	btfsc	status,2,c
  1304  00147A  D6DD               	goto	l1992
  1305  00147C  0A03               	xorlw	3	; case 30
  1306  00147E  B4D8               	btfsc	status,2,c
  1307  001480  D695               	goto	l1950
  1308  001482  0A01               	xorlw	1	; case 31
  1309  001484  B4D8               	btfsc	status,2,c
  1310  001486  D7A1               	goto	l2068
  1311  001488                     l2092:
  1312                           
  1313                           ;motor_control.c: 383: count++;
  1314  001488  4A20               	infsnz	_count,f,c
  1315  00148A  2A21               	incf	_count+1,f,c
  1316  00148C  0012               	return	
  1317  00148E                     __end_of_motor_control:
  1318                           	opt stack 0
  1319                           prodl	equ	0xFF3
  1320                           intcon	equ	0xFF2
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _start_tmr *****************
  1326 ;; Defined at:
  1327 ;;		line 45 in file "../motor_control.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    2
  1348 ;; This function calls:
  1349 ;;		_WriteTimer0
  1350 ;; This function is called by:
  1351 ;;		_motor_control
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text2
  1356  001E36                     __ptext2:
  1357                           	opt stack 0
  1358  001E36                     _start_tmr:
  1359                           	opt stack 27
  1360                           
  1361                           ;motor_control.c: 46: TMR0IF = 0;
  1362                           
  1363                           ;incstack = 0
  1364  001E36  94F2               	bcf	intcon,2,c	;volatile
  1365                           
  1366                           ;motor_control.c: 47: WriteTimer0(0u);
  1367  001E38  0E00               	movlw	0
  1368  001E3A  6E10               	movwf	WriteTimer0@timer0+1,c
  1369  001E3C  0E00               	movlw	0
  1370  001E3E  6E0F               	movwf	WriteTimer0@timer0,c
  1371  001E40  EC5B  F00F         	call	_WriteTimer0	;wreg free
  1372                           
  1373                           ;motor_control.c: 48: tmr_state = 1;
  1374  001E44  0E00               	movlw	0
  1375  001E46  6E2B               	movwf	_tmr_state+1,c
  1376  001E48  0E01               	movlw	1
  1377  001E4A  6E2A               	movwf	_tmr_state,c
  1378  001E4C  0012               	return	
  1379  001E4E                     __end_of_start_tmr:
  1380                           	opt stack 0
  1381                           prodl	equ	0xFF3
  1382                           intcon	equ	0xFF2
  1383                           postinc0	equ	0xFEE
  1384                           wreg	equ	0xFE8
  1385                           status	equ	0xFD8
  1386                           
  1387 ;; *************** function _WriteTimer0 *****************
  1388 ;; Defined at:
  1389 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  timer0          2   14[COMRAM] unsigned int 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  timer           2   16[COMRAM] struct Timers
  1394 ;; Return value:  Size  Location     Type
  1395 ;;		None               void
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:        4 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_start_tmr
  1414 ;;		_start_tmr1
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text3
  1419  001EB6                     __ptext3:
  1420                           	opt stack 0
  1421  001EB6                     _WriteTimer0:
  1422                           	opt stack 27
  1423                           
  1424                           ;incstack = 0
  1425  001EB6  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1426  001EBA  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1427  001EBE  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1428  001EC2  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1429  001EC6  0012               	return	
  1430  001EC8                     __end_of_WriteTimer0:
  1431                           	opt stack 0
  1432                           prodl	equ	0xFF3
  1433                           intcon	equ	0xFF2
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _clr_tmr *****************
  1439 ;; Defined at:
  1440 ;;		line 52 in file "../motor_control.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;		None               void
  1447 ;; Registers used:
  1448 ;;		wreg, status,2
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    1
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_motor_control
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text4
  1469  001F08                     __ptext4:
  1470                           	opt stack 0
  1471  001F08                     _clr_tmr:
  1472                           	opt stack 28
  1473                           
  1474                           ;motor_control.c: 53: TMR0IF = 0;
  1475                           
  1476                           ;incstack = 0
  1477  001F08  94F2               	bcf	intcon,2,c	;volatile
  1478                           
  1479                           ;motor_control.c: 54: tmr_state = 0;
  1480  001F0A  0E00               	movlw	0
  1481  001F0C  6E2B               	movwf	_tmr_state+1,c
  1482  001F0E  0E00               	movlw	0
  1483  001F10  6E2A               	movwf	_tmr_state,c
  1484  001F12  0012               	return	
  1485  001F14                     __end_of_clr_tmr:
  1486                           	opt stack 0
  1487                           prodl	equ	0xFF3
  1488                           intcon	equ	0xFF2
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function _check_state *****************
  1494 ;; Defined at:
  1495 ;;		line 101 in file "../motor_control.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2  312[COMRAM] int 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    4
  1516 ;; This function calls:
  1517 ;;		_check_sensors
  1518 ;;		_set_leds
  1519 ;; This function is called by:
  1520 ;;		_motor_control
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text5
  1525  001F2C                     __ptext5:
  1526                           	opt stack 0
  1527  001F2C                     _check_state:
  1528                           	opt stack 25
  1529                           
  1530                           ;motor_control.c: 102: check_sensors();
  1531                           
  1532                           ;incstack = 0
  1533  001F2C  ECAC  F00A         	call	_check_sensors	;wreg free
  1534                           
  1535                           ;motor_control.c: 103: set_leds();
  1536  001F30  EC02  F00C         	call	_set_leds	;wreg free
  1537  001F34  0012               	return	
  1538  001F36                     __end_of_check_state:
  1539                           	opt stack 0
  1540                           prodl	equ	0xFF3
  1541                           intcon	equ	0xFF2
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _set_leds *****************
  1547 ;; Defined at:
  1548 ;;		line 254 in file "../sumovore.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;Total ram usage:        1 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;;		_check_state
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text6
  1578  001804                     __ptext6:
  1579                           	opt stack 0
  1580  001804                     _set_leds:
  1581                           	opt stack 29
  1582                           
  1583                           ;sumovore.c: 256: PORTDbits.RD0=!SeeLine.b.Left;
  1584                           
  1585                           ;incstack = 0
  1586  001804  B82C               	btfsc	_SeeLine,4,c
  1587  001806  D002               	goto	u210
  1588  001808  0E01               	movlw	1
  1589  00180A  D001               	goto	u216
  1590  00180C                     u210:
  1591  00180C  0E00               	movlw	0
  1592  00180E                     u216:
  1593  00180E  6E0F               	movwf	??_set_leds& (0+255),c
  1594  001810  5083               	movf	3971,w,c	;volatile
  1595  001812  180F               	xorwf	??_set_leds,w,c
  1596  001814  0BFE               	andlw	-2
  1597  001816  180F               	xorwf	??_set_leds,w,c
  1598  001818  6E83               	movwf	3971,c	;volatile
  1599                           
  1600                           ;sumovore.c: 257: PORTDbits.RD1=!SeeLine.b.CntLeft;
  1601  00181A  B62C               	btfsc	_SeeLine,3,c
  1602  00181C  D002               	goto	u220
  1603  00181E  0E01               	movlw	1
  1604  001820  D001               	goto	u226
  1605  001822                     u220:
  1606  001822  0E00               	movlw	0
  1607  001824                     u226:
  1608  001824  6E0F               	movwf	??_set_leds& (0+255),c
  1609  001826  460F               	rlncf	??_set_leds,f,c
  1610  001828  5083               	movf	3971,w,c	;volatile
  1611  00182A  180F               	xorwf	??_set_leds,w,c
  1612  00182C  0BFD               	andlw	-3
  1613  00182E  180F               	xorwf	??_set_leds,w,c
  1614  001830  6E83               	movwf	3971,c	;volatile
  1615                           
  1616                           ;sumovore.c: 258: PORTDbits.RD2=!SeeLine.b.Center;
  1617  001832  B42C               	btfsc	_SeeLine,2,c
  1618  001834  D002               	goto	u230
  1619  001836  0E01               	movlw	1
  1620  001838  D001               	goto	u236
  1621  00183A                     u230:
  1622  00183A  0E00               	movlw	0
  1623  00183C                     u236:
  1624  00183C  6E0F               	movwf	??_set_leds& (0+255),c
  1625  00183E  460F               	rlncf	??_set_leds,f,c
  1626  001840  460F               	rlncf	??_set_leds,f,c
  1627  001842  5083               	movf	3971,w,c	;volatile
  1628  001844  180F               	xorwf	??_set_leds,w,c
  1629  001846  0BFB               	andlw	-5
  1630  001848  180F               	xorwf	??_set_leds,w,c
  1631  00184A  6E83               	movwf	3971,c	;volatile
  1632                           
  1633                           ;sumovore.c: 259: PORTDbits.RD3=!SeeLine.b.CntRight;
  1634  00184C  B22C               	btfsc	_SeeLine,1,c
  1635  00184E  D002               	goto	u240
  1636  001850  0E01               	movlw	1
  1637  001852  D001               	goto	u246
  1638  001854                     u240:
  1639  001854  0E00               	movlw	0
  1640  001856                     u246:
  1641  001856  6E0F               	movwf	??_set_leds& (0+255),c
  1642  001858  460F               	rlncf	??_set_leds,f,c
  1643  00185A  460F               	rlncf	??_set_leds,f,c
  1644  00185C  460F               	rlncf	??_set_leds,f,c
  1645  00185E  5083               	movf	3971,w,c	;volatile
  1646  001860  180F               	xorwf	??_set_leds,w,c
  1647  001862  0BF7               	andlw	-9
  1648  001864  180F               	xorwf	??_set_leds,w,c
  1649  001866  6E83               	movwf	3971,c	;volatile
  1650                           
  1651                           ;sumovore.c: 260: PORTDbits.RD4=!SeeLine.b.Right;
  1652  001868  B02C               	btfsc	_SeeLine,0,c
  1653  00186A  D002               	goto	u250
  1654  00186C  0E01               	movlw	1
  1655  00186E  D001               	goto	u256
  1656  001870                     u250:
  1657  001870  0E00               	movlw	0
  1658  001872                     u256:
  1659  001872  6E0F               	movwf	??_set_leds& (0+255),c
  1660  001874  3A0F               	swapf	??_set_leds,f,c
  1661  001876  5083               	movf	3971,w,c	;volatile
  1662  001878  180F               	xorwf	??_set_leds,w,c
  1663  00187A  0BEF               	andlw	-17
  1664  00187C  180F               	xorwf	??_set_leds,w,c
  1665  00187E  6E83               	movwf	3971,c	;volatile
  1666  001880  0012               	return	
  1667  001882                     __end_of_set_leds:
  1668                           	opt stack 0
  1669                           prodl	equ	0xFF3
  1670                           intcon	equ	0xFF2
  1671                           postinc0	equ	0xFEE
  1672                           wreg	equ	0xFE8
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _check_sensors *****************
  1676 ;; Defined at:
  1677 ;;		line 240 in file "../sumovore.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;Total ram usage:        1 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    3
  1698 ;; This function calls:
  1699 ;;		_adc
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;;		_check_state
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text7
  1707  001558                     __ptext7:
  1708                           	opt stack 0
  1709  001558                     _check_sensors:
  1710                           	opt stack 25
  1711                           
  1712                           ;sumovore.c: 242: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  1713                           
  1714                           ;incstack = 0
  1715  001558  0E87               	movlw	135
  1716  00155A  ECA0  F00E         	call	_adc
  1717  00155E  5011               	movf	?_adc,w,c
  1718  001560  5C28               	subwf	_threshold,w,c
  1719  001562  5012               	movf	?_adc+1,w,c
  1720  001564  5829               	subwfb	_threshold+1,w,c
  1721  001566  B0D8               	btfsc	status,0,c
  1722  001568  D002               	goto	u160
  1723  00156A  0E01               	movlw	1
  1724  00156C  D001               	goto	u166
  1725  00156E                     u160:
  1726  00156E  0E00               	movlw	0
  1727  001570                     u166:
  1728  001570  6E14               	movwf	??_check_sensors& (0+255),c
  1729  001572  3A14               	swapf	??_check_sensors,f,c
  1730  001574  502C               	movf	_SeeLine,w,c
  1731  001576  1814               	xorwf	??_check_sensors,w,c
  1732  001578  0BEF               	andlw	-17
  1733  00157A  1814               	xorwf	??_check_sensors,w,c
  1734  00157C  6E2C               	movwf	_SeeLine,c
  1735                           
  1736                           ;sumovore.c: 243: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  1737  00157E  0E8F               	movlw	143
  1738  001580  ECA0  F00E         	call	_adc
  1739  001584  5011               	movf	?_adc,w,c
  1740  001586  5C28               	subwf	_threshold,w,c
  1741  001588  5012               	movf	?_adc+1,w,c
  1742  00158A  5829               	subwfb	_threshold+1,w,c
  1743  00158C  B0D8               	btfsc	status,0,c
  1744  00158E  D002               	goto	u170
  1745  001590  0E01               	movlw	1
  1746  001592  D001               	goto	u176
  1747  001594                     u170:
  1748  001594  0E00               	movlw	0
  1749  001596                     u176:
  1750  001596  6E14               	movwf	??_check_sensors& (0+255),c
  1751  001598  4614               	rlncf	??_check_sensors,f,c
  1752  00159A  4614               	rlncf	??_check_sensors,f,c
  1753  00159C  4614               	rlncf	??_check_sensors,f,c
  1754  00159E  502C               	movf	_SeeLine,w,c
  1755  0015A0  1814               	xorwf	??_check_sensors,w,c
  1756  0015A2  0BF7               	andlw	-9
  1757  0015A4  1814               	xorwf	??_check_sensors,w,c
  1758  0015A6  6E2C               	movwf	_SeeLine,c
  1759                           
  1760                           ;sumovore.c: 244: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  1761  0015A8  0E97               	movlw	151
  1762  0015AA  ECA0  F00E         	call	_adc
  1763  0015AE  5011               	movf	?_adc,w,c
  1764  0015B0  5C28               	subwf	_threshold,w,c
  1765  0015B2  5012               	movf	?_adc+1,w,c
  1766  0015B4  5829               	subwfb	_threshold+1,w,c
  1767  0015B6  B0D8               	btfsc	status,0,c
  1768  0015B8  D002               	goto	u180
  1769  0015BA  0E01               	movlw	1
  1770  0015BC  D001               	goto	u186
  1771  0015BE                     u180:
  1772  0015BE  0E00               	movlw	0
  1773  0015C0                     u186:
  1774  0015C0  6E14               	movwf	??_check_sensors& (0+255),c
  1775  0015C2  4614               	rlncf	??_check_sensors,f,c
  1776  0015C4  4614               	rlncf	??_check_sensors,f,c
  1777  0015C6  502C               	movf	_SeeLine,w,c
  1778  0015C8  1814               	xorwf	??_check_sensors,w,c
  1779  0015CA  0BFB               	andlw	-5
  1780  0015CC  1814               	xorwf	??_check_sensors,w,c
  1781  0015CE  6E2C               	movwf	_SeeLine,c
  1782                           
  1783                           ;sumovore.c: 245: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  1784  0015D0  0E9F               	movlw	159
  1785  0015D2  ECA0  F00E         	call	_adc
  1786  0015D6  5011               	movf	?_adc,w,c
  1787  0015D8  5C28               	subwf	_threshold,w,c
  1788  0015DA  5012               	movf	?_adc+1,w,c
  1789  0015DC  5829               	subwfb	_threshold+1,w,c
  1790  0015DE  B0D8               	btfsc	status,0,c
  1791  0015E0  D002               	goto	u190
  1792  0015E2  0E01               	movlw	1
  1793  0015E4  D001               	goto	u196
  1794  0015E6                     u190:
  1795  0015E6  0E00               	movlw	0
  1796  0015E8                     u196:
  1797  0015E8  6E14               	movwf	??_check_sensors& (0+255),c
  1798  0015EA  4614               	rlncf	??_check_sensors,f,c
  1799  0015EC  502C               	movf	_SeeLine,w,c
  1800  0015EE  1814               	xorwf	??_check_sensors,w,c
  1801  0015F0  0BFD               	andlw	-3
  1802  0015F2  1814               	xorwf	??_check_sensors,w,c
  1803  0015F4  6E2C               	movwf	_SeeLine,c
  1804                           
  1805                           ;sumovore.c: 246: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  1806  0015F6  0EA7               	movlw	167
  1807  0015F8  ECA0  F00E         	call	_adc
  1808  0015FC  5011               	movf	?_adc,w,c
  1809  0015FE  5C28               	subwf	_threshold,w,c
  1810  001600  5012               	movf	?_adc+1,w,c
  1811  001602  5829               	subwfb	_threshold+1,w,c
  1812  001604  B0D8               	btfsc	status,0,c
  1813  001606  D002               	goto	u200
  1814  001608  0E01               	movlw	1
  1815  00160A  D001               	goto	u206
  1816  00160C                     u200:
  1817  00160C  0E00               	movlw	0
  1818  00160E                     u206:
  1819  00160E  6E14               	movwf	??_check_sensors& (0+255),c
  1820  001610  502C               	movf	_SeeLine,w,c
  1821  001612  1814               	xorwf	??_check_sensors,w,c
  1822  001614  0BFE               	andlw	-2
  1823  001616  1814               	xorwf	??_check_sensors,w,c
  1824  001618  6E2C               	movwf	_SeeLine,c
  1825  00161A  0012               	return	
  1826  00161C                     __end_of_check_sensors:
  1827                           	opt stack 0
  1828                           prodl	equ	0xFF3
  1829                           intcon	equ	0xFF2
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _adc *****************
  1835 ;; Defined at:
  1836 ;;		line 228 in file "../sumovore.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  channel         1    wreg     unsigned char 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  channel         1   18[COMRAM] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  2   16[COMRAM] unsigned int 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;Total ram usage:        3 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    2
  1857 ;; This function calls:
  1858 ;;		_BusyADC
  1859 ;;		_ConvertADC
  1860 ;;		_ReadADC
  1861 ;;		_SetChanADC
  1862 ;; This function is called by:
  1863 ;;		_check_sensors
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text8
  1868  001D40                     __ptext8:
  1869                           	opt stack 0
  1870  001D40                     _adc:
  1871                           	opt stack 25
  1872                           
  1873                           ;incstack = 0
  1874                           ;adc@channel stored from wreg
  1875  001D40  6E13               	movwf	adc@channel,c
  1876                           
  1877                           ;sumovore.c: 230: SetChanADC( channel );
  1878  001D42  5013               	movf	adc@channel,w,c
  1879  001D44  EC33  F00F         	call	_SetChanADC
  1880                           
  1881                           ;sumovore.c: 231: ConvertADC();
  1882  001D48  ECB7  F00F         	call	_ConvertADC	;wreg free
  1883  001D4C                     l1394:
  1884  001D4C  EC8A  F00F         	call	_BusyADC	;wreg free
  1885  001D50  0900               	iorlw	0
  1886  001D52  A4D8               	btfss	status,2,c
  1887  001D54  D7FB               	goto	l1394
  1888                           
  1889                           ;sumovore.c: 234: return ReadADC();
  1890  001D56  EC9B  F00F         	call	_ReadADC	;wreg free
  1891  001D5A  C00F  F011         	movff	?_ReadADC,?_adc
  1892  001D5E  C010  F012         	movff	?_ReadADC+1,?_adc+1
  1893  001D62  0012               	return	
  1894  001D64                     __end_of_adc:
  1895                           	opt stack 0
  1896                           prodl	equ	0xFF3
  1897                           intcon	equ	0xFF2
  1898                           postinc0	equ	0xFEE
  1899                           wreg	equ	0xFE8
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function _SetChanADC *****************
  1903 ;; Defined at:
  1904 ;;		line 30 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcsetch.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  channel         1    wreg     unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  channel         1   15[COMRAM] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;		None               void
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_adc
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text9
  1933  001E66                     __ptext9:
  1934                           	opt stack 0
  1935  001E66                     _SetChanADC:
  1936                           	opt stack 25
  1937                           
  1938                           ;incstack = 0
  1939                           ;SetChanADC@channel stored from wreg
  1940  001E66  6E10               	movwf	SetChanADC@channel,c
  1941  001E68  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  1942  001E6C  0EC3               	movlw	195
  1943  001E6E  160F               	andwf	??_SetChanADC,f,c
  1944  001E70  90D8               	bcf	status,0,c
  1945  001E72  3010               	rrcf	SetChanADC@channel,w,c
  1946  001E74  0B3C               	andlw	60
  1947  001E76  100F               	iorwf	??_SetChanADC,w,c
  1948  001E78  6EC2               	movwf	4034,c	;volatile
  1949  001E7A  0012               	return	
  1950  001E7C                     __end_of_SetChanADC:
  1951                           	opt stack 0
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _ReadADC *****************
  1959 ;; Defined at:
  1960 ;;		line 24 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcread.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2   14[COMRAM] int 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;Total ram usage:        2 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_adc
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text10
  1989  001F36                     __ptext10:
  1990                           	opt stack 0
  1991  001F36                     _ReadADC:
  1992                           	opt stack 25
  1993                           
  1994                           ;incstack = 0
  1995  001F36  50C4               	movf	4036,w,c	;volatile
  1996  001F38  6E10               	movwf	?_ReadADC+1,c
  1997  001F3A  50C3               	movf	4035,w,c	;volatile
  1998  001F3C  6E0F               	movwf	?_ReadADC,c
  1999  001F3E  0012               	return	
  2000  001F40                     __end_of_ReadADC:
  2001                           	opt stack 0
  2002                           prodl	equ	0xFF3
  2003                           intcon	equ	0xFF2
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _ConvertADC *****************
  2009 ;; Defined at:
  2010 ;;		line 22 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;		None               void
  2017 ;; Registers used:
  2018 ;;		None
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_adc
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text11
  2039  001F6E                     __ptext11:
  2040                           	opt stack 0
  2041  001F6E                     _ConvertADC:
  2042                           	opt stack 25
  2043                           
  2044                           ;incstack = 0
  2045  001F6E  82C2               	bsf	4034,1,c	;volatile
  2046  001F70  0012               	return	
  2047  001F72                     __end_of_ConvertADC:
  2048                           	opt stack 0
  2049                           prodl	equ	0xFF3
  2050                           intcon	equ	0xFF2
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _BusyADC *****************
  2056 ;; Defined at:
  2057 ;;		line 26 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      unsigned char 
  2064 ;; Registers used:
  2065 ;;		wreg
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_adc
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text12
  2086  001F14                     __ptext12:
  2087                           	opt stack 0
  2088  001F14                     _BusyADC:
  2089                           	opt stack 25
  2090                           
  2091                           ;incstack = 0
  2092  001F14  A2C2               	btfss	4034,1,c	;volatile
  2093  001F16  D002               	goto	u100
  2094  001F18  0E01               	movlw	1
  2095  001F1A  D001               	goto	l549
  2096  001F1C                     u100:
  2097  001F1C  0E00               	movlw	0
  2098  001F1E                     l549:
  2099  001F1E  0012               	return	
  2100  001F20                     __end_of_BusyADC:
  2101                           	opt stack 0
  2102                           prodl	equ	0xFF3
  2103                           intcon	equ	0xFF2
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _change_track *****************
  2109 ;; Defined at:
  2110 ;;		line 116 in file "../motor_control.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    5
  2131 ;; This function calls:
  2132 ;;		_clr_mem
  2133 ;;		_set_directive
  2134 ;; This function is called by:
  2135 ;;		_motor_control
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text13
  2140  001968                     __ptext13:
  2141                           	opt stack 0
  2142  001968                     _change_track:
  2143                           	opt stack 24
  2144                           
  2145                           ;motor_control.c: 117: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2146                           
  2147                           ;incstack = 0
  2148  001968  B82C               	btfsc	_SeeLine,4,c
  2149  00196A  B62C               	btfsc	_SeeLine,3,c
  2150  00196C  D014               	goto	l1812
  2151  00196E  A42C               	btfss	_SeeLine,2,c
  2152  001970  D012               	goto	l1812
  2153                           
  2154                           ;motor_control.c: 119: set_directive(1);
  2155  001972  0E00               	movlw	0
  2156  001974  6E1F               	movwf	set_directive@directive+1,c
  2157  001976  0E01               	movlw	1
  2158  001978  6E1E               	movwf	set_directive@directive,c
  2159  00197A  EC0E  F00B         	call	_set_directive	;wreg free
  2160  00197E                     l323:
  2161  00197E  B42C               	btfsc	_SeeLine,2,c
  2162  001980  D7FE               	goto	l323
  2163                           
  2164                           ;motor_control.c: 121: set_directive(1);
  2165  001982  0E00               	movlw	0
  2166  001984  6E1F               	movwf	set_directive@directive+1,c
  2167  001986  0E01               	movlw	1
  2168  001988  6E1E               	movwf	set_directive@directive,c
  2169  00198A  EC0E  F00B         	call	_set_directive	;wreg free
  2170  00198E                     l326:
  2171  00198E  A42C               	btfss	_SeeLine,2,c
  2172  001990  D7FE               	goto	l326
  2173                           
  2174                           ;motor_control.c: 123: clr_mem();
  2175  001992  ECA0  F00F         	call	_clr_mem	;wreg free
  2176  001996                     l1812:
  2177                           
  2178                           ;motor_control.c: 124: }
  2179                           ;motor_control.c: 125: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2180  001996  B82C               	btfsc	_SeeLine,4,c
  2181  001998  B62C               	btfsc	_SeeLine,3,c
  2182  00199A  D014               	goto	l336
  2183  00199C  A42C               	btfss	_SeeLine,2,c
  2184  00199E  D012               	goto	l336
  2185                           
  2186                           ;motor_control.c: 127: set_directive(6);
  2187  0019A0  0E00               	movlw	0
  2188  0019A2  6E1F               	movwf	set_directive@directive+1,c
  2189  0019A4  0E06               	movlw	6
  2190  0019A6  6E1E               	movwf	set_directive@directive,c
  2191  0019A8  EC0E  F00B         	call	_set_directive	;wreg free
  2192  0019AC                     l330:
  2193  0019AC  B42C               	btfsc	_SeeLine,2,c
  2194  0019AE  D7FE               	goto	l330
  2195                           
  2196                           ;motor_control.c: 129: set_directive(6);
  2197  0019B0  0E00               	movlw	0
  2198  0019B2  6E1F               	movwf	set_directive@directive+1,c
  2199  0019B4  0E06               	movlw	6
  2200  0019B6  6E1E               	movwf	set_directive@directive,c
  2201  0019B8  EC0E  F00B         	call	_set_directive	;wreg free
  2202  0019BC                     l333:
  2203  0019BC  A42C               	btfss	_SeeLine,2,c
  2204  0019BE  D7FE               	goto	l333
  2205                           
  2206                           ;motor_control.c: 131: clr_mem();
  2207  0019C0  ECA0  F00F         	call	_clr_mem	;wreg free
  2208  0019C4                     l336:
  2209  0019C4  0012               	return	
  2210  0019C6                     __end_of_change_track:
  2211                           	opt stack 0
  2212                           prodl	equ	0xFF3
  2213                           intcon	equ	0xFF2
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _set_directive *****************
  2219 ;; Defined at:
  2220 ;;		line 63 in file "../motor_control.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  directive       2   29[COMRAM] int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    4
  2241 ;; This function calls:
  2242 ;;		_full_stp
  2243 ;;		_pirouette_left
  2244 ;;		_pirouette_right
  2245 ;;		_spin_left
  2246 ;;		_spin_right
  2247 ;;		_straight_fwd
  2248 ;;		_turn_left
  2249 ;;		_turn_right
  2250 ;; This function is called by:
  2251 ;;		_change_track
  2252 ;;		_motor_control
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text14
  2257  00161C                     __ptext14:
  2258                           	opt stack 0
  2259  00161C                     _set_directive:
  2260                           	opt stack 25
  2261                           
  2262                           ;motor_control.c: 66: if(directive==0){
  2263                           
  2264                           ;incstack = 0
  2265  00161C  501F               	movf	set_directive@directive+1,w,c
  2266  00161E  101E               	iorwf	set_directive@directive,w,c
  2267  001620  A4D8               	btfss	status,2,c
  2268  001622  D006               	goto	l1610
  2269                           
  2270                           ;motor_control.c: 67: pirouette_left();
  2271  001624  EC7A  F00E         	call	_pirouette_left	;wreg free
  2272                           
  2273                           ;motor_control.c: 68: move_state=0;
  2274  001628  0E00               	movlw	0
  2275  00162A  6E25               	movwf	_move_state+1,c
  2276  00162C  0E00               	movlw	0
  2277  00162E  6E24               	movwf	_move_state,c
  2278  001630                     l1610:
  2279                           
  2280                           ;motor_control.c: 69: }
  2281                           ;motor_control.c: 70: if(directive==1){
  2282  001630  041E               	decf	set_directive@directive,w,c
  2283  001632  101F               	iorwf	set_directive@directive+1,w,c
  2284  001634  A4D8               	btfss	status,2,c
  2285  001636  D006               	goto	l1616
  2286                           
  2287                           ;motor_control.c: 71: spin_left();
  2288  001638  EC54  F00E         	call	_spin_left	;wreg free
  2289                           
  2290                           ;motor_control.c: 72: move_state=1;
  2291  00163C  0E00               	movlw	0
  2292  00163E  6E25               	movwf	_move_state+1,c
  2293  001640  0E01               	movlw	1
  2294  001642  6E24               	movwf	_move_state,c
  2295  001644                     l1616:
  2296                           
  2297                           ;motor_control.c: 73: }
  2298                           ;motor_control.c: 74: if(directive==2){
  2299  001644  501E               	movf	set_directive@directive,w,c
  2300  001646  0A02               	xorlw	2
  2301  001648  101F               	iorwf	set_directive@directive+1,w,c
  2302  00164A  A4D8               	btfss	status,2,c
  2303  00164C  D006               	goto	l1622
  2304                           
  2305                           ;motor_control.c: 75: turn_left();
  2306  00164E  EC1B  F00E         	call	_turn_left	;wreg free
  2307                           
  2308                           ;motor_control.c: 76: move_state=2;
  2309  001652  0E00               	movlw	0
  2310  001654  6E25               	movwf	_move_state+1,c
  2311  001656  0E02               	movlw	2
  2312  001658  6E24               	movwf	_move_state,c
  2313  00165A                     l1622:
  2314                           
  2315                           ;motor_control.c: 77: }
  2316                           ;motor_control.c: 78: if(directive==3){
  2317  00165A  501E               	movf	set_directive@directive,w,c
  2318  00165C  0A03               	xorlw	3
  2319  00165E  101F               	iorwf	set_directive@directive+1,w,c
  2320  001660  A4D8               	btfss	status,2,c
  2321  001662  D006               	goto	l1628
  2322                           
  2323                           ;motor_control.c: 79: full_stp();
  2324  001664  EC8D  F00E         	call	_full_stp	;wreg free
  2325                           
  2326                           ;motor_control.c: 80: move_state=3;
  2327  001668  0E00               	movlw	0
  2328  00166A  6E25               	movwf	_move_state+1,c
  2329  00166C  0E03               	movlw	3
  2330  00166E  6E24               	movwf	_move_state,c
  2331  001670                     l1628:
  2332                           
  2333                           ;motor_control.c: 81: }
  2334                           ;motor_control.c: 82: if(directive==4){
  2335  001670  501E               	movf	set_directive@directive,w,c
  2336  001672  0A04               	xorlw	4
  2337  001674  101F               	iorwf	set_directive@directive+1,w,c
  2338  001676  A4D8               	btfss	status,2,c
  2339  001678  D006               	goto	l1634
  2340                           
  2341                           ;motor_control.c: 83: straight_fwd();
  2342  00167A  EC2E  F00E         	call	_straight_fwd	;wreg free
  2343                           
  2344                           ;motor_control.c: 84: move_state=4;
  2345  00167E  0E00               	movlw	0
  2346  001680  6E25               	movwf	_move_state+1,c
  2347  001682  0E04               	movlw	4
  2348  001684  6E24               	movwf	_move_state,c
  2349  001686                     l1634:
  2350                           
  2351                           ;motor_control.c: 85: }
  2352                           ;motor_control.c: 86: if(directive==5){
  2353  001686  501E               	movf	set_directive@directive,w,c
  2354  001688  0A05               	xorlw	5
  2355  00168A  101F               	iorwf	set_directive@directive+1,w,c
  2356  00168C  A4D8               	btfss	status,2,c
  2357  00168E  D006               	goto	l1640
  2358                           
  2359                           ;motor_control.c: 87: turn_right();
  2360  001690  EC08  F00E         	call	_turn_right	;wreg free
  2361                           
  2362                           ;motor_control.c: 88: move_state=5;
  2363  001694  0E00               	movlw	0
  2364  001696  6E25               	movwf	_move_state+1,c
  2365  001698  0E05               	movlw	5
  2366  00169A  6E24               	movwf	_move_state,c
  2367  00169C                     l1640:
  2368                           
  2369                           ;motor_control.c: 89: }
  2370                           ;motor_control.c: 90: if(directive==6){
  2371  00169C  501E               	movf	set_directive@directive,w,c
  2372  00169E  0A06               	xorlw	6
  2373  0016A0  101F               	iorwf	set_directive@directive+1,w,c
  2374  0016A2  A4D8               	btfss	status,2,c
  2375  0016A4  D006               	goto	l1646
  2376                           
  2377                           ;motor_control.c: 91: spin_right();
  2378  0016A6  EC41  F00E         	call	_spin_right	;wreg free
  2379                           
  2380                           ;motor_control.c: 92: move_state=6;
  2381  0016AA  0E00               	movlw	0
  2382  0016AC  6E25               	movwf	_move_state+1,c
  2383  0016AE  0E06               	movlw	6
  2384  0016B0  6E24               	movwf	_move_state,c
  2385  0016B2                     l1646:
  2386                           
  2387                           ;motor_control.c: 93: }
  2388                           ;motor_control.c: 94: if(directive==7){
  2389  0016B2  501E               	movf	set_directive@directive,w,c
  2390  0016B4  0A07               	xorlw	7
  2391  0016B6  101F               	iorwf	set_directive@directive+1,w,c
  2392  0016B8  A4D8               	btfss	status,2,c
  2393  0016BA  D006               	goto	l310
  2394                           
  2395                           ;motor_control.c: 95: pirouette_right();
  2396  0016BC  EC67  F00E         	call	_pirouette_right	;wreg free
  2397                           
  2398                           ;motor_control.c: 96: move_state=7;
  2399  0016C0  0E00               	movlw	0
  2400  0016C2  6E25               	movwf	_move_state+1,c
  2401  0016C4  0E07               	movlw	7
  2402  0016C6  6E24               	movwf	_move_state,c
  2403  0016C8                     l310:
  2404  0016C8  0012               	return	
  2405  0016CA                     __end_of_set_directive:
  2406                           	opt stack 0
  2407                           prodl	equ	0xFF3
  2408                           intcon	equ	0xFF2
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _turn_right *****************
  2414 ;; Defined at:
  2415 ;;		line 417 in file "../motor_control.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    3
  2436 ;; This function calls:
  2437 ;;		_set_motor_speed
  2438 ;; This function is called by:
  2439 ;;		_set_directive
  2440 ;;		_follow_simple_curves
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text15
  2445  001C10                     __ptext15:
  2446                           	opt stack 0
  2447  001C10                     _turn_right:
  2448                           	opt stack 25
  2449                           
  2450                           ;motor_control.c: 419: set_motor_speed(left, slow, 0);
  2451                           
  2452                           ;incstack = 0
  2453  001C10  0E04               	movlw	4
  2454  001C12  6E15               	movwf	set_motor_speed@motor_speed,c
  2455  001C14  0E00               	movlw	0
  2456  001C16  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2457  001C18  0E00               	movlw	0
  2458  001C1A  6E16               	movwf	set_motor_speed@speed_modifier,c
  2459  001C1C  0E00               	movlw	0
  2460  001C1E  EC47  F00A         	call	_set_motor_speed
  2461                           
  2462                           ;motor_control.c: 420: set_motor_speed(right, stop, 0);
  2463  001C22  0E03               	movlw	3
  2464  001C24  6E15               	movwf	set_motor_speed@motor_speed,c
  2465  001C26  0E00               	movlw	0
  2466  001C28  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2467  001C2A  0E00               	movlw	0
  2468  001C2C  6E16               	movwf	set_motor_speed@speed_modifier,c
  2469  001C2E  0E01               	movlw	1
  2470  001C30  EC47  F00A         	call	_set_motor_speed
  2471  001C34  0012               	return	
  2472  001C36                     __end_of_turn_right:
  2473                           	opt stack 0
  2474                           prodl	equ	0xFF3
  2475                           intcon	equ	0xFF2
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _turn_left *****************
  2481 ;; Defined at:
  2482 ;;		line 402 in file "../motor_control.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		_set_motor_speed
  2505 ;; This function is called by:
  2506 ;;		_set_directive
  2507 ;;		_follow_simple_curves
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text16
  2512  001C36                     __ptext16:
  2513                           	opt stack 0
  2514  001C36                     _turn_left:
  2515                           	opt stack 25
  2516                           
  2517                           ;motor_control.c: 404: set_motor_speed(left, stop, 0);
  2518                           
  2519                           ;incstack = 0
  2520  001C36  0E03               	movlw	3
  2521  001C38  6E15               	movwf	set_motor_speed@motor_speed,c
  2522  001C3A  0E00               	movlw	0
  2523  001C3C  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2524  001C3E  0E00               	movlw	0
  2525  001C40  6E16               	movwf	set_motor_speed@speed_modifier,c
  2526  001C42  0E00               	movlw	0
  2527  001C44  EC47  F00A         	call	_set_motor_speed
  2528                           
  2529                           ;motor_control.c: 405: set_motor_speed(right, slow, 0);
  2530  001C48  0E04               	movlw	4
  2531  001C4A  6E15               	movwf	set_motor_speed@motor_speed,c
  2532  001C4C  0E00               	movlw	0
  2533  001C4E  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2534  001C50  0E00               	movlw	0
  2535  001C52  6E16               	movwf	set_motor_speed@speed_modifier,c
  2536  001C54  0E01               	movlw	1
  2537  001C56  EC47  F00A         	call	_set_motor_speed
  2538  001C5A  0012               	return	
  2539  001C5C                     __end_of_turn_left:
  2540                           	opt stack 0
  2541                           prodl	equ	0xFF3
  2542                           intcon	equ	0xFF2
  2543                           postinc0	equ	0xFEE
  2544                           wreg	equ	0xFE8
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _straight_fwd *****************
  2548 ;; Defined at:
  2549 ;;		line 407 in file "../motor_control.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;		None               void
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    3
  2570 ;; This function calls:
  2571 ;;		_set_motor_speed
  2572 ;; This function is called by:
  2573 ;;		_set_directive
  2574 ;;		_follow_simple_curves
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text17
  2579  001C5C                     __ptext17:
  2580                           	opt stack 0
  2581  001C5C                     _straight_fwd:
  2582                           	opt stack 25
  2583                           
  2584                           ;motor_control.c: 409: set_motor_speed(left, slow, 75);
  2585                           
  2586                           ;incstack = 0
  2587  001C5C  0E04               	movlw	4
  2588  001C5E  6E15               	movwf	set_motor_speed@motor_speed,c
  2589  001C60  0E00               	movlw	0
  2590  001C62  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2591  001C64  0E4B               	movlw	75
  2592  001C66  6E16               	movwf	set_motor_speed@speed_modifier,c
  2593  001C68  0E00               	movlw	0
  2594  001C6A  EC47  F00A         	call	_set_motor_speed
  2595                           
  2596                           ;motor_control.c: 410: set_motor_speed(right, slow, 0);
  2597  001C6E  0E04               	movlw	4
  2598  001C70  6E15               	movwf	set_motor_speed@motor_speed,c
  2599  001C72  0E00               	movlw	0
  2600  001C74  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2601  001C76  0E00               	movlw	0
  2602  001C78  6E16               	movwf	set_motor_speed@speed_modifier,c
  2603  001C7A  0E01               	movlw	1
  2604  001C7C  EC47  F00A         	call	_set_motor_speed
  2605  001C80  0012               	return	
  2606  001C82                     __end_of_straight_fwd:
  2607                           	opt stack 0
  2608                           prodl	equ	0xFF3
  2609                           intcon	equ	0xFF2
  2610                           postinc0	equ	0xFEE
  2611                           wreg	equ	0xFE8
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _spin_right *****************
  2615 ;; Defined at:
  2616 ;;		line 412 in file "../motor_control.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;		None               void
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    3
  2637 ;; This function calls:
  2638 ;;		_set_motor_speed
  2639 ;; This function is called by:
  2640 ;;		_set_directive
  2641 ;;		_follow_simple_curves
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text18
  2646  001C82                     __ptext18:
  2647                           	opt stack 0
  2648  001C82                     _spin_right:
  2649                           	opt stack 25
  2650                           
  2651                           ;motor_control.c: 414: set_motor_speed(left, slow, 0);
  2652                           
  2653                           ;incstack = 0
  2654  001C82  0E04               	movlw	4
  2655  001C84  6E15               	movwf	set_motor_speed@motor_speed,c
  2656  001C86  0E00               	movlw	0
  2657  001C88  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2658  001C8A  0E00               	movlw	0
  2659  001C8C  6E16               	movwf	set_motor_speed@speed_modifier,c
  2660  001C8E  0E00               	movlw	0
  2661  001C90  EC47  F00A         	call	_set_motor_speed
  2662                           
  2663                           ;motor_control.c: 415: set_motor_speed(right, rev_slow, 0);
  2664  001C94  0E02               	movlw	2
  2665  001C96  6E15               	movwf	set_motor_speed@motor_speed,c
  2666  001C98  0E00               	movlw	0
  2667  001C9A  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2668  001C9C  0E00               	movlw	0
  2669  001C9E  6E16               	movwf	set_motor_speed@speed_modifier,c
  2670  001CA0  0E01               	movlw	1
  2671  001CA2  EC47  F00A         	call	_set_motor_speed
  2672  001CA6  0012               	return	
  2673  001CA8                     __end_of_spin_right:
  2674                           	opt stack 0
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           status	equ	0xFD8
  2680                           
  2681 ;; *************** function _spin_left *****************
  2682 ;; Defined at:
  2683 ;;		line 396 in file "../motor_control.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;		None               void
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    3
  2704 ;; This function calls:
  2705 ;;		_set_motor_speed
  2706 ;; This function is called by:
  2707 ;;		_set_directive
  2708 ;;		_follow_simple_curves
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text19
  2713  001CA8                     __ptext19:
  2714                           	opt stack 0
  2715  001CA8                     _spin_left:
  2716                           	opt stack 25
  2717                           
  2718                           ;motor_control.c: 398: set_motor_speed(left, rev_slow, 0);
  2719                           
  2720                           ;incstack = 0
  2721  001CA8  0E02               	movlw	2
  2722  001CAA  6E15               	movwf	set_motor_speed@motor_speed,c
  2723  001CAC  0E00               	movlw	0
  2724  001CAE  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2725  001CB0  0E00               	movlw	0
  2726  001CB2  6E16               	movwf	set_motor_speed@speed_modifier,c
  2727  001CB4  0E00               	movlw	0
  2728  001CB6  EC47  F00A         	call	_set_motor_speed
  2729                           
  2730                           ;motor_control.c: 399: set_motor_speed(right, slow, 0);
  2731  001CBA  0E04               	movlw	4
  2732  001CBC  6E15               	movwf	set_motor_speed@motor_speed,c
  2733  001CBE  0E00               	movlw	0
  2734  001CC0  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2735  001CC2  0E00               	movlw	0
  2736  001CC4  6E16               	movwf	set_motor_speed@speed_modifier,c
  2737  001CC6  0E01               	movlw	1
  2738  001CC8  EC47  F00A         	call	_set_motor_speed
  2739  001CCC  0012               	return	
  2740  001CCE                     __end_of_spin_left:
  2741                           	opt stack 0
  2742                           prodl	equ	0xFF3
  2743                           intcon	equ	0xFF2
  2744                           postinc0	equ	0xFEE
  2745                           wreg	equ	0xFE8
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _pirouette_right *****************
  2749 ;; Defined at:
  2750 ;;		line 40 in file "../motor_control.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;		None               void
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    3
  2771 ;; This function calls:
  2772 ;;		_set_motor_speed
  2773 ;; This function is called by:
  2774 ;;		_set_directive
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text20
  2779  001CCE                     __ptext20:
  2780                           	opt stack 0
  2781  001CCE                     _pirouette_right:
  2782                           	opt stack 25
  2783                           
  2784                           ;motor_control.c: 41: set_motor_speed(left, slow, 0);
  2785                           
  2786                           ;incstack = 0
  2787  001CCE  0E04               	movlw	4
  2788  001CD0  6E15               	movwf	set_motor_speed@motor_speed,c
  2789  001CD2  0E00               	movlw	0
  2790  001CD4  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2791  001CD6  0E00               	movlw	0
  2792  001CD8  6E16               	movwf	set_motor_speed@speed_modifier,c
  2793  001CDA  0E00               	movlw	0
  2794  001CDC  EC47  F00A         	call	_set_motor_speed
  2795                           
  2796                           ;motor_control.c: 42: set_motor_speed(right, rev_slow, 0);
  2797  001CE0  0E02               	movlw	2
  2798  001CE2  6E15               	movwf	set_motor_speed@motor_speed,c
  2799  001CE4  0E00               	movlw	0
  2800  001CE6  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2801  001CE8  0E00               	movlw	0
  2802  001CEA  6E16               	movwf	set_motor_speed@speed_modifier,c
  2803  001CEC  0E01               	movlw	1
  2804  001CEE  EC47  F00A         	call	_set_motor_speed
  2805  001CF2  0012               	return	
  2806  001CF4                     __end_of_pirouette_right:
  2807                           	opt stack 0
  2808                           prodl	equ	0xFF3
  2809                           intcon	equ	0xFF2
  2810                           postinc0	equ	0xFEE
  2811                           wreg	equ	0xFE8
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _pirouette_left *****************
  2815 ;; Defined at:
  2816 ;;		line 36 in file "../motor_control.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    3
  2837 ;; This function calls:
  2838 ;;		_set_motor_speed
  2839 ;; This function is called by:
  2840 ;;		_set_directive
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text21
  2845  001CF4                     __ptext21:
  2846                           	opt stack 0
  2847  001CF4                     _pirouette_left:
  2848                           	opt stack 25
  2849                           
  2850                           ;motor_control.c: 37: set_motor_speed(left, rev_slow, 0);
  2851                           
  2852                           ;incstack = 0
  2853  001CF4  0E02               	movlw	2
  2854  001CF6  6E15               	movwf	set_motor_speed@motor_speed,c
  2855  001CF8  0E00               	movlw	0
  2856  001CFA  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2857  001CFC  0E00               	movlw	0
  2858  001CFE  6E16               	movwf	set_motor_speed@speed_modifier,c
  2859  001D00  0E00               	movlw	0
  2860  001D02  EC47  F00A         	call	_set_motor_speed
  2861                           
  2862                           ;motor_control.c: 38: set_motor_speed(right, slow, 0);
  2863  001D06  0E04               	movlw	4
  2864  001D08  6E15               	movwf	set_motor_speed@motor_speed,c
  2865  001D0A  0E00               	movlw	0
  2866  001D0C  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2867  001D0E  0E00               	movlw	0
  2868  001D10  6E16               	movwf	set_motor_speed@speed_modifier,c
  2869  001D12  0E01               	movlw	1
  2870  001D14  EC47  F00A         	call	_set_motor_speed
  2871  001D18  0012               	return	
  2872  001D1A                     __end_of_pirouette_left:
  2873                           	opt stack 0
  2874                           prodl	equ	0xFF3
  2875                           intcon	equ	0xFF2
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           status	equ	0xFD8
  2879                           
  2880 ;; *************** function _full_stp *****************
  2881 ;; Defined at:
  2882 ;;		line 31 in file "../motor_control.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;		None               void
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    3
  2903 ;; This function calls:
  2904 ;;		_set_motor_speed
  2905 ;; This function is called by:
  2906 ;;		_set_directive
  2907 ;;		_motor_control
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text22
  2912  001D1A                     __ptext22:
  2913                           	opt stack 0
  2914  001D1A                     _full_stp:
  2915                           	opt stack 25
  2916                           
  2917                           ;motor_control.c: 32: set_motor_speed(left, stop, 0);
  2918                           
  2919                           ;incstack = 0
  2920  001D1A  0E03               	movlw	3
  2921  001D1C  6E15               	movwf	set_motor_speed@motor_speed,c
  2922  001D1E  0E00               	movlw	0
  2923  001D20  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2924  001D22  0E00               	movlw	0
  2925  001D24  6E16               	movwf	set_motor_speed@speed_modifier,c
  2926  001D26  0E00               	movlw	0
  2927  001D28  EC47  F00A         	call	_set_motor_speed
  2928                           
  2929                           ;motor_control.c: 33: set_motor_speed(right, stop, 0);
  2930  001D2C  0E03               	movlw	3
  2931  001D2E  6E15               	movwf	set_motor_speed@motor_speed,c
  2932  001D30  0E00               	movlw	0
  2933  001D32  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2934  001D34  0E00               	movlw	0
  2935  001D36  6E16               	movwf	set_motor_speed@speed_modifier,c
  2936  001D38  0E01               	movlw	1
  2937  001D3A  EC47  F00A         	call	_set_motor_speed
  2938  001D3E  0012               	return	
  2939  001D40                     __end_of_full_stp:
  2940                           	opt stack 0
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           status	equ	0xFD8
  2946                           
  2947 ;; *************** function _set_motor_speed *****************
  2948 ;; Defined at:
  2949 ;;		line 187 in file "../sumovore.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  the_motor       1    wreg     enum E4168
  2952 ;;  motor_speed     1   20[COMRAM] enum E4160
  2953 ;;  speed_modifi    2   21[COMRAM] int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  the_motor       1   25[COMRAM] enum E4168
  2956 ;;  duty_cycle      2   27[COMRAM] int 
  2957 ;;  dir_modifier    1   26[COMRAM] enum E4224
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:        9 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    2
  2974 ;; This function calls:
  2975 ;;		_SetDCPWM1
  2976 ;;		_SetDCPWM2
  2977 ;; This function is called by:
  2978 ;;		_full_stp
  2979 ;;		_pirouette_left
  2980 ;;		_pirouette_right
  2981 ;;		_spin_left
  2982 ;;		_turn_left
  2983 ;;		_straight_fwd
  2984 ;;		_spin_right
  2985 ;;		_turn_right
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text23
  2990  00148E                     __ptext23:
  2991                           	opt stack 0
  2992  00148E                     _set_motor_speed:
  2993                           	opt stack 25
  2994                           
  2995                           ;incstack = 0
  2996                           ;set_motor_speed@the_motor stored from wreg
  2997  00148E  6E1A               	movwf	set_motor_speed@the_motor,c
  2998                           
  2999                           ;sumovore.c: 189: const static int motor_speeds[] = { -800, -725, -650, 0, 650, 725, 800
      +                          };
  3000                           ;sumovore.c: 190: int duty_cycle;
  3001                           ;sumovore.c: 191: enum e_direction {reverse,forward} dir_modifier= forward;
  3002  001490  0E01               	movlw	1
  3003  001492  6E1B               	movwf	set_motor_speed@dir_modifier,c
  3004                           
  3005                           ;sumovore.c: 193: duty_cycle = motor_speeds[ motor_speed ] + speed_modifier;
  3006  001494  5015               	movf	set_motor_speed@motor_speed,w,c
  3007  001496  0D02               	mullw	2
  3008  001498  0E01               	movlw	low set_motor_speed@motor_speeds
  3009  00149A  24F3               	addwf	prodl,w,c
  3010  00149C  6EF6               	movwf	tblptrl,c
  3011  00149E  0E10               	movlw	high set_motor_speed@motor_speeds
  3012  0014A0  20F4               	addwfc	prodh,w,c
  3013  0014A2  6EF7               	movwf	tblptrh,c
  3014  0014A4                     	if	1	;There are 3 active tblptr bytes
  3015  0014A4  6AF8               	clrf	tblptru,c
  3016  0014A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3017  0014A8  22F8               	addwfc	tblptru,f,c
  3018  0014AA                     	endif
  3019  0014AA  0009               	tblrd		*+
  3020  0014AC  CFF5 F018          	movff	tablat,??_set_motor_speed
  3021  0014B0  0009               	tblrd		*+
  3022  0014B2  CFF5 F019          	movff	tablat,??_set_motor_speed+1
  3023  0014B6  5016               	movf	set_motor_speed@speed_modifier,w,c
  3024  0014B8  2418               	addwf	??_set_motor_speed,w,c
  3025  0014BA  6E1C               	movwf	set_motor_speed@duty_cycle,c
  3026  0014BC  5017               	movf	set_motor_speed@speed_modifier+1,w,c
  3027  0014BE  2019               	addwfc	??_set_motor_speed+1,w,c
  3028  0014C0  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  3029                           
  3030                           ;sumovore.c: 194: if ( duty_cycle < 0 )
  3031  0014C2  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  3032  0014C4  0A80               	xorlw	128
  3033  0014C6  6EF3               	movwf	prodl,c
  3034  0014C8  0E80               	movlw	128
  3035  0014CA  5CF3               	subwf	prodl,w,c
  3036  0014CC  0E00               	movlw	0
  3037  0014CE  B4D8               	btfsc	status,2,c
  3038  0014D0  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  3039  0014D2  B0D8               	btfsc	status,0,c
  3040  0014D4  D006               	goto	l1346
  3041                           
  3042                           ;sumovore.c: 195: {
  3043                           ;sumovore.c: 196: dir_modifier = reverse;
  3044  0014D6  0E00               	movlw	0
  3045  0014D8  6E1B               	movwf	set_motor_speed@dir_modifier,c
  3046                           
  3047                           ;sumovore.c: 197: duty_cycle = -1 * duty_cycle;
  3048  0014DA  6C1C               	negf	set_motor_speed@duty_cycle,c
  3049  0014DC  1E1D               	comf	set_motor_speed@duty_cycle+1,f,c
  3050  0014DE  B0D8               	btfsc	status,0,c
  3051  0014E0  2A1D               	incf	set_motor_speed@duty_cycle+1,f,c
  3052  0014E2                     l1346:
  3053                           
  3054                           ;sumovore.c: 198: }
  3055                           ;sumovore.c: 199: if ( duty_cycle > 800 ) duty_cycle = 800;
  3056  0014E2  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  3057  0014E4  0A80               	xorlw	128
  3058  0014E6  0F7D               	addlw	-131
  3059  0014E8  0E21               	movlw	33
  3060  0014EA  B4D8               	btfsc	status,2,c
  3061  0014EC  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  3062  0014EE  A0D8               	btfss	status,0,c
  3063  0014F0  D004               	goto	l1350
  3064  0014F2  0E03               	movlw	3
  3065  0014F4  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  3066  0014F6  0E20               	movlw	32
  3067  0014F8  6E1C               	movwf	set_motor_speed@duty_cycle,c
  3068  0014FA                     l1350:
  3069                           
  3070                           ;sumovore.c: 201: if (the_motor == left)
  3071  0014FA  661A               	tstfsz	set_motor_speed@the_motor,c
  3072  0014FC  D016               	goto	l1360
  3073                           
  3074                           ;sumovore.c: 202: {
  3075                           ;sumovore.c: 203: SetDCPWM2((unsigned int) duty_cycle );
  3076  0014FE  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM2@dutycycle
  3077  001502  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM2@dutycycle+1
  3078  001506  EC88  F00D         	call	_SetDCPWM2	;wreg free
  3079                           
  3080                           ;sumovore.c: 204: if ( dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  3081  00150A  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3082  00150C  D002               	goto	l180
  3083  00150E  9082               	bcf	3970,0,c	;volatile
  3084  001510  D001               	goto	l1358
  3085  001512                     l180:
  3086                           
  3087                           ;sumovore.c: 205: else PORTCbits.RC0 = 0b1;
  3088  001512  8082               	bsf	3970,0,c	;volatile
  3089  001514                     l1358:
  3090                           
  3091                           ;sumovore.c: 206: PORTEbits.RE1 = !PORTCbits.RC0;
  3092  001514  B082               	btfsc	3970,0,c	;volatile
  3093  001516  D002               	goto	u70
  3094  001518  0E01               	movlw	1
  3095  00151A  D001               	goto	u76
  3096  00151C                     u70:
  3097  00151C  0E00               	movlw	0
  3098  00151E                     u76:
  3099  00151E  6E18               	movwf	??_set_motor_speed& (0+255),c
  3100  001520  4618               	rlncf	??_set_motor_speed,f,c
  3101  001522  5084               	movf	3972,w,c	;volatile
  3102  001524  1818               	xorwf	??_set_motor_speed,w,c
  3103  001526  0BFD               	andlw	-3
  3104  001528  D014               	goto	L4
  3105  00152A                     l1360:
  3106                           
  3107                           ;sumovore.c: 208: else
  3108                           ;sumovore.c: 209: {
  3109                           ;sumovore.c: 210: SetDCPWM1((unsigned int) duty_cycle );
  3110  00152A  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM1@dutycycle
  3111  00152E  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM1@dutycycle+1
  3112  001532  ECA5  F00D         	call	_SetDCPWM1	;wreg free
  3113                           
  3114                           ;sumovore.c: 211: if ( dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  3115  001536  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3116  001538  D002               	goto	l183
  3117  00153A  9A82               	bcf	3970,5,c	;volatile
  3118  00153C  D001               	goto	l1366
  3119  00153E                     l183:
  3120                           
  3121                           ;sumovore.c: 212: else PORTCbits.RC5 = 0b1;
  3122  00153E  8A82               	bsf	3970,5,c	;volatile
  3123  001540                     l1366:
  3124                           
  3125                           ;sumovore.c: 213: PORTEbits.RE0 = !PORTCbits.RC5;
  3126  001540  BA82               	btfsc	3970,5,c	;volatile
  3127  001542  D002               	goto	u90
  3128  001544  0E01               	movlw	1
  3129  001546  D001               	goto	u96
  3130  001548                     u90:
  3131  001548  0E00               	movlw	0
  3132  00154A                     u96:
  3133  00154A  6E18               	movwf	??_set_motor_speed& (0+255),c
  3134  00154C  5084               	movf	3972,w,c	;volatile
  3135  00154E  1818               	xorwf	??_set_motor_speed,w,c
  3136  001550  0BFE               	andlw	-2
  3137  001552                     L4:
  3138  001552  1818               	xorwf	??_set_motor_speed,w,c
  3139  001554  6E84               	movwf	3972,c	;volatile
  3140  001556  0012               	return	
  3141  001558                     __end_of_set_motor_speed:
  3142                           	opt stack 0
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           intcon	equ	0xFF2
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _clr_mem *****************
  3155 ;; Defined at:
  3156 ;;		line 105 in file "../motor_control.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;		None               void
  3163 ;; Registers used:
  3164 ;;		wreg, status,2
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_change_track
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text24
  3185  001F40                     __ptext24:
  3186                           	opt stack 0
  3187  001F40                     _clr_mem:
  3188                           	opt stack 27
  3189                           
  3190                           ;motor_control.c: 106: memory = 0;
  3191                           
  3192                           ;incstack = 0
  3193  001F40  0E00               	movlw	0
  3194  001F42  6E23               	movwf	_memory+1,c
  3195  001F44  0E00               	movlw	0
  3196  001F46  6E22               	movwf	_memory,c
  3197  001F48  0012               	return	
  3198  001F4A                     __end_of_clr_mem:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           status	equ	0xFD8
  3210                           
  3211 ;; *************** function _ReadTimer0 *****************
  3212 ;; Defined at:
  3213 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0read.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  timer           2   16[COMRAM] struct Timers
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2   14[COMRAM] unsigned int 
  3220 ;; Registers used:
  3221 ;;		None
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;Total ram usage:        4 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_motor_control
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text25
  3242  001EC8                     __ptext25:
  3243                           	opt stack 0
  3244  001EC8                     _ReadTimer0:
  3245                           	opt stack 28
  3246                           
  3247                           ;incstack = 0
  3248  001EC8  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  3249  001ECC  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  3250  001ED0  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  3251  001ED4  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  3252  001ED8  0012               	return	
  3253  001EDA                     __end_of_ReadTimer0:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           postinc0	equ	0xFEE
  3263                           wreg	equ	0xFE8
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _lvd_flag_set *****************
  3267 ;; Defined at:
  3268 ;;		line 47 in file "../interrupts.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      unsigned char 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text26
  3297  001F72                     __ptext26:
  3298                           	opt stack 0
  3299  001F72                     _lvd_flag_set:
  3300                           	opt stack 29
  3301                           
  3302                           ;interrupts.c: 49: return lvd_flag;
  3303                           
  3304                           ;incstack = 0
  3305  001F72  502D               	movf	_lvd_flag,w,c
  3306  001F74  0012               	return	
  3307  001F76                     __end_of_lvd_flag_set:
  3308                           	opt stack 0
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           intcon	equ	0xFF2
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _initialization *****************
  3321 ;; Defined at:
  3322 ;;		line 65 in file "../sumovore.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;		None               void
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    5
  3343 ;; This function calls:
  3344 ;;		_OpenADC
  3345 ;;		_OpenPWM1
  3346 ;;		_OpenPWM2
  3347 ;;		_OpenTimer2
  3348 ;;		_OpenUSART
  3349 ;;		_SetDCPWM1
  3350 ;;		_SetDCPWM2
  3351 ;;		_openLVD
  3352 ;;		_openPORTA
  3353 ;;		_openPORTB
  3354 ;;		_openPORTCforPWM
  3355 ;;		_openPORTCforUSART
  3356 ;;		_openPORTD
  3357 ;;		_openPORTE
  3358 ;;		_reset_codes
  3359 ;;		_set_osc_32MHz
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text27
  3366  001774                     __ptext27:
  3367                           	opt stack 0
  3368  001774                     _initialization:
  3369                           	opt stack 25
  3370                           
  3371                           ;sumovore.c: 67: SeeLine.B = 0;
  3372                           
  3373                           ;incstack = 0
  3374  001774  902C               	bcf	_SeeLine,0,c
  3375  001776  922C               	bcf	_SeeLine,1,c
  3376  001778  942C               	bcf	_SeeLine,2,c
  3377  00177A  962C               	bcf	_SeeLine,3,c
  3378  00177C  982C               	bcf	_SeeLine,4,c
  3379                           
  3380                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  3381  00177E  8ED0               	bsf	4048,7,c	;volatile
  3382                           
  3383                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  3384  001780  9EF2               	bcf	intcon,7,c	;volatile
  3385                           
  3386                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  3387  001782  9CF2               	bcf	intcon,6,c	;volatile
  3388                           
  3389                           ;sumovore.c: 72: set_osc_32MHz();
  3390  001784  ECF4  F00D         	call	_set_osc_32MHz	;wreg free
  3391                           
  3392                           ;sumovore.c: 73: openPORTCforUSART();
  3393  001788  ECAB  F00F         	call	_openPORTCforUSART	;wreg free
  3394                           
  3395                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111, 16 );
  3396  00178C  0E00               	movlw	0
  3397  00178E  6E10               	movwf	OpenUSART@spbrg+1,c
  3398  001790  0E10               	movlw	16
  3399  001792  6E0F               	movwf	OpenUSART@spbrg,c
  3400  001794  0E3C               	movlw	60
  3401  001796  EC80  F00C         	call	_OpenUSART
  3402                           
  3403                           ;sumovore.c: 81: openPORTD();
  3404  00179A  ECB4  F00F         	call	_openPORTD	;wreg free
  3405                           
  3406                           ;sumovore.c: 82: PORTD = 0;
  3407  00179E  0E00               	movlw	0
  3408  0017A0  6E83               	movwf	3971,c	;volatile
  3409                           
  3410                           ;sumovore.c: 84: reset_codes();
  3411  0017A2  EC68  F00D         	call	_reset_codes	;wreg free
  3412                           
  3413                           ;sumovore.c: 86: openPORTCforPWM();
  3414  0017A6  EC7D  F00F         	call	_openPORTCforPWM	;wreg free
  3415                           
  3416                           ;sumovore.c: 88: openPORTA();
  3417  0017AA  ECB1  F00F         	call	_openPORTA	;wreg free
  3418                           
  3419                           ;sumovore.c: 89: openPORTB();
  3420  0017AE  ECAE  F00F         	call	_openPORTB	;wreg free
  3421                           
  3422                           ;sumovore.c: 90: openPORTE();
  3423  0017B2  ECA8  F00F         	call	_openPORTE	;wreg free
  3424                           
  3425                           ;sumovore.c: 93: openLVD();
  3426  0017B6  EC27  F00F         	call	_openLVD	;wreg free
  3427                           
  3428                           ;sumovore.c: 97: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  3429  0017BA  0E0C               	movlw	12
  3430  0017BC  6E0F               	movwf	OpenADC@config2,c
  3431  0017BE  0E0A               	movlw	10
  3432  0017C0  6E10               	movwf	OpenADC@portconfig,c
  3433  0017C2  0EA7               	movlw	167
  3434  0017C4  ECE3  F00C         	call	_OpenADC
  3435                           
  3436                           ;sumovore.c: 100: PORTCbits.RC5 = 0b0;
  3437  0017C8  9A82               	bcf	3970,5,c	;volatile
  3438                           
  3439                           ;sumovore.c: 101: PORTEbits.RE0 = 0b0;
  3440  0017CA  9084               	bcf	3972,0,c	;volatile
  3441                           
  3442                           ;sumovore.c: 102: PORTCbits.RC0 = 0b0;
  3443  0017CC  9082               	bcf	3970,0,c	;volatile
  3444                           
  3445                           ;sumovore.c: 103: PORTEbits.RE1 = 0b0;
  3446  0017CE  9284               	bcf	3972,1,c	;volatile
  3447                           
  3448                           ;sumovore.c: 108: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  3449  0017D0  0E06               	movlw	6
  3450  0017D2  EC0D  F00F         	call	_OpenTimer2
  3451                           
  3452                           ;sumovore.c: 109: OpenPWM1(199);
  3453  0017D6  0EC7               	movlw	199
  3454  0017D8  EC6D  F00F         	call	_OpenPWM1
  3455                           
  3456                           ;sumovore.c: 111: OpenPWM2(199);
  3457  0017DC  0EC7               	movlw	199
  3458  0017DE  ECC2  F00D         	call	_OpenPWM2
  3459                           
  3460                           ;sumovore.c: 112: SetDCPWM1(0);
  3461  0017E2  0E00               	movlw	0
  3462  0017E4  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  3463  0017E6  0E00               	movlw	0
  3464  0017E8  6E0F               	movwf	SetDCPWM1@dutycycle,c
  3465  0017EA  ECA5  F00D         	call	_SetDCPWM1	;wreg free
  3466                           
  3467                           ;sumovore.c: 115: SetDCPWM2(0);
  3468  0017EE  0E00               	movlw	0
  3469  0017F0  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  3470  0017F2  0E00               	movlw	0
  3471  0017F4  6E0F               	movwf	SetDCPWM2@dutycycle,c
  3472  0017F6  EC88  F00D         	call	_SetDCPWM2	;wreg free
  3473                           
  3474                           ;sumovore.c: 116: threshold = 120u;
  3475  0017FA  0E00               	movlw	0
  3476  0017FC  6E29               	movwf	_threshold+1,c
  3477  0017FE  0E78               	movlw	120
  3478  001800  6E28               	movwf	_threshold,c
  3479  001802  0012               	return	
  3480  001804                     __end_of_initialization:
  3481                           	opt stack 0
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           prodh	equ	0xFF4
  3487                           prodl	equ	0xFF3
  3488                           intcon	equ	0xFF2
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           status	equ	0xFD8
  3492                           
  3493 ;; *************** function _set_osc_32MHz *****************
  3494 ;; Defined at:
  3495 ;;		line 18 in file "../../Common/osc.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  i               2   14[COMRAM] int 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_initialization
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text28
  3524  001BE8                     __ptext28:
  3525                           	opt stack 0
  3526  001BE8                     _set_osc_32MHz:
  3527                           	opt stack 28
  3528                           
  3529                           ;osc.c: 20: int i;
  3530                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  3531                           
  3532                           ;incstack = 0
  3533  001BE8  8CD3               	bsf	4051,6,c	;volatile
  3534                           
  3535                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  3536  001BEA  8AD3               	bsf	4051,5,c	;volatile
  3537                           
  3538                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  3539  001BEC  88D3               	bsf	4051,4,c	;volatile
  3540                           
  3541                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  3542  001BEE  8C9B               	bsf	3995,6,c	;volatile
  3543                           
  3544                           ;osc.c: 28: for(i=0;i<500;i++);
  3545  001BF0  0E00               	movlw	0
  3546  001BF2  6E10               	movwf	set_osc_32MHz@i+1,c
  3547  001BF4  0E00               	movlw	0
  3548  001BF6  6E0F               	movwf	set_osc_32MHz@i,c
  3549  001BF8  5010               	movf	set_osc_32MHz@i+1,w,c
  3550  001BFA  0A80               	xorlw	128
  3551  001BFC  0F7F               	addlw	-129
  3552  001BFE  0EF4               	movlw	244
  3553  001C00  B4D8               	btfsc	status,2,c
  3554  001C02  5C0F               	subwf	set_osc_32MHz@i,w,c
  3555  001C04  B0D8               	btfsc	status,0,c
  3556  001C06  D003               	goto	l456
  3557  001C08  4A0F               	infsnz	set_osc_32MHz@i,f,c
  3558  001C0A  2A10               	incf	set_osc_32MHz@i+1,f,c
  3559  001C0C  D7F5               	goto	L5
  3560  001C0E                     l456:
  3561  001C0E  0012               	return	
  3562  001C10                     __end_of_set_osc_32MHz:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           intcon	equ	0xFF2
  3571                           postinc0	equ	0xFEE
  3572                           wreg	equ	0xFE8
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _reset_codes *****************
  3576 ;; Defined at:
  3577 ;;		line 280 in file "../sumovore.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    4
  3598 ;; This function calls:
  3599 ;;		_BORtask
  3600 ;;		_PORtask
  3601 ;;		_RESETtask
  3602 ;;		_STKFULtask
  3603 ;;		_WDTtask
  3604 ;;		_isBOR
  3605 ;;		_isPOR
  3606 ;;		_isWDTTO
  3607 ;; This function is called by:
  3608 ;;		_initialization
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text29
  3613  001AD0                     __ptext29:
  3614                           	opt stack 0
  3615  001AD0                     _reset_codes:
  3616                           	opt stack 25
  3617                           
  3618                           ;sumovore.c: 282: if( isPOR() ) PORtask();
  3619                           
  3620                           ;incstack = 0
  3621  001AD0  EC48  F00F         	call	_isPOR	;wreg free
  3622  001AD4  0900               	iorlw	0
  3623  001AD6  B4D8               	btfsc	status,2,c
  3624  001AD8  D003               	goto	l1724
  3625  001ADA  EC65  F00B         	call	_PORtask	;wreg free
  3626  001ADE  D017               	goto	l211
  3627  001AE0                     l1724:
  3628                           
  3629                           ;sumovore.c: 285: else if (isBOR() ) BORtask();
  3630  001AE0  EC76  F00F         	call	_isBOR	;wreg free
  3631  001AE4  0900               	iorlw	0
  3632  001AE6  B4D8               	btfsc	status,2,c
  3633  001AE8  D003               	goto	l1728
  3634  001AEA  ECB2  F00E         	call	_BORtask	;wreg free
  3635  001AEE  D00F               	goto	l211
  3636  001AF0                     l1728:
  3637                           
  3638                           ;sumovore.c: 287: else if(isWDTTO() ) WDTtask();
  3639  001AF0  EC3E  F00F         	call	_isWDTTO	;wreg free
  3640  001AF4  0900               	iorlw	0
  3641  001AF6  B4D8               	btfsc	status,2,c
  3642  001AF8  D003               	goto	l207
  3643  001AFA  ECF1  F00E         	call	_WDTtask	;wreg free
  3644  001AFE  D007               	goto	l211
  3645  001B00                     l207:
  3646                           
  3647                           ;sumovore.c: 291: else if(STKPTRbits.STKFUL) STKFULtask();
  3648  001B00  AEFC               	btfss	stkptr,7,c	;volatile
  3649  001B02  D003               	goto	l1734
  3650  001B04  ECE2  F00E         	call	_STKFULtask	;wreg free
  3651  001B08  D002               	goto	l211
  3652  001B0A                     l1734:
  3653                           
  3654                           ;sumovore.c: 295: else RESETtask();
  3655  001B0A  ECFF  F00E         	call	_RESETtask	;wreg free
  3656  001B0E                     l211:
  3657  001B0E  0012               	return	
  3658  001B10                     __end_of_reset_codes:
  3659                           	opt stack 0
  3660                           stkptr	equ	0xFFC
  3661                           tblptru	equ	0xFF8
  3662                           tblptrh	equ	0xFF7
  3663                           tblptrl	equ	0xFF6
  3664                           tablat	equ	0xFF5
  3665                           prodh	equ	0xFF4
  3666                           prodl	equ	0xFF3
  3667                           intcon	equ	0xFF2
  3668                           postinc0	equ	0xFEE
  3669                           wreg	equ	0xFE8
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _isWDTTO *****************
  3673 ;; Defined at:
  3674 ;;		line 15 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/iswdtto.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      unsigned char 
  3681 ;; Registers used:
  3682 ;;		wreg
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    1
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_reset_codes
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text30
  3703  001E7C                     __ptext30:
  3704                           	opt stack 0
  3705  001E7C                     _isWDTTO:
  3706                           	opt stack 27
  3707                           
  3708                           ;incstack = 0
  3709  001E7C  B2D0               	btfsc	4048,1,c	;volatile
  3710  001E7E  A4D0               	btfss	4048,2,c	;volatile
  3711  001E80  D005               	goto	l1554
  3712  001E82  B0D0               	btfsc	4048,0,c	;volatile
  3713  001E84  B6D0               	btfsc	4048,3,c	;volatile
  3714  001E86  D002               	goto	l1554
  3715  001E88  0E01               	movlw	1
  3716  001E8A  D001               	goto	l731
  3717  001E8C                     l1554:
  3718  001E8C  0E00               	movlw	0
  3719  001E8E                     l731:
  3720  001E8E  0012               	return	
  3721  001E90                     __end_of_isWDTTO:
  3722                           	opt stack 0
  3723                           stkptr	equ	0xFFC
  3724                           tblptru	equ	0xFF8
  3725                           tblptrh	equ	0xFF7
  3726                           tblptrl	equ	0xFF6
  3727                           tablat	equ	0xFF5
  3728                           prodh	equ	0xFF4
  3729                           prodl	equ	0xFF3
  3730                           intcon	equ	0xFF2
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function _isPOR *****************
  3736 ;; Defined at:
  3737 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/ispor.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      unsigned char 
  3744 ;; Registers used:
  3745 ;;		wreg
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_reset_codes
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text31
  3766  001E90                     __ptext31:
  3767                           	opt stack 0
  3768  001E90                     _isPOR:
  3769                           	opt stack 27
  3770                           
  3771                           ;incstack = 0
  3772  001E90  A2D0               	btfss	4048,1,c	;volatile
  3773  001E92  A4D0               	btfss	4048,2,c	;volatile
  3774  001E94  D005               	goto	l1462
  3775  001E96  A0D0               	btfss	4048,0,c	;volatile
  3776  001E98  A6D0               	btfss	4048,3,c	;volatile
  3777  001E9A  D002               	goto	l1462
  3778  001E9C  0E01               	movlw	1
  3779  001E9E  D001               	goto	l722
  3780  001EA0                     l1462:
  3781  001EA0  0E00               	movlw	0
  3782  001EA2                     l722:
  3783  001EA2  0012               	return	
  3784  001EA4                     __end_of_isPOR:
  3785                           	opt stack 0
  3786                           stkptr	equ	0xFFC
  3787                           tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           status	equ	0xFD8
  3797                           
  3798 ;; *************** function _isBOR *****************
  3799 ;; Defined at:
  3800 ;;		line 12 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/isbor.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_reset_codes
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text32
  3829  001EEC                     __ptext32:
  3830                           	opt stack 0
  3831  001EEC                     _isBOR:
  3832                           	opt stack 27
  3833                           
  3834                           ;incstack = 0
  3835  001EEC  A0D0               	btfss	4048,0,c	;volatile
  3836  001EEE  A2D0               	btfss	4048,1,c	;volatile
  3837  001EF0  D002               	goto	l1510
  3838  001EF2  0E01               	movlw	1
  3839  001EF4  D001               	goto	l713
  3840  001EF6                     l1510:
  3841  001EF6  0E00               	movlw	0
  3842  001EF8                     l713:
  3843  001EF8  0012               	return	
  3844  001EFA                     __end_of_isBOR:
  3845                           	opt stack 0
  3846                           stkptr	equ	0xFFC
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           prodh	equ	0xFF4
  3852                           prodl	equ	0xFF3
  3853                           intcon	equ	0xFF2
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function _WDTtask *****************
  3859 ;; Defined at:
  3860 ;;		line 368 in file "../sumovore.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;		None               void
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    3
  3881 ;; This function calls:
  3882 ;;		_gtrap
  3883 ;;		_printf
  3884 ;; This function is called by:
  3885 ;;		_reset_codes
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text33
  3890  001DE2                     __ptext33:
  3891                           	opt stack 0
  3892  001DE2                     _WDTtask:
  3893                           	opt stack 25
  3894                           
  3895                           ;sumovore.c: 370: printf("<WDT TO>");
  3896                           
  3897                           ;incstack = 0
  3898  001DE2  0E10               	movlw	high STR_4
  3899  001DE4  6E11               	movwf	printf@f+1,c
  3900  001DE6  0E62               	movlw	low STR_4
  3901  001DE8  6E10               	movwf	printf@f,c
  3902  001DEA  ECDF  F00D         	call	_printf	;wreg free
  3903                           
  3904                           ;sumovore.c: 371: PORTDbits.RD0=!1;
  3905  001DEE  9083               	bcf	3971,0,c	;volatile
  3906                           
  3907                           ;sumovore.c: 372: PORTDbits.RD1=!0;
  3908  001DF0  8283               	bsf	3971,1,c	;volatile
  3909                           
  3910                           ;sumovore.c: 373: PORTDbits.RD2=!1;
  3911  001DF2  9483               	bcf	3971,2,c	;volatile
  3912                           
  3913                           ;sumovore.c: 374: PORTDbits.RD3=!0;
  3914  001DF4  8683               	bsf	3971,3,c	;volatile
  3915                           
  3916                           ;sumovore.c: 375: PORTDbits.RD4=!0;
  3917  001DF6  8883               	bsf	3971,4,c	;volatile
  3918                           
  3919                           ;sumovore.c: 376: gtrap();
  3920  001DF8  EC12  F00D         	call	_gtrap	;wreg free
  3921  001DFC  0012               	return	
  3922  001DFE                     __end_of_WDTtask:
  3923                           	opt stack 0
  3924                           stkptr	equ	0xFFC
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           prodh	equ	0xFF4
  3930                           prodl	equ	0xFF3
  3931                           intcon	equ	0xFF2
  3932                           postinc0	equ	0xFEE
  3933                           wreg	equ	0xFE8
  3934                           status	equ	0xFD8
  3935                           
  3936 ;; *************** function _STKFULtask *****************
  3937 ;; Defined at:
  3938 ;;		line 387 in file "../sumovore.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;		None               void
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;Total ram usage:        0 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    3
  3959 ;; This function calls:
  3960 ;;		_gtrap
  3961 ;;		_printf
  3962 ;; This function is called by:
  3963 ;;		_reset_codes
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text34
  3968  001DC4                     __ptext34:
  3969                           	opt stack 0
  3970  001DC4                     _STKFULtask:
  3971                           	opt stack 25
  3972                           
  3973                           ;sumovore.c: 390: STKPTRbits.STKFUL = 0;
  3974                           
  3975                           ;incstack = 0
  3976  001DC4  9EFC               	bcf	stkptr,7,c	;volatile
  3977                           
  3978                           ;sumovore.c: 391: printf("<STKFUL>");
  3979  001DC6  0E10               	movlw	high STR_5
  3980  001DC8  6E11               	movwf	printf@f+1,c
  3981  001DCA  0E59               	movlw	low STR_5
  3982  001DCC  6E10               	movwf	printf@f,c
  3983  001DCE  ECDF  F00D         	call	_printf	;wreg free
  3984                           
  3985                           ;sumovore.c: 392: PORTDbits.RD0=!1;
  3986  001DD2  9083               	bcf	3971,0,c	;volatile
  3987                           
  3988                           ;sumovore.c: 393: PORTDbits.RD1=!0;
  3989  001DD4  8283               	bsf	3971,1,c	;volatile
  3990                           
  3991                           ;sumovore.c: 394: PORTDbits.RD2=!1;
  3992  001DD6  9483               	bcf	3971,2,c	;volatile
  3993                           
  3994                           ;sumovore.c: 395: PORTDbits.RD3=!0;
  3995  001DD8  8683               	bsf	3971,3,c	;volatile
  3996                           
  3997                           ;sumovore.c: 396: PORTDbits.RD4=!1;
  3998  001DDA  9883               	bcf	3971,4,c	;volatile
  3999                           
  4000                           ;sumovore.c: 397: gtrap();
  4001  001DDC  EC12  F00D         	call	_gtrap	;wreg free
  4002  001DE0  0012               	return	
  4003  001DE2                     __end_of_STKFULtask:
  4004                           	opt stack 0
  4005                           stkptr	equ	0xFFC
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           status	equ	0xFD8
  4016                           
  4017 ;; *************** function _RESETtask *****************
  4018 ;; Defined at:
  4019 ;;		line 403 in file "../sumovore.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    3
  4040 ;; This function calls:
  4041 ;;		_gtrap
  4042 ;;		_printf
  4043 ;; This function is called by:
  4044 ;;		_reset_codes
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text35
  4049  001DFE                     __ptext35:
  4050                           	opt stack 0
  4051  001DFE                     _RESETtask:
  4052                           	opt stack 25
  4053                           
  4054                           ;sumovore.c: 406: printf(" <reset> ");
  4055                           
  4056                           ;incstack = 0
  4057  001DFE  0E10               	movlw	high STR_6
  4058  001E00  6E11               	movwf	printf@f+1,c
  4059  001E02  0E4F               	movlw	low STR_6
  4060  001E04  6E10               	movwf	printf@f,c
  4061  001E06  ECDF  F00D         	call	_printf	;wreg free
  4062                           
  4063                           ;sumovore.c: 407: PORTDbits.RD0=!1;
  4064  001E0A  9083               	bcf	3971,0,c	;volatile
  4065                           
  4066                           ;sumovore.c: 408: PORTDbits.RD1=!0;
  4067  001E0C  8283               	bsf	3971,1,c	;volatile
  4068                           
  4069                           ;sumovore.c: 409: PORTDbits.RD2=!1;
  4070  001E0E  9483               	bcf	3971,2,c	;volatile
  4071                           
  4072                           ;sumovore.c: 410: PORTDbits.RD3=!1;
  4073  001E10  9683               	bcf	3971,3,c	;volatile
  4074                           
  4075                           ;sumovore.c: 411: PORTDbits.RD4=!1;
  4076  001E12  9883               	bcf	3971,4,c	;volatile
  4077                           
  4078                           ;sumovore.c: 412: gtrap();
  4079  001E14  EC12  F00D         	call	_gtrap	;wreg free
  4080  001E18  0012               	return	
  4081  001E1A                     __end_of_RESETtask:
  4082                           	opt stack 0
  4083                           stkptr	equ	0xFFC
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           prodh	equ	0xFF4
  4089                           prodl	equ	0xFF3
  4090                           intcon	equ	0xFF2
  4091                           postinc0	equ	0xFEE
  4092                           wreg	equ	0xFE8
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function _PORtask *****************
  4096 ;; Defined at:
  4097 ;;		line 305 in file "../sumovore.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  count2          4   24[COMRAM] unsigned long 
  4102 ;;  count1          4   20[COMRAM] unsigned long 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        8 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    3
  4119 ;; This function calls:
  4120 ;;		_StatusReset
  4121 ;;		_printf
  4122 ;; This function is called by:
  4123 ;;		_reset_codes
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text36
  4128  0016CA                     __ptext36:
  4129                           	opt stack 0
  4130  0016CA                     _PORtask:
  4131                           	opt stack 25
  4132                           
  4133                           ;sumovore.c: 307: unsigned long count1=0, count2=0;
  4134                           
  4135                           ;incstack = 0
  4136  0016CA  0E00               	movlw	0
  4137  0016CC  6E15               	movwf	PORtask@count1,c
  4138  0016CE  0E00               	movlw	0
  4139  0016D0  6E16               	movwf	PORtask@count1+1,c
  4140  0016D2  0E00               	movlw	0
  4141  0016D4  6E17               	movwf	PORtask@count1+2,c
  4142  0016D6  0E00               	movlw	0
  4143  0016D8  6E18               	movwf	PORtask@count1+3,c
  4144  0016DA  0E00               	movlw	0
  4145  0016DC  6E19               	movwf	PORtask@count2,c
  4146  0016DE  0E00               	movlw	0
  4147  0016E0  6E1A               	movwf	PORtask@count2+1,c
  4148  0016E2  0E00               	movlw	0
  4149  0016E4  6E1B               	movwf	PORtask@count2+2,c
  4150  0016E6  0E00               	movlw	0
  4151  0016E8  6E1C               	movwf	PORtask@count2+3,c
  4152                           
  4153                           ;sumovore.c: 308: StatusReset();
  4154  0016EA  ECA5  F00F         	call	_StatusReset	;wreg free
  4155                           
  4156                           ;sumovore.c: 310: printf("<POR>");
  4157  0016EE  0E10               	movlw	high STR_2
  4158  0016F0  6E11               	movwf	printf@f+1,c
  4159  0016F2  0E78               	movlw	low STR_2
  4160  0016F4  6E10               	movwf	printf@f,c
  4161  0016F6  ECDF  F00D         	call	_printf	;wreg free
  4162                           
  4163                           ;sumovore.c: 311: PORTDbits.RD0=!1;
  4164  0016FA  9083               	bcf	3971,0,c	;volatile
  4165                           
  4166                           ;sumovore.c: 312: PORTDbits.RD1=!0;
  4167  0016FC  8283               	bsf	3971,1,c	;volatile
  4168                           
  4169                           ;sumovore.c: 313: PORTDbits.RD2=!0;
  4170  0016FE  8483               	bsf	3971,2,c	;volatile
  4171                           
  4172                           ;sumovore.c: 314: PORTDbits.RD3=!0;
  4173  001700  8683               	bsf	3971,3,c	;volatile
  4174                           
  4175                           ;sumovore.c: 315: PORTDbits.RD4=!0;
  4176  001702  8883               	bsf	3971,4,c	;volatile
  4177                           
  4178                           ;sumovore.c: 316: while(count1<10u)
  4179  001704  D02C               	goto	l214
  4180  001706                     l215:
  4181  001706  0004               	clrwdt		;# 
  4182                           
  4183                           ;sumovore.c: 319: if (count2==30000u)
  4184  001708  501A               	movf	PORtask@count2+1,w,c
  4185  00170A  0A75               	xorlw	117
  4186  00170C  0E30               	movlw	48
  4187  00170E  B4D8               	btfsc	status,2,c
  4188  001710  1819               	xorwf	PORtask@count2,w,c
  4189  001712  101B               	iorwf	PORtask@count2+2,w,c
  4190  001714  101C               	iorwf	PORtask@count2+3,w,c
  4191  001716  A4D8               	btfss	status,2,c
  4192  001718  D011               	goto	l1492
  4193                           
  4194                           ;sumovore.c: 320: {
  4195                           ;sumovore.c: 321: count2=0;
  4196  00171A  0E00               	movlw	0
  4197  00171C  6E19               	movwf	PORtask@count2,c
  4198  00171E  0E00               	movlw	0
  4199  001720  6E1A               	movwf	PORtask@count2+1,c
  4200  001722  0E00               	movlw	0
  4201  001724  6E1B               	movwf	PORtask@count2+2,c
  4202  001726  0E00               	movlw	0
  4203  001728  6E1C               	movwf	PORtask@count2+3,c
  4204                           
  4205                           ;sumovore.c: 322: count1++;
  4206  00172A  0E01               	movlw	1
  4207  00172C  2615               	addwf	PORtask@count1,f,c
  4208  00172E  0E00               	movlw	0
  4209  001730  2216               	addwfc	PORtask@count1+1,f,c
  4210  001732  2217               	addwfc	PORtask@count1+2,f,c
  4211  001734  2218               	addwfc	PORtask@count1+3,f,c
  4212                           
  4213                           ;sumovore.c: 323: PORTDbits.RD0=!1;
  4214  001736  9083               	bcf	3971,0,c	;volatile
  4215                           
  4216                           ;sumovore.c: 324: PORTDbits.RD1=!0;
  4217  001738  8283               	bsf	3971,1,c	;volatile
  4218                           
  4219                           ;sumovore.c: 325: }
  4220  00173A  D00B               	goto	l1496
  4221  00173C                     l1492:
  4222                           
  4223                           ;sumovore.c: 326: else if (count2==15000u)
  4224  00173C  501A               	movf	PORtask@count2+1,w,c
  4225  00173E  0A3A               	xorlw	58
  4226  001740  0E98               	movlw	152
  4227  001742  B4D8               	btfsc	status,2,c
  4228  001744  1819               	xorwf	PORtask@count2,w,c
  4229  001746  101B               	iorwf	PORtask@count2+2,w,c
  4230  001748  101C               	iorwf	PORtask@count2+3,w,c
  4231  00174A  A4D8               	btfss	status,2,c
  4232  00174C  D002               	goto	l1496
  4233                           
  4234                           ;sumovore.c: 327: {
  4235                           ;sumovore.c: 328: PORTDbits.RD0=!0;
  4236  00174E  8083               	bsf	3971,0,c	;volatile
  4237                           
  4238                           ;sumovore.c: 329: PORTDbits.RD1=!1;
  4239  001750  9283               	bcf	3971,1,c	;volatile
  4240  001752                     l1496:
  4241                           
  4242                           ;sumovore.c: 330: }
  4243                           ;sumovore.c: 331: count2++;
  4244  001752  0E01               	movlw	1
  4245  001754  2619               	addwf	PORtask@count2,f,c
  4246  001756  0E00               	movlw	0
  4247  001758  221A               	addwfc	PORtask@count2+1,f,c
  4248  00175A  221B               	addwfc	PORtask@count2+2,f,c
  4249  00175C  221C               	addwfc	PORtask@count2+3,f,c
  4250  00175E                     l214:
  4251  00175E  0E0A               	movlw	10
  4252  001760  5C15               	subwf	PORtask@count1,w,c
  4253  001762  0E00               	movlw	0
  4254  001764  5816               	subwfb	PORtask@count1+1,w,c
  4255  001766  0E00               	movlw	0
  4256  001768  5817               	subwfb	PORtask@count1+2,w,c
  4257  00176A  0E00               	movlw	0
  4258  00176C  5818               	subwfb	PORtask@count1+3,w,c
  4259  00176E  B0D8               	btfsc	status,0,c
  4260  001770  0012               	return	
  4261  001772  D7C9               	goto	l215
  4262  001774                     __end_of_PORtask:
  4263                           	opt stack 0
  4264                           stkptr	equ	0xFFC
  4265                           tblptru	equ	0xFF8
  4266                           tblptrh	equ	0xFF7
  4267                           tblptrl	equ	0xFF6
  4268                           tablat	equ	0xFF5
  4269                           prodh	equ	0xFF4
  4270                           prodl	equ	0xFF3
  4271                           intcon	equ	0xFF2
  4272                           postinc0	equ	0xFEE
  4273                           wreg	equ	0xFE8
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function _BORtask *****************
  4277 ;; Defined at:
  4278 ;;		line 347 in file "../sumovore.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    3
  4299 ;; This function calls:
  4300 ;;		_StatusReset
  4301 ;;		_gtrap
  4302 ;;		_printf
  4303 ;; This function is called by:
  4304 ;;		_reset_codes
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text37
  4309  001D64                     __ptext37:
  4310                           	opt stack 0
  4311  001D64                     _BORtask:
  4312                           	opt stack 25
  4313                           
  4314                           ;sumovore.c: 349: StatusReset();
  4315                           
  4316                           ;incstack = 0
  4317  001D64  ECA5  F00F         	call	_StatusReset	;wreg free
  4318                           
  4319                           ;sumovore.c: 351: printf("<BOR>");
  4320  001D68  0E10               	movlw	high STR_3
  4321  001D6A  6E11               	movwf	printf@f+1,c
  4322  001D6C  0E72               	movlw	low STR_3
  4323  001D6E  6E10               	movwf	printf@f,c
  4324  001D70  ECDF  F00D         	call	_printf	;wreg free
  4325                           
  4326                           ;sumovore.c: 352: PORTDbits.RD0=!0;
  4327  001D74  8083               	bsf	3971,0,c	;volatile
  4328                           
  4329                           ;sumovore.c: 353: PORTDbits.RD1=!0;
  4330  001D76  8283               	bsf	3971,1,c	;volatile
  4331                           
  4332                           ;sumovore.c: 354: PORTDbits.RD2=!0;
  4333  001D78  8483               	bsf	3971,2,c	;volatile
  4334                           
  4335                           ;sumovore.c: 355: PORTDbits.RD3=!0;
  4336  001D7A  8683               	bsf	3971,3,c	;volatile
  4337                           
  4338                           ;sumovore.c: 356: PORTDbits.RD4=!1;
  4339  001D7C  9883               	bcf	3971,4,c	;volatile
  4340                           
  4341                           ;sumovore.c: 357: gtrap();
  4342  001D7E  EC12  F00D         	call	_gtrap	;wreg free
  4343  001D82  0012               	return	
  4344  001D84                     __end_of_BORtask:
  4345                           	opt stack 0
  4346                           stkptr	equ	0xFFC
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _StatusReset *****************
  4359 ;; Defined at:
  4360 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/statrst.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;		None               void
  4367 ;; Registers used:
  4368 ;;		None
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    1
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_PORtask
  4385 ;;		_BORtask
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text38
  4390  001F4A                     __ptext38:
  4391                           	opt stack 0
  4392  001F4A                     _StatusReset:
  4393                           	opt stack 26
  4394                           
  4395                           ;incstack = 0
  4396  001F4A  82D0               	bsf	4048,1,c	;volatile
  4397  001F4C  80D0               	bsf	4048,0,c	;volatile
  4398  001F4E  0012               	return	
  4399  001F50                     __end_of_StatusReset:
  4400                           	opt stack 0
  4401                           stkptr	equ	0xFFC
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           prodh	equ	0xFF4
  4407                           prodl	equ	0xFF3
  4408                           intcon	equ	0xFF2
  4409                           postinc0	equ	0xFEE
  4410                           wreg	equ	0xFE8
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function _openPORTE *****************
  4414 ;; Defined at:
  4415 ;;		line 177 in file "../sumovore.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;		None               void
  4422 ;; Registers used:
  4423 ;;		wreg, status,2
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_initialization
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text39
  4444  001F50                     __ptext39:
  4445                           	opt stack 0
  4446  001F50                     _openPORTE:
  4447                           	opt stack 28
  4448                           
  4449                           ;sumovore.c: 179: TRISE = 0b000;
  4450                           
  4451                           ;incstack = 0
  4452  001F50  0E00               	movlw	0
  4453  001F52  6E96               	movwf	3990,c	;volatile
  4454  001F54  0012               	return	
  4455  001F56                     __end_of_openPORTE:
  4456                           	opt stack 0
  4457                           stkptr	equ	0xFFC
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _openPORTCforUSART *****************
  4470 ;; Defined at:
  4471 ;;		line 123 in file "../sumovore.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		None
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_initialization
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text40
  4500  001F56                     __ptext40:
  4501                           	opt stack 0
  4502  001F56                     _openPORTCforUSART:
  4503                           	opt stack 28
  4504                           
  4505                           ;sumovore.c: 125: TRISCbits.TRISC6 = 0;
  4506                           
  4507                           ;incstack = 0
  4508  001F56  9C94               	bcf	3988,6,c	;volatile
  4509                           
  4510                           ;sumovore.c: 126: TRISCbits.TRISC7 = 1;
  4511  001F58  8E94               	bsf	3988,7,c	;volatile
  4512  001F5A  0012               	return	
  4513  001F5C                     __end_of_openPORTCforUSART:
  4514                           	opt stack 0
  4515                           stkptr	equ	0xFFC
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           intcon	equ	0xFF2
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           status	equ	0xFD8
  4526                           
  4527 ;; *************** function _openPORTCforPWM *****************
  4528 ;; Defined at:
  4529 ;;		line 132 in file "../sumovore.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;		None               void
  4536 ;; Registers used:
  4537 ;;		None
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    1
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_initialization
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text41
  4558  001EFA                     __ptext41:
  4559                           	opt stack 0
  4560  001EFA                     _openPORTCforPWM:
  4561                           	opt stack 28
  4562                           
  4563                           ;sumovore.c: 134: TRISCbits.TRISC0 = 0;
  4564                           
  4565                           ;incstack = 0
  4566  001EFA  9094               	bcf	3988,0,c	;volatile
  4567                           
  4568                           ;sumovore.c: 135: TRISCbits.TRISC1 = 0;
  4569  001EFC  9294               	bcf	3988,1,c	;volatile
  4570                           
  4571                           ;sumovore.c: 136: TRISCbits.TRISC2 = 0;
  4572  001EFE  9494               	bcf	3988,2,c	;volatile
  4573                           
  4574                           ;sumovore.c: 137: TRISCbits.TRISC3 = 0;
  4575  001F00  9694               	bcf	3988,3,c	;volatile
  4576                           
  4577                           ;sumovore.c: 138: TRISCbits.TRISC4 = 0;
  4578  001F02  9894               	bcf	3988,4,c	;volatile
  4579                           
  4580                           ;sumovore.c: 139: TRISCbits.TRISC5 = 0;
  4581  001F04  9A94               	bcf	3988,5,c	;volatile
  4582  001F06  0012               	return	
  4583  001F08                     __end_of_openPORTCforPWM:
  4584                           	opt stack 0
  4585                           stkptr	equ	0xFFC
  4586                           tblptru	equ	0xFF8
  4587                           tblptrh	equ	0xFF7
  4588                           tblptrl	equ	0xFF6
  4589                           tablat	equ	0xFF5
  4590                           prodh	equ	0xFF4
  4591                           prodl	equ	0xFF3
  4592                           intcon	equ	0xFF2
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _openPORTB *****************
  4598 ;; Defined at:
  4599 ;;		line 157 in file "../sumovore.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;		None               void
  4606 ;; Registers used:
  4607 ;;		wreg, status,2
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_initialization
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text42
  4628  001F5C                     __ptext42:
  4629                           	opt stack 0
  4630  001F5C                     _openPORTB:
  4631                           	opt stack 28
  4632                           
  4633                           ;sumovore.c: 159: TRISB = 0B11000000;
  4634                           
  4635                           ;incstack = 0
  4636  001F5C  0EC0               	movlw	192
  4637  001F5E  6E93               	movwf	3987,c	;volatile
  4638  001F60  0012               	return	
  4639  001F62                     __end_of_openPORTB:
  4640                           	opt stack 0
  4641                           stkptr	equ	0xFFC
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           prodh	equ	0xFF4
  4647                           prodl	equ	0xFF3
  4648                           intcon	equ	0xFF2
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function _openPORTA *****************
  4654 ;; Defined at:
  4655 ;;		line 146 in file "../sumovore.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;		None               void
  4662 ;; Registers used:
  4663 ;;		wreg, status,2
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:        0 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_initialization
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text43
  4684  001F62                     __ptext43:
  4685                           	opt stack 0
  4686  001F62                     _openPORTA:
  4687                           	opt stack 28
  4688                           
  4689                           ;sumovore.c: 148: TRISA = 0B11101111;
  4690                           
  4691                           ;incstack = 0
  4692  001F62  0EEF               	movlw	239
  4693  001F64  6E92               	movwf	3986,c	;volatile
  4694  001F66  0012               	return	
  4695  001F68                     __end_of_openPORTA:
  4696                           	opt stack 0
  4697                           stkptr	equ	0xFFC
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           intcon	equ	0xFF2
  4705                           postinc0	equ	0xFEE
  4706                           wreg	equ	0xFE8
  4707                           status	equ	0xFD8
  4708                           
  4709 ;; *************** function _openLVD *****************
  4710 ;; Defined at:
  4711 ;;		line 426 in file "../sumovore.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		None
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    1
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_initialization
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text44
  4740  001E4E                     __ptext44:
  4741                           	opt stack 0
  4742  001E4E                     _openLVD:
  4743                           	opt stack 28
  4744                           
  4745                           ;sumovore.c: 428: RCONbits.IPEN = 1;
  4746                           
  4747                           ;incstack = 0
  4748  001E4E  8ED0               	bsf	4048,7,c	;volatile
  4749                           
  4750                           ;sumovore.c: 429: HLVDCONbits.HLVDEN = 1;
  4751  001E50  88D2               	bsf	4050,4,c	;volatile
  4752                           
  4753                           ;sumovore.c: 431: IPR2bits.HLVDIP = 1;
  4754  001E52  84A2               	bsf	4002,2,c	;volatile
  4755                           
  4756                           ;sumovore.c: 432: HLVDCONbits.VDIRMAG = 0;
  4757  001E54  9ED2               	bcf	4050,7,c	;volatile
  4758                           
  4759                           ;sumovore.c: 434: HLVDCONbits.HLVDL3 = 1;
  4760  001E56  86D2               	bsf	4050,3,c	;volatile
  4761                           
  4762                           ;sumovore.c: 435: HLVDCONbits.HLVDL2 = 1;
  4763  001E58  84D2               	bsf	4050,2,c	;volatile
  4764                           
  4765                           ;sumovore.c: 436: HLVDCONbits.HLVDL1 = 1;
  4766  001E5A  82D2               	bsf	4050,1,c	;volatile
  4767                           
  4768                           ;sumovore.c: 437: HLVDCONbits.HLVDL0 = 0;
  4769  001E5C  90D2               	bcf	4050,0,c	;volatile
  4770                           
  4771                           ;sumovore.c: 438: PIR2bits.HLVDIF = 0;
  4772  001E5E  94A1               	bcf	4001,2,c	;volatile
  4773                           
  4774                           ;sumovore.c: 439: PIE2bits.HLVDIE = 1;
  4775  001E60  84A0               	bsf	4000,2,c	;volatile
  4776                           
  4777                           ;sumovore.c: 440: INTCONbits.GIEH = 1;
  4778  001E62  8EF2               	bsf	intcon,7,c	;volatile
  4779  001E64  0012               	return	
  4780  001E66                     __end_of_openLVD:
  4781                           	opt stack 0
  4782                           stkptr	equ	0xFFC
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           prodh	equ	0xFF4
  4788                           prodl	equ	0xFF3
  4789                           intcon	equ	0xFF2
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           status	equ	0xFD8
  4793                           
  4794 ;; *************** function _SetDCPWM2 *****************
  4795 ;; Defined at:
  4796 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2setdc.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4801 ;; Return value:  Size  Location     Type
  4802 ;;		None               void
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;Total ram usage:        6 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_initialization
  4821 ;;		_set_motor_speed
  4822 ;;		_motors_brake_all
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text45
  4827  001B10                     __ptext45:
  4828                           	opt stack 0
  4829  001B10                     _SetDCPWM2:
  4830                           	opt stack 25
  4831                           
  4832                           ;incstack = 0
  4833  001B10  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4834  001B14  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4835  001B18  0E06               	movlw	6
  4836  001B1A                     u25:
  4837  001B1A  90D8               	bcf	status,0,c
  4838  001B1C  3611               	rlcf	??_SetDCPWM2,f,c
  4839  001B1E  3612               	rlcf	??_SetDCPWM2+1,f,c
  4840  001B20  2EE8               	decfsz	wreg,f,c
  4841  001B22  D7FB               	goto	u25
  4842  001B24  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4843  001B28  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4844  001B2C  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4845  001B30  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4846  001B34  90D8               	bcf	status,0,c
  4847  001B36  3211               	rrcf	??_SetDCPWM2,f,c
  4848  001B38  90D8               	bcf	status,0,c
  4849  001B3A  3211               	rrcf	??_SetDCPWM2,f,c
  4850  001B3C  0E30               	movlw	48
  4851  001B3E  1611               	andwf	??_SetDCPWM2,f,c
  4852  001B40  50BA               	movf	4026,w,c	;volatile
  4853  001B42  0BCF               	andlw	207
  4854  001B44  1011               	iorwf	??_SetDCPWM2,w,c
  4855  001B46  6EBA               	movwf	4026,c	;volatile
  4856  001B48  0012               	return	
  4857  001B4A                     __end_of_SetDCPWM2:
  4858                           	opt stack 0
  4859                           stkptr	equ	0xFFC
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodh	equ	0xFF4
  4865                           prodl	equ	0xFF3
  4866                           intcon	equ	0xFF2
  4867                           postinc0	equ	0xFEE
  4868                           wreg	equ	0xFE8
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _SetDCPWM1 *****************
  4872 ;; Defined at:
  4873 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1setdc.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;Total ram usage:        6 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_initialization
  4898 ;;		_set_motor_speed
  4899 ;;		_motors_brake_all
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text46
  4904  001B4A                     __ptext46:
  4905                           	opt stack 0
  4906  001B4A                     _SetDCPWM1:
  4907                           	opt stack 25
  4908                           
  4909                           ;incstack = 0
  4910  001B4A  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  4911  001B4E  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  4912  001B52  0E06               	movlw	6
  4913  001B54                     u15:
  4914  001B54  90D8               	bcf	status,0,c
  4915  001B56  3611               	rlcf	??_SetDCPWM1,f,c
  4916  001B58  3612               	rlcf	??_SetDCPWM1+1,f,c
  4917  001B5A  2EE8               	decfsz	wreg,f,c
  4918  001B5C  D7FB               	goto	u15
  4919  001B5E  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  4920  001B62  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  4921  001B66  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  4922  001B6A  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  4923  001B6E  90D8               	bcf	status,0,c
  4924  001B70  3211               	rrcf	??_SetDCPWM1,f,c
  4925  001B72  90D8               	bcf	status,0,c
  4926  001B74  3211               	rrcf	??_SetDCPWM1,f,c
  4927  001B76  0E30               	movlw	48
  4928  001B78  1611               	andwf	??_SetDCPWM1,f,c
  4929  001B7A  50BD               	movf	4029,w,c	;volatile
  4930  001B7C  0BCF               	andlw	207
  4931  001B7E  1011               	iorwf	??_SetDCPWM1,w,c
  4932  001B80  6EBD               	movwf	4029,c	;volatile
  4933  001B82  0012               	return	
  4934  001B84                     __end_of_SetDCPWM1:
  4935                           	opt stack 0
  4936                           stkptr	equ	0xFFC
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           status	equ	0xFD8
  4947                           
  4948 ;; *************** function _OpenUSART *****************
  4949 ;; Defined at:
  4950 ;;		line 73 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/USART/uopen.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  config          1    wreg     unsigned char 
  4953 ;;  spbrg           2   14[COMRAM] unsigned int 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  config          1   19[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg, status,2
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;Total ram usage:        6 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_initialization
  4976 ;;		_configureUSART
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text47
  4981  001900                     __ptext47:
  4982                           	opt stack 0
  4983  001900                     _OpenUSART:
  4984                           	opt stack 28
  4985                           
  4986                           ;incstack = 0
  4987                           ;OpenUSART@config stored from wreg
  4988  001900  6E14               	movwf	OpenUSART@config,c
  4989  001902  0E00               	movlw	0
  4990  001904  6EAC               	movwf	4012,c	;volatile
  4991  001906  0E00               	movlw	0
  4992  001908  6EAB               	movwf	4011,c	;volatile
  4993  00190A  B014               	btfsc	OpenUSART@config,0,c
  4994  00190C  88AC               	bsf	4012,4,c	;volatile
  4995  00190E  A214               	btfss	OpenUSART@config,1,c
  4996  001910  D002               	goto	l1678
  4997  001912  8CAC               	bsf	4012,6,c	;volatile
  4998  001914  8CAB               	bsf	4011,6,c	;volatile
  4999  001916                     l1678:
  5000  001916  B414               	btfsc	OpenUSART@config,2,c
  5001  001918  8EAC               	bsf	4012,7,c	;volatile
  5002  00191A  A614               	btfss	OpenUSART@config,3,c
  5003  00191C  D002               	goto	l697
  5004  00191E  88AB               	bsf	4011,4,c	;volatile
  5005  001920  D001               	goto	l1686
  5006  001922                     l697:
  5007  001922  8AAB               	bsf	4011,5,c	;volatile
  5008  001924                     l1686:
  5009  001924  B814               	btfsc	OpenUSART@config,4,c
  5010  001926  84AC               	bsf	4012,2,c	;volatile
  5011  001928  989E               	bcf	3998,4,c	;volatile
  5012  00192A  BA14               	btfsc	OpenUSART@config,5,c
  5013  00192C  86AB               	bsf	4011,3,c	;volatile
  5014  00192E  AC14               	btfss	OpenUSART@config,6,c
  5015  001930  D002               	goto	l701
  5016  001932  8A9D               	bsf	3997,5,c	;volatile
  5017  001934  D001               	goto	l702
  5018  001936                     l701:
  5019  001936  9A9D               	bcf	3997,5,c	;volatile
  5020  001938                     l702:
  5021  001938  9A9E               	bcf	3998,5,c	;volatile
  5022  00193A  AE14               	btfss	OpenUSART@config,7,c
  5023  00193C  D002               	goto	l703
  5024  00193E  889D               	bsf	3997,4,c	;volatile
  5025  001940  D001               	goto	l704
  5026  001942                     l703:
  5027  001942  989D               	bcf	3997,4,c	;volatile
  5028  001944                     l704:
  5029  001944  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5030  001948  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5031  00194C  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  5032  001950  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  5033  001952  5012               	movf	??_OpenUSART+1,w,c
  5034  001954  6EB0               	movwf	4016,c	;volatile
  5035  001956  8AAC               	bsf	4012,5,c	;volatile
  5036  001958  8EAB               	bsf	4011,7,c	;volatile
  5037  00195A  9C94               	bcf	3988,6,c	;volatile
  5038  00195C  8E94               	bsf	3988,7,c	;volatile
  5039  00195E  B8AC               	btfsc	4012,4,c	;volatile
  5040  001960  BEAC               	btfsc	4012,7,c	;volatile
  5041  001962  D001               	goto	l706
  5042  001964  8C94               	bsf	3988,6,c	;volatile
  5043  001966                     l706:
  5044  001966  0012               	return	
  5045  001968                     __end_of_OpenUSART:
  5046                           	opt stack 0
  5047                           stkptr	equ	0xFFC
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _OpenTimer2 *****************
  5060 ;; Defined at:
  5061 ;;		line 17 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t2open.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  config          1    wreg     unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  config          1   14[COMRAM] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        1 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_initialization
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text48
  5090  001E1A                     __ptext48:
  5091                           	opt stack 0
  5092  001E1A                     _OpenTimer2:
  5093                           	opt stack 28
  5094                           
  5095                           ;incstack = 0
  5096                           ;OpenTimer2@config stored from wreg
  5097  001E1A  6E0F               	movwf	OpenTimer2@config,c
  5098  001E1C  500F               	movf	OpenTimer2@config,w,c
  5099  001E1E  0BFB               	andlw	251
  5100  001E20  6ECA               	movwf	4042,c	;volatile
  5101  001E22  0E00               	movlw	0
  5102  001E24  6ECC               	movwf	4044,c	;volatile
  5103  001E26  929E               	bcf	3998,1,c	;volatile
  5104  001E28  AE0F               	btfss	OpenTimer2@config,7,c
  5105  001E2A  D002               	goto	l671
  5106  001E2C  829D               	bsf	3997,1,c	;volatile
  5107  001E2E  D001               	goto	l672
  5108  001E30                     l671:
  5109  001E30  929D               	bcf	3997,1,c	;volatile
  5110  001E32                     l672:
  5111  001E32  84CA               	bsf	4042,2,c	;volatile
  5112  001E34  0012               	return	
  5113  001E36                     __end_of_OpenTimer2:
  5114                           	opt stack 0
  5115                           stkptr	equ	0xFFC
  5116                           tblptru	equ	0xFF8
  5117                           tblptrh	equ	0xFF7
  5118                           tblptrl	equ	0xFF6
  5119                           tablat	equ	0xFF5
  5120                           prodh	equ	0xFF4
  5121                           prodl	equ	0xFF3
  5122                           intcon	equ	0xFF2
  5123                           postinc0	equ	0xFEE
  5124                           wreg	equ	0xFE8
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function _OpenPWM2 *****************
  5128 ;; Defined at:
  5129 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2open.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  period          1    wreg     unsigned char 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  period          1   15[COMRAM] unsigned char 
  5134 ;;  ccp2mx          1   16[COMRAM] unsigned char 
  5135 ;;  pmmode          1    0        unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;		None               void
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;Total ram usage:        3 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    1
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_initialization
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text49
  5160  001B84                     __ptext49:
  5161                           	opt stack 0
  5162  001B84                     _OpenPWM2:
  5163                           	opt stack 28
  5164                           
  5165                           ;incstack = 0
  5166                           ;OpenPWM2@period stored from wreg
  5167  001B84  6E10               	movwf	OpenPWM2@period,c
  5168  001B86  0E0C               	movlw	12
  5169  001B88  6EBA               	movwf	4026,c	;volatile
  5170  001B8A  0E05               	movlw	5
  5171  001B8C  6EF6               	movwf	tblptrl,c
  5172  001B8E                     	if	1	;There is more than 1 active tblptr byte
  5173  001B8E  0E00               	movlw	0
  5174  001B90  6EF7               	movwf	tblptrh,c
  5175  001B92                     	endif
  5176  001B92                     	if	1	;There are 3 active tblptr bytes
  5177  001B92  0E30               	movlw	48
  5178  001B94  6EF8               	movwf	tblptru,c
  5179  001B96                     	endif
  5180  001B96  0008               	tblrd		*
  5181  001B98  CFF5 F00F          	movff	tablat,??_OpenPWM2
  5182  001B9C  A00F               	btfss	??_OpenPWM2,0,c
  5183  001B9E  D002               	goto	l1784
  5184  001BA0  6811               	setf	OpenPWM2@ccp2mx,c
  5185  001BA2  D002               	goto	l619
  5186  001BA4                     l1784:
  5187  001BA4  0E00               	movlw	0
  5188  001BA6  6E11               	movwf	OpenPWM2@ccp2mx,c
  5189  001BA8                     l619:
  5190  001BA8  5011               	movf	OpenPWM2@ccp2mx,w,c
  5191  001BAA  B4D8               	btfsc	status,2,c
  5192  001BAC  D002               	goto	l620
  5193  001BAE  9294               	bcf	3988,1,c	;volatile
  5194  001BB0  D001               	goto	l621
  5195  001BB2                     l620:
  5196  001BB2  9693               	bcf	3987,3,c	;volatile
  5197  001BB4                     l621:
  5198  001BB4  94CA               	bcf	4042,2,c	;volatile
  5199  001BB6  C010  FFCB         	movff	OpenPWM2@period,4043	;volatile
  5200  001BBA  84CA               	bsf	4042,2,c	;volatile
  5201  001BBC  0012               	return	
  5202  001BBE                     __end_of_OpenPWM2:
  5203                           	opt stack 0
  5204                           stkptr	equ	0xFFC
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           prodh	equ	0xFF4
  5210                           prodl	equ	0xFF3
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           status	equ	0xFD8
  5215                           
  5216 ;; *************** function _OpenPWM1 *****************
  5217 ;; Defined at:
  5218 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1open.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  period          1    wreg     unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  period          1   14[COMRAM] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;		None               void
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_initialization
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text50
  5247  001EDA                     __ptext50:
  5248                           	opt stack 0
  5249  001EDA                     _OpenPWM1:
  5250                           	opt stack 28
  5251                           
  5252                           ;incstack = 0
  5253                           ;OpenPWM1@period stored from wreg
  5254  001EDA  6E0F               	movwf	OpenPWM1@period,c
  5255  001EDC  0E0C               	movlw	12
  5256  001EDE  12BD               	iorwf	4029,f,c	;volatile
  5257  001EE0  9494               	bcf	3988,2,c	;volatile
  5258  001EE2  94CA               	bcf	4042,2,c	;volatile
  5259  001EE4  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  5260  001EE8  84CA               	bsf	4042,2,c	;volatile
  5261  001EEA  0012               	return	
  5262  001EEC                     __end_of_OpenPWM1:
  5263                           	opt stack 0
  5264                           stkptr	equ	0xFFC
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           wreg	equ	0xFE8
  5274                           status	equ	0xFD8
  5275                           
  5276 ;; *************** function _OpenADC *****************
  5277 ;; Defined at:
  5278 ;;		line 68 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  config          1    wreg     unsigned char 
  5281 ;;  config2         1   14[COMRAM] unsigned char 
  5282 ;;  portconfig      1   15[COMRAM] unsigned char 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  config          1   18[COMRAM] unsigned char 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;		None               void
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;Total ram usage:        5 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_initialization
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text51
  5309  0019C6                     __ptext51:
  5310                           	opt stack 0
  5311  0019C6                     _OpenADC:
  5312                           	opt stack 28
  5313                           
  5314                           ;incstack = 0
  5315                           ;OpenADC@config stored from wreg
  5316  0019C6  6E13               	movwf	OpenADC@config,c
  5317  0019C8  0E00               	movlw	0
  5318  0019CA  6EC2               	movwf	4034,c	;volatile
  5319  0019CC  0E00               	movlw	0
  5320  0019CE  6EC0               	movwf	4032,c	;volatile
  5321  0019D0  90D8               	bcf	status,0,c
  5322  0019D2  300F               	rrcf	OpenADC@config2,w,c
  5323  0019D4  0B3C               	andlw	60
  5324  0019D6  6EC2               	movwf	4034,c	;volatile
  5325  0019D8  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  5326  0019DC  3A11               	swapf	??_OpenADC,f,c
  5327  0019DE  0EF0               	movlw	240
  5328  0019E0  1611               	andwf	??_OpenADC,f,c
  5329  0019E2  0E30               	movlw	48
  5330  0019E4  1611               	andwf	??_OpenADC,f,c
  5331  0019E6  5010               	movf	OpenADC@portconfig,w,c
  5332  0019E8  0B0F               	andlw	15
  5333  0019EA  1011               	iorwf	??_OpenADC,w,c
  5334  0019EC  6EC1               	movwf	4033,c	;volatile
  5335  0019EE  C013  F011         	movff	OpenADC@config,??_OpenADC
  5336  0019F2  90D8               	bcf	status,0,c
  5337  0019F4  3611               	rlcf	??_OpenADC,f,c
  5338  0019F6  90D8               	bcf	status,0,c
  5339  0019F8  3611               	rlcf	??_OpenADC,f,c
  5340  0019FA  0E38               	movlw	56
  5341  0019FC  1611               	andwf	??_OpenADC,f,c
  5342  0019FE  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  5343  001A02  3A12               	swapf	??_OpenADC+1,f,c
  5344  001A04  0E0F               	movlw	15
  5345  001A06  1612               	andwf	??_OpenADC+1,f,c
  5346  001A08  0E07               	movlw	7
  5347  001A0A  1612               	andwf	??_OpenADC+1,f,c
  5348  001A0C  5013               	movf	OpenADC@config,w,c
  5349  001A0E  0B80               	andlw	128
  5350  001A10  1012               	iorwf	??_OpenADC+1,w,c
  5351  001A12  1011               	iorwf	??_OpenADC,w,c
  5352  001A14  6EC0               	movwf	4032,c	;volatile
  5353  001A16  AE0F               	btfss	OpenADC@config2,7,c
  5354  001A18  D003               	goto	l571
  5355  001A1A  9C9E               	bcf	3998,6,c	;volatile
  5356  001A1C  8C9D               	bsf	3997,6,c	;volatile
  5357  001A1E  8CF2               	bsf	intcon,6,c	;volatile
  5358  001A20                     l571:
  5359  001A20  80C2               	bsf	4034,0,c	;volatile
  5360  001A22  0012               	return	
  5361  001A24                     __end_of_OpenADC:
  5362                           	opt stack 0
  5363                           stkptr	equ	0xFFC
  5364                           tblptru	equ	0xFF8
  5365                           tblptrh	equ	0xFF7
  5366                           tblptrl	equ	0xFF6
  5367                           tablat	equ	0xFF5
  5368                           prodh	equ	0xFF4
  5369                           prodl	equ	0xFF3
  5370                           intcon	equ	0xFF2
  5371                           postinc0	equ	0xFEE
  5372                           wreg	equ	0xFE8
  5373                           status	equ	0xFD8
  5374                           
  5375 ;; *************** function _OpenTimer0 *****************
  5376 ;; Defined at:
  5377 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0open.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  config          1    wreg     unsigned char 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  config          1   14[COMRAM] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;		None               void
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;Total ram usage:        1 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    1
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text52
  5406  001D84                     __ptext52:
  5407                           	opt stack 0
  5408  001D84                     _OpenTimer0:
  5409                           	opt stack 29
  5410                           
  5411                           ;incstack = 0
  5412                           ;OpenTimer0@config stored from wreg
  5413  001D84  6E0F               	movwf	OpenTimer0@config,c
  5414  001D86  500F               	movf	OpenTimer0@config,w,c
  5415  001D88  0B7F               	andlw	127
  5416  001D8A  6ED5               	movwf	4053,c	;volatile
  5417  001D8C  0E00               	movlw	0
  5418  001D8E  6ED7               	movwf	4055,c	;volatile
  5419  001D90  0E00               	movlw	0
  5420  001D92  6ED6               	movwf	4054,c	;volatile
  5421  001D94  94F2               	bcf	intcon,2,c	;volatile
  5422  001D96  AE0F               	btfss	OpenTimer0@config,7,c
  5423  001D98  D002               	goto	l642
  5424  001D9A  8AF2               	bsf	intcon,5,c	;volatile
  5425  001D9C  D001               	goto	l643
  5426  001D9E                     l642:
  5427  001D9E  9AF2               	bcf	intcon,5,c	;volatile
  5428  001DA0                     l643:
  5429  001DA0  8ED5               	bsf	4053,7,c	;volatile
  5430  001DA2  0012               	return	
  5431  001DA4                     __end_of_OpenTimer0:
  5432                           	opt stack 0
  5433                           stkptr	equ	0xFFC
  5434                           tblptru	equ	0xFF8
  5435                           tblptrh	equ	0xFF7
  5436                           tblptrl	equ	0xFF6
  5437                           tablat	equ	0xFF5
  5438                           prodh	equ	0xFF4
  5439                           prodl	equ	0xFF3
  5440                           intcon	equ	0xFF2
  5441                           postinc0	equ	0xFEE
  5442                           wreg	equ	0xFE8
  5443                           status	equ	0xFD8
  5444                           
  5445 ;; *************** function _LVtrap *****************
  5446 ;; Defined at:
  5447 ;;		line 447 in file "../sumovore.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;		None               void
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    3
  5468 ;; This function calls:
  5469 ;;		_gtrap
  5470 ;;		_openPORTD
  5471 ;;		_printf
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text53
  5478  001DA4                     __ptext53:
  5479                           	opt stack 0
  5480  001DA4                     _LVtrap:
  5481                           	opt stack 27
  5482                           
  5483                           ;sumovore.c: 449: printf("\\<LVD>");
  5484                           
  5485                           ;incstack = 0
  5486  001DA4  0E10               	movlw	high STR_7
  5487  001DA6  6E11               	movwf	printf@f+1,c
  5488  001DA8  0E6B               	movlw	low STR_7
  5489  001DAA  6E10               	movwf	printf@f,c
  5490  001DAC  ECDF  F00D         	call	_printf	;wreg free
  5491                           
  5492                           ;sumovore.c: 450: openPORTD();
  5493  001DB0  ECB4  F00F         	call	_openPORTD	;wreg free
  5494                           
  5495                           ;sumovore.c: 451: PORTDbits.RD0=!1;
  5496  001DB4  9083               	bcf	3971,0,c	;volatile
  5497                           
  5498                           ;sumovore.c: 452: PORTDbits.RD1=!0;
  5499  001DB6  8283               	bsf	3971,1,c	;volatile
  5500                           
  5501                           ;sumovore.c: 453: PORTDbits.RD2=!0;
  5502  001DB8  8483               	bsf	3971,2,c	;volatile
  5503                           
  5504                           ;sumovore.c: 454: PORTDbits.RD3=!1;
  5505  001DBA  9683               	bcf	3971,3,c	;volatile
  5506                           
  5507                           ;sumovore.c: 455: PORTDbits.RD4=!0;
  5508  001DBC  8883               	bsf	3971,4,c	;volatile
  5509                           
  5510                           ;sumovore.c: 456: gtrap();
  5511  001DBE  EC12  F00D         	call	_gtrap	;wreg free
  5512  001DC2  0012               	return	
  5513  001DC4                     __end_of_LVtrap:
  5514                           	opt stack 0
  5515                           stkptr	equ	0xFFC
  5516                           tblptru	equ	0xFF8
  5517                           tblptrh	equ	0xFF7
  5518                           tblptrl	equ	0xFF6
  5519                           tablat	equ	0xFF5
  5520                           prodh	equ	0xFF4
  5521                           prodl	equ	0xFF3
  5522                           intcon	equ	0xFF2
  5523                           postinc0	equ	0xFEE
  5524                           wreg	equ	0xFE8
  5525                           status	equ	0xFD8
  5526                           
  5527 ;; *************** function _printf *****************
  5528 ;; Defined at:
  5529 ;;		line 464 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  f               2   15[COMRAM] PTR const unsigned char 
  5532 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  5533 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  _val            5    0        struct .
  5536 ;;  ap              2   17[COMRAM] PTR void [1]
  5537 ;;		 -> ?_printf(2), 
  5538 ;;  c               1   19[COMRAM] char 
  5539 ;;  flag            1    0        unsigned char 
  5540 ;;  prec            1    0        char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  2   15[COMRAM] int 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        5 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    2
  5557 ;; This function calls:
  5558 ;;		_putch
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;;		_PORtask
  5562 ;;		_BORtask
  5563 ;;		_WDTtask
  5564 ;;		_STKFULtask
  5565 ;;		_RESETtask
  5566 ;;		_LVtrap
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text54
  5571  001BBE                     __ptext54:
  5572                           	opt stack 0
  5573  001BBE                     _printf:
  5574                           	opt stack 28
  5575                           
  5576                           ;doprnt.c: 466: va_list ap;
  5577                           ;doprnt.c: 499: signed char c;
  5578                           ;doprnt.c: 506: signed char prec;
  5579                           ;doprnt.c: 508: unsigned char flag;
  5580                           ;doprnt.c: 527: union {
  5581                           ;doprnt.c: 528: unsigned int _val;
  5582                           ;doprnt.c: 529: struct {
  5583                           ;doprnt.c: 530: const char * _cp;
  5584                           ;doprnt.c: 531: unsigned _len;
  5585                           ;doprnt.c: 532: } _str;
  5586                           ;doprnt.c: 533: } _val;
  5587                           ;doprnt.c: 542: *ap = __va_start();
  5588                           
  5589                           ;incstack = 0
  5590  001BBE  0E00               	movlw	high (?_printf+2)
  5591  001BC0  6E13               	movwf	printf@ap+1,c
  5592  001BC2  0E12               	movlw	low (?_printf+2)
  5593  001BC4  6E12               	movwf	printf@ap,c
  5594                           
  5595                           ;doprnt.c: 545: while(c = *f++) {
  5596  001BC6  D003               	goto	l1388
  5597  001BC8                     l1386:
  5598                           
  5599                           ;doprnt.c: 549: {
  5600                           ;doprnt.c: 550: (putch(c) );
  5601  001BC8  5014               	movf	printf@c,w,c
  5602  001BCA  EC90  F00F         	call	_putch
  5603  001BCE                     l1388:
  5604  001BCE  C010  FFF6         	movff	printf@f,tblptrl
  5605  001BD2  C011  FFF7         	movff	printf@f+1,tblptrh
  5606  001BD6  4A10               	infsnz	printf@f,f,c
  5607  001BD8  2A11               	incf	printf@f+1,f,c
  5608  001BDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5609  001BDA  6AF8               	clrf	tblptru,c
  5610  001BDC                     	endif
  5611  001BDC                     	if	0	;tblptru may be non-zero
  5612  001BDC                     	endif
  5613  001BDC  0008               	tblrd		*
  5614  001BDE  CFF5 F014          	movff	tablat,printf@c
  5615  001BE2  6614               	tstfsz	printf@c& (0+255),c
  5616  001BE4  D7F1               	goto	l1386
  5617                           
  5618                           ;doprnt.c: 1478: }
  5619                           ;doprnt.c: 1542: }
  5620                           ;doprnt.c: 1549: return 0;
  5621                           ;	Return value of _printf is never used
  5622  001BE6  0012               	return	
  5623  001BE8                     __end_of_printf:
  5624                           	opt stack 0
  5625                           stkptr	equ	0xFFC
  5626                           tblptru	equ	0xFF8
  5627                           tblptrh	equ	0xFF7
  5628                           tblptrl	equ	0xFF6
  5629                           tablat	equ	0xFF5
  5630                           prodh	equ	0xFF4
  5631                           prodl	equ	0xFF3
  5632                           intcon	equ	0xFF2
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           status	equ	0xFD8
  5636                           
  5637 ;; *************** function _putch *****************
  5638 ;; Defined at:
  5639 ;;		line 51 in file "../../Common/configureUSART.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  data            1    wreg     unsigned char 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  data            1   14[COMRAM] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;		None               void
  5646 ;; Registers used:
  5647 ;;		wreg
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;Total ram usage:        1 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_printf
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text55
  5668  001F20                     __ptext55:
  5669                           	opt stack 0
  5670  001F20                     _putch:
  5671                           	opt stack 28
  5672                           
  5673                           ;incstack = 0
  5674                           ;putch@data stored from wreg
  5675  001F20  6E0F               	movwf	putch@data,c
  5676  001F22                     l531:
  5677  001F22  A89E               	btfss	3998,4,c	;volatile
  5678  001F24  D7FE               	goto	l531
  5679                           
  5680                           ;configureUSART.c: 54: TXREG = data;
  5681  001F26  C00F  FFAD         	movff	putch@data,4013	;volatile
  5682  001F2A  0012               	return	
  5683  001F2C                     __end_of_putch:
  5684                           	opt stack 0
  5685                           stkptr	equ	0xFFC
  5686                           tblptru	equ	0xFF8
  5687                           tblptrh	equ	0xFF7
  5688                           tblptrl	equ	0xFF6
  5689                           tablat	equ	0xFF5
  5690                           prodh	equ	0xFF4
  5691                           prodl	equ	0xFF3
  5692                           intcon	equ	0xFF2
  5693                           postinc0	equ	0xFEE
  5694                           wreg	equ	0xFE8
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _openPORTD *****************
  5698 ;; Defined at:
  5699 ;;		line 167 in file "../sumovore.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		wreg, status,2
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        0 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_initialization
  5724 ;;		_LVtrap
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text56
  5729  001F68                     __ptext56:
  5730                           	opt stack 0
  5731  001F68                     _openPORTD:
  5732                           	opt stack 28
  5733                           
  5734                           ;sumovore.c: 169: TRISD = 0b01100000;
  5735                           
  5736                           ;incstack = 0
  5737  001F68  0E60               	movlw	96
  5738  001F6A  6E95               	movwf	3989,c	;volatile
  5739  001F6C  0012               	return	
  5740  001F6E                     __end_of_openPORTD:
  5741                           	opt stack 0
  5742                           stkptr	equ	0xFFC
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           prodh	equ	0xFF4
  5748                           prodl	equ	0xFF3
  5749                           intcon	equ	0xFF2
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function _gtrap *****************
  5755 ;; Defined at:
  5756 ;;		line 462 in file "../sumovore.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  count           4   14[COMRAM] unsigned long 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;		None               void
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;Total ram usage:        4 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_BORtask
  5781 ;;		_WDTtask
  5782 ;;		_STKFULtask
  5783 ;;		_RESETtask
  5784 ;;		_LVtrap
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text57
  5789  001A24                     __ptext57:
  5790                           	opt stack 0
  5791  001A24                     _gtrap:
  5792                           	opt stack 26
  5793                           
  5794                           ;sumovore.c: 464: unsigned long count=0;
  5795                           
  5796                           ;incstack = 0
  5797  001A24  0E00               	movlw	0
  5798  001A26  6E0F               	movwf	gtrap@count,c
  5799  001A28  0E00               	movlw	0
  5800  001A2A  6E10               	movwf	gtrap@count+1,c
  5801  001A2C  0E00               	movlw	0
  5802  001A2E  6E11               	movwf	gtrap@count+2,c
  5803  001A30  0E00               	movlw	0
  5804  001A32  6E12               	movwf	gtrap@count+3,c
  5805  001A34                     l241:
  5806  001A34  0004               	clrwdt		;# 
  5807                           
  5808                           ;sumovore.c: 469: if (count==30000u)
  5809  001A36  5010               	movf	gtrap@count+1,w,c
  5810  001A38  0A75               	xorlw	117
  5811  001A3A  0E30               	movlw	48
  5812  001A3C  B4D8               	btfsc	status,2,c
  5813  001A3E  180F               	xorwf	gtrap@count,w,c
  5814  001A40  1011               	iorwf	gtrap@count+2,w,c
  5815  001A42  1012               	iorwf	gtrap@count+3,w,c
  5816  001A44  A4D8               	btfss	status,2,c
  5817  001A46  D00B               	goto	l1412
  5818                           
  5819                           ;sumovore.c: 470: {
  5820                           ;sumovore.c: 471: count=0;
  5821  001A48  0E00               	movlw	0
  5822  001A4A  6E0F               	movwf	gtrap@count,c
  5823  001A4C  0E00               	movlw	0
  5824  001A4E  6E10               	movwf	gtrap@count+1,c
  5825  001A50  0E00               	movlw	0
  5826  001A52  6E11               	movwf	gtrap@count+2,c
  5827  001A54  0E00               	movlw	0
  5828  001A56  6E12               	movwf	gtrap@count+3,c
  5829                           
  5830                           ;sumovore.c: 472: PORTDbits.RD0=!1;
  5831  001A58  9083               	bcf	3971,0,c	;volatile
  5832                           
  5833                           ;sumovore.c: 473: PORTDbits.RD1=!0;
  5834  001A5A  8283               	bsf	3971,1,c	;volatile
  5835                           
  5836                           ;sumovore.c: 474: }
  5837  001A5C  D00B               	goto	l1416
  5838  001A5E                     l1412:
  5839                           
  5840                           ;sumovore.c: 475: else if (count==15000u)
  5841  001A5E  5010               	movf	gtrap@count+1,w,c
  5842  001A60  0A3A               	xorlw	58
  5843  001A62  0E98               	movlw	152
  5844  001A64  B4D8               	btfsc	status,2,c
  5845  001A66  180F               	xorwf	gtrap@count,w,c
  5846  001A68  1011               	iorwf	gtrap@count+2,w,c
  5847  001A6A  1012               	iorwf	gtrap@count+3,w,c
  5848  001A6C  A4D8               	btfss	status,2,c
  5849  001A6E  D002               	goto	l1416
  5850                           
  5851                           ;sumovore.c: 476: {
  5852                           ;sumovore.c: 477: PORTDbits.RD0=!0;
  5853  001A70  8083               	bsf	3971,0,c	;volatile
  5854                           
  5855                           ;sumovore.c: 478: PORTDbits.RD1=!1;
  5856  001A72  9283               	bcf	3971,1,c	;volatile
  5857  001A74                     l1416:
  5858                           
  5859                           ;sumovore.c: 479: }
  5860                           ;sumovore.c: 480: count++;
  5861  001A74  0E01               	movlw	1
  5862  001A76  260F               	addwf	gtrap@count,f,c
  5863  001A78  0E00               	movlw	0
  5864  001A7A  2210               	addwfc	gtrap@count+1,f,c
  5865  001A7C  2211               	addwfc	gtrap@count+2,f,c
  5866  001A7E  2212               	addwfc	gtrap@count+3,f,c
  5867  001A80  D7D9               	goto	l241
  5868  001A82                     __end_of_gtrap:
  5869                           	opt stack 0
  5870                           stkptr	equ	0xFFC
  5871                           tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           intcon	equ	0xFF2
  5878                           postinc0	equ	0xFEE
  5879                           wreg	equ	0xFE8
  5880                           status	equ	0xFD8
  5881                           
  5882 ;; *************** function _high_isr *****************
  5883 ;; Defined at:
  5884 ;;		line 24 in file "../interrupts.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;		None
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;		None               void
  5891 ;; Registers used:
  5892 ;;		wreg, status,2
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;Total ram usage:       14 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		Interrupt level 2
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	intcode
  5912  000008                     __pintcode:
  5913                           	opt stack 0
  5914  000008                     _high_isr:
  5915                           	opt stack 24
  5916                           
  5917                           ;incstack = 0
  5918  000008  CFFA F001          	movff	pclath,??_high_isr
  5919  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5920  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5921  000014  ED41  F00C         	call	int_func,f	;refresh shadow registers
  5922                           stkptr	equ	0xFFC
  5923                           pclatu	equ	0xFFB
  5924                           pclath	equ	0xFFA
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           postinc0	equ	0xFEE
  5933                           fsr0l	equ	0xFE9
  5934                           wreg	equ	0xFE8
  5935                           status	equ	0xFD8
  5936                           
  5937                           	psect	intcode_body
  5938  001882                     __pintcode_body:
  5939                           	opt stack 24
  5940  001882                     int_func:
  5941                           	opt stack 24
  5942  001882  0006               	pop		; remove dummy address from shadow register refresh
  5943  001884  CFEA F004          	movff	fsr0h,??_high_isr+3
  5944  001888  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5945  00188C  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5946  001890  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5947  001894  CFDA F008          	movff	fsr2h,??_high_isr+7
  5948  001898  CFF3 F009          	movff	prodl,??_high_isr+8
  5949  00189C  CFF4 F00A          	movff	prodh,??_high_isr+9
  5950  0018A0  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5951  0018A4  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  5952  0018A8  CFF8 F00D          	movff	tblptru,??_high_isr+12
  5953  0018AC  CFF5 F00E          	movff	tablat,??_high_isr+13
  5954                           
  5955                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  5956  0018B0  94A1               	bcf	4001,2,c	;volatile
  5957                           
  5958                           ;interrupts.c: 27: TRISA = 0xff;
  5959  0018B2  6892               	setf	3986,c	;volatile
  5960                           
  5961                           ;interrupts.c: 28: TRISB = 0xff;
  5962  0018B4  6893               	setf	3987,c	;volatile
  5963                           
  5964                           ;interrupts.c: 29: TRISC = 0xff;
  5965  0018B6  6894               	setf	3988,c	;volatile
  5966                           
  5967                           ;interrupts.c: 30: TRISD = 0xff;
  5968  0018B8  6895               	setf	3989,c	;volatile
  5969                           
  5970                           ;interrupts.c: 31: TRISE = 0x03;
  5971  0018BA  0E03               	movlw	3
  5972  0018BC  6E96               	movwf	3990,c	;volatile
  5973                           
  5974                           ;interrupts.c: 32: lvd_flag =1;
  5975  0018BE  0E01               	movlw	1
  5976  0018C0  6E2D               	movwf	_lvd_flag,c
  5977                           
  5978                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  5979  0018C2  94A0               	bcf	4000,2,c	;volatile
  5980                           
  5981                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  5982  0018C4  98D2               	bcf	4050,4,c	;volatile
  5983  0018C6  C00E  FFF5         	movff	??_high_isr+13,tablat
  5984  0018CA  C00D  FFF8         	movff	??_high_isr+12,tblptru
  5985  0018CE  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  5986  0018D2  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  5987  0018D6  C00A  FFF4         	movff	??_high_isr+9,prodh
  5988  0018DA  C009  FFF3         	movff	??_high_isr+8,prodl
  5989  0018DE  C008  FFDA         	movff	??_high_isr+7,fsr2h
  5990  0018E2  C007  FFD9         	movff	??_high_isr+6,fsr2l
  5991  0018E6  C006  FFE2         	movff	??_high_isr+5,fsr1h
  5992  0018EA  C005  FFE1         	movff	??_high_isr+4,fsr1l
  5993  0018EE  C004  FFEA         	movff	??_high_isr+3,fsr0h
  5994  0018F2  C003  FFE9         	movff	??_high_isr+2,fsr0l
  5995  0018F6  C002  FFFB         	movff	??_high_isr+1,pclatu
  5996  0018FA  C001  FFFA         	movff	??_high_isr,pclath
  5997  0018FE  0011               	retfie		f
  5998  001900                     __end_of_high_isr:
  5999                           	opt stack 0
  6000                           stkptr	equ	0xFFC
  6001                           pclatu	equ	0xFFB
  6002                           pclath	equ	0xFFA
  6003                           tblptru	equ	0xFF8
  6004                           tblptrh	equ	0xFF7
  6005                           tblptrl	equ	0xFF6
  6006                           tablat	equ	0xFF5
  6007                           prodh	equ	0xFF4
  6008                           prodl	equ	0xFF3
  6009                           intcon	equ	0xFF2
  6010                           postinc0	equ	0xFEE
  6011                           fsr0h	equ	0xFEA
  6012                           fsr0l	equ	0xFE9
  6013                           wreg	equ	0xFE8
  6014                           fsr1h	equ	0xFE2
  6015                           fsr1l	equ	0xFE1
  6016                           fsr2h	equ	0xFDA
  6017                           fsr2l	equ	0xFD9
  6018                           status	equ	0xFD8
  6019                           stkptr	equ	0xFFC
  6020                           pclatu	equ	0xFFB
  6021                           pclath	equ	0xFFA
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           prodh	equ	0xFF4
  6027                           prodl	equ	0xFF3
  6028                           intcon	equ	0xFF2
  6029                           postinc0	equ	0xFEE
  6030                           fsr0h	equ	0xFEA
  6031                           fsr0l	equ	0xFE9
  6032                           wreg	equ	0xFE8
  6033                           fsr1h	equ	0xFE2
  6034                           fsr1l	equ	0xFE1
  6035                           fsr2h	equ	0xFDA
  6036                           fsr2l	equ	0xFD9
  6037                           status	equ	0xFD8
  6038                           
  6039                           	psect	rparam
  6040  0000                     stkptr	equ	0xFFC
  6041                           pclatu	equ	0xFFB
  6042                           pclath	equ	0xFFA
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           postinc0	equ	0xFEE
  6051                           fsr0h	equ	0xFEA
  6052                           fsr0l	equ	0xFE9
  6053                           wreg	equ	0xFE8
  6054                           fsr1h	equ	0xFE2
  6055                           fsr1l	equ	0xFE1
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    14
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1446$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _motor_control->_set_directive
    _start_tmr->_WriteTimer0
    _check_state->_check_sensors
    _check_sensors->_adc
    _adc->_ReadADC
    _adc->_SetChanADC
    _change_track->_set_directive
    _turn_right->_set_motor_speed
    _turn_left->_set_motor_speed
    _straight_fwd->_set_motor_speed
    _spin_right->_set_motor_speed
    _spin_left->_set_motor_speed
    _pirouette_right->_set_motor_speed
    _pirouette_left->_set_motor_speed
    _full_stp->_set_motor_speed
    _set_motor_speed->_SetDCPWM1
    _set_motor_speed->_SetDCPWM2
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _LVtrap->_printf
    _printf->_putch

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45672
                             _LVtrap
                         _OpenTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                      _motor_control
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _motor_control                                        0     0      0   41525
                         _ReadTimer0
                       _change_track
                        _check_state
                            _clr_tmr
                           _full_stp
                      _set_directive
                          _start_tmr
 ---------------------------------------------------------------------------------
 (2) _start_tmr                                            0     0      0     151
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (3) _WriteTimer0                                          4     2      2     151
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clr_tmr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_state                                          0     0      0      30
                      _check_sensors
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_sensors                                        1     1      0      30
                                             19 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (4) _adc                                                  3     1      2      30
                                             16 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _change_track                                         0     0      0   19530
                            _clr_mem
                      _set_directive
 ---------------------------------------------------------------------------------
 (2) _set_directive                                        2     0      2   19530
                                             29 COMRAM     2     0      2
                           _full_stp
                     _pirouette_left
                    _pirouette_right
                          _spin_left
                         _spin_right
                       _straight_fwd
                          _turn_left
                         _turn_right
 ---------------------------------------------------------------------------------
 (3) _turn_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _turn_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _straight_fwd                                         0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_right                                      0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_left                                       0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _full_stp                                             0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (4) _set_motor_speed                                      9     6      3    2254
                                             20 COMRAM     9     6      3
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (3) _clr_mem                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      30
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3225
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2245
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     461
                                             20 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     446
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM2                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM1                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     256
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      30
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     211
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     446
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12    10      2     416
                                             15 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _motor_control
     _ReadTimer0
     _change_track
       _clr_mem
       _set_directive
         _full_stp
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _straight_fwd
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
     _check_state
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _set_leds
     _clr_tmr
     _full_stp
       _set_motor_speed
         _SetDCPWM1
         _SetDCPWM2
     _set_directive
       _full_stp
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _straight_fwd
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
     _start_tmr
       _WriteTimer0
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      2D       1       35.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      34        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Apr  5 00:46:33 2018

                         _STKPTRbits 000FFC                                   u15 1B54  
                                 u25 1B1A                                   u70 151C  
                                 u90 1548                                   u76 151E  
                                 u96 154A                          __CFG_BORV$0 000000  
                   ??_pirouette_left 001E                                  l211 1B0E  
                                l214 175E                                  l310 16C8  
                                l215 1706                                  l207 1B00  
                                l241 1A34                                  l330 19AC  
                                l323 197E                                  l180 1512  
                                l404 135C                                  l333 19BC  
                                l326 198E                                  l183 153E  
                                l336 19C4                                  l531 1F22  
                                l620 1BB2                                  l621 1BB4  
                                l701 1936                                  l702 1938  
                                l703 1942                                  l704 1944  
                                l456 1C0E                                  l713 1EF8  
                                l642 1D9E                                  l706 1966  
                                l722 1EA2                                  l643 1DA0  
                                l571 1A20                                  l619 1BA8  
                                l731 1E8E                                  l549 1F1E  
                                l671 1E30                                  l672 1E32  
                                l697 1922                                  u100 1F1C  
                                u200 160C                                  u210 180C  
                                u220 1822                                  u206 160E  
                                u230 183A                                  u160 156E  
                                u240 1854                                  u216 180E  
                                u170 1594                                  u250 1870  
                                u226 1824                                  u180 15BE  
                                u236 183C                                  u190 15E6  
                                u166 1570                                  u246 1856  
                                _PR2 000FCB                                  u176 1596  
                                u256 1872                                  u186 15C0  
                                u196 15E8                 __size_of_WriteTimer0 0012  
                                _adc 1D40                 __end_of_change_track 19C6  
                                wreg 000FE8                    ??_pirouette_right 001E  
                    ReadTimer0@timer 0011                         __CFG_LVP$OFF 000000  
                       __CFG_WDT$OFF 000000                                 ?_adc 0011  
                               l2010 128A                                 l2002 1260  
                               l2030 12F2                                 l2022 12D0  
                               l2014 12A2                                 l2006 1272  
                               l2040 1330                                 l2042 1338  
                               l2018 12BA                                 l1412 1A5E  
                               l2052 1376                                 l2036 131A  
                               l2028 12EE                                 l2124 1AB2  
                               l1510 1EF6                                 l1350 14FA  
                               l2062 13AC                                 l1416 1A74  
                               l1360 152A                                 l1346 14E2  
                               l1610 1630                                 l2082 140A  
                               l2074 13E8                                 l2066 13C2  
                               l2090 1418                                 l2084 140E  
                               l2076 13EC                                 l2068 13CA  
                               l2092 1488                                 l1462 1EA0  
                               l1366 1540                                 l1358 1514  
                               l1622 165A                                 l2086 1412  
                               l1640 169C                                 l1616 1644  
                               l1386 1BC8                                 l1554 1E8C  
                               l1634 1686                                 l1394 1D4C  
                               l1388 1BCE                                 l1492 173C  
                               l1724 1AE0                                 l1628 1670  
                               l1812 1996                                 l1734 1B0A  
                               l1646 16B2                                 l1496 1752  
                               l1728 1AF0                                 l1912 110A  
                               l1904 10DA                                 l1922 1138  
                               l1932 1162                                 l1908 10F2  
                               l1686 1924                                 l1678 1916  
                               l1950 11AC                                 l1942 1192  
                               l1918 112A                                 l1784 1BA4  
                               l1936 1172                                 l1928 1158  
                               l1970 11F8                                 l1946 119C  
                               l1964 11D8                                 l1956 11CC  
                               l1892 10A2                                 l1992 1236  
                               l1984 122A                                 l1896 10BA  
                               l1978 120A                                 l1998 1256  
                    __end_of_BORtask 1D84                                 STR_1 100F  
                               STR_2 1078                                 STR_3 1072  
                               STR_4 1062                                 STR_5 1059  
                               STR_6 104F                                 STR_7 106B  
                               _TMR2 000FCC                         __CFG_WDTPS$8 000000  
                               _TXIF 007CF4                     ??_initialization 001D  
                               _main 1A82                __end_of_check_sensors 161C  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               pclat 000FFA                        __CFG_BOREN$ON 000000  
                    __end_of_PORtask 1774                                 prodh 000FF4  
                               prodl 000FF3                __size_of_straight_fwd 0026  
                               start 0018                      __end_of_WDTtask 1DFE  
                    __end_of_BusyADC 1F20                      __end_of_ReadADC 1F40  
                    __end_of_OpenADC 1A24                                ??_adc 0013  
                              ?_main 0001                                _T0CON 000FD5  
                              _T2CON 000FCA                   __size_of_RESETtask 001C  
                              _RCSTA 000FAB                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _SPBRG 000FAF  
                              _PORTD 000F83                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                    _set_motor_speed 148E                                _TXREG 000FAD  
                              _TXSTA 000FAC                      __end_of_isWDTTO 1E90  
            __end_of_openPORTCforPWM 1F08                      __end_of_clr_mem 1F4A  
                    __end_of_clr_tmr 1F14                                _isBOR 1EEC  
                              _isPOR 1E90                                _count 0020  
                              _gtrap 1A24                 __size_of_check_state 000A  
                       _straight_fwd 1C5C                                _putch 1F20  
                    __end_of_openLVD 1E66                           _ConvertADC 1F6E  
                              tablat 000FF5           __size_of_openPORTCforUSART 0006  
                              status 000FD8                          ?_STKFULtask 0001  
                     __CFG_MCLRE$OFF 000000                      __initialization 1EA4  
                       __end_of_main 1AD0                           _ReadTimer0 1EC8  
                   __end_of_OpenPWM1 1EEC                     __end_of_OpenPWM2 1BBE  
                             ??_main 0020                        __activetblptr 000003  
                         _SetChanADC 1E66                            ??_BORtask 0015  
                             ?_isBOR 0001                               ?_isPOR 0001  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               ?_gtrap 0001  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _CCPR1L 000FBE                               _CCPR2L 000FBB  
                             ?_putch 0001                            ??_PORtask 0015  
                          ??_WDTtask 0015                           _OpenTimer0 1D84  
                         _OpenTimer2 1E1A                               _TMR0IF 007F92  
                             _SPBRGH 000FB0                   __size_of_SetDCPWM1 003A  
                 __size_of_SetDCPWM2 003A                            ??_BusyADC 000F  
                          ??_ReadADC 0011                               _LVtrap 1DA4  
                  __end_of_RESETtask 1E1A                            ??_OpenADC 0011  
                       ?_reset_codes 0001                     __end_of_high_isr 1900  
                 __size_of_OpenUSART 0068                       __CFG_STVREN$ON 000000  
                   OpenTimer0@config 000F              __end_of_set_motor_speed 1558  
                   OpenTimer2@config 000F                               _memory 0022  
                             clear_0 1EAA                     __end_of_full_stp 1D40  
              __size_of_change_track 005E                            ??_isWDTTO 000F  
                             _printf 1BBE                            ??_clr_mem 000F  
                          ??_clr_tmr 000F                     __end_of_set_leds 1882  
                          ??_openLVD 000F                  __size_of_STKFULtask 001E  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   ?_openPORTCforPWM 0001                __end_of_set_directive 16CA  
                        ?_ConvertADC 0001                           __accesstop 0080  
            __end_of__initialization 1EB0          set_motor_speed@dir_modifier 001B  
                         adc@channel 0013                         _change_track 1968  
              __end_of_set_osc_32MHz 1C10                       __pcstackCOMRAM 0001  
                        ?_ReadTimer0 000F                        __end_of_isBOR 1EFA  
                      __end_of_isPOR 1EA4                      _pirouette_right 1CCE  
                      __end_of_gtrap 1A82                        __end_of_putch 1F2C  
                  __end_of_SetDCPWM1 1B84                    __end_of_SetDCPWM2 1B4A  
                      ??_StatusReset 000F                          ?_SetChanADC 0001  
                      ?_lvd_flag_set 0001                              ??_isBOR 000F  
                            ??_isPOR 000F                    __end_of_OpenUSART 1968  
                            ??_gtrap 000F                              ??_putch 000F  
                        ?_OpenTimer0 0001                          ?_OpenTimer2 0001  
                          ?_OpenPWM1 0001                            ?_OpenPWM2 0001  
                            ?_LVtrap 0001                   __size_of_openPORTA 0006  
                 __size_of_openPORTB 0006                   __size_of_openPORTD 0006  
                 __size_of_openPORTE 0006                __end_of_motor_control 148E  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                   WriteTimer0@timer 0011                     ?_set_motor_speed 0015  
                      ??_WriteTimer0 0011                  __size_of_ConvertADC 0004  
                            ?_printf 0010                              _BORtask 1D64  
                     ??_lvd_flag_set 000F                   __size_of_spin_left 0026  
         set_motor_speed@motor_speed 0015                            ?_high_isr 0001  
                __end_of_StatusReset 1F50                   __size_of_start_tmr 0018  
                __size_of_ReadTimer0 0012                              _PORtask 16CA  
                            _WDTtask 1DE2                            ?_full_stp 0001  
                            _BusyADC 1F14                              _ReadADC 1F36  
                         ??_OpenPWM1 000F                           ??_OpenPWM2 000F  
                       ??_STKFULtask 0015                              _SeeLine 002C  
                 __size_of_turn_left 0026              __end_of_pirouette_right 1CF4  
                            _OpenADC 19C6                      __size_of_LVtrap 0020  
                            __Hparam 0000                  __size_of_SetChanADC 0016  
                            __Lparam 0000                            ?_set_leds 0001  
               __size_of_reset_codes 0040                         __psmallconst 1000  
                            __pcinit 1EA4                              _isWDTTO 1E7C  
                            __ramtop 1000                  __size_of_OpenTimer0 0020  
                __size_of_OpenTimer2 001C                              __ptext0 1A82  
                            __ptext1 1080                              __ptext2 1E36  
                            __ptext3 1EB6                              __ptext4 1F08  
                            __ptext5 1F2C                              __ptext6 1804  
                            __ptext7 1558                              __ptext8 1D40  
                            __ptext9 1E66                              _clr_mem 1F40  
                            _clr_tmr 1F08                      __size_of_printf 002A  
                          _T0CONbits 000FD5                         __size_of_adc 0024  
                          _T2CONbits 000FCA               __size_of_check_sensors 00C4  
                      ??_check_state 0015                              _openLVD 1E4E  
                __end_of_WriteTimer0 1EC8                   __end_of_STKFULtask 1DE2  
                  __end_of_openPORTA 1F68                    __end_of_openPORTB 1F62  
                  __end_of_openPORTD 1F6E                    __end_of_openPORTE 1F56  
            __size_of_pirouette_left 0026                       OpenADC@config2 000F  
                         ??_high_isr 0001                       __pintcode_body 1882  
               end_of_initialization 1EB0                              int_func 1882  
                         ??_full_stp 001E                           ??_set_leds 000F  
                         _move_state 0024                            _RCSTAbits 000FAB  
                            printf@c 0014                              printf@f 0010  
                  __end_of_spin_left 1CCE                            _RESETtask 1DFE  
                            postinc0 000FEE              __size_of_initialization 0090  
                  __end_of_start_tmr 1E4E                            _PORTCbits 000F82  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                     set_osc_32MHz@i 000F                          _StatusReset 1F4A  
                  __end_of_turn_left 1C5C                            _TRISBbits 000F93  
                          _TRISCbits 000F94                           _spin_right 1C82  
                       ??_ConvertADC 000F                  __end_of_check_state 1F36  
                          _TXSTAbits 000FAC                        _check_sensors 1558  
                   ?_pirouette_right 0001                       __end_of_LVtrap 1DC4  
               __end_of_lvd_flag_set 1F76                         ??_ReadTimer0 0011  
                         ?_RESETtask 0001                          _BAUDCONbits 000FB8  
                        _WriteTimer0 1EB6                           _turn_right 1C10  
                 __end_of_ConvertADC 1F72                         ??_SetChanADC 000F  
                     __end_of_printf 1BE8                  start_initialization 1EA4  
                          _SetDCPWM1 1B4A                            _SetDCPWM2 1B10  
                    SetDCPWM1@DCycle 0013                          __end_of_adc 1D64  
                    SetDCPWM2@DCycle 0013                         ??_OpenTimer0 000F  
                       ??_OpenTimer2 000F                   __end_of_ReadTimer0 1EDA  
                          _OpenUSART 1900             __size_of_openPORTCforPWM 000E  
                     ?_check_sensors 0001                     __CFG_OSC$INTIO67 000000  
                           ??_LVtrap 0015                   __end_of_SetChanADC 1E7C  
                  __size_of_OpenPWM1 0012                    __size_of_OpenPWM2 003A  
             __size_of_set_directive 00AE                             ??_printf 0012  
                         gtrap@count 000F                   __end_of_OpenTimer0 1DA4  
                 __end_of_OpenTimer2 1E36                          __pbssCOMRAM 0020  
                           ?_BORtask 0001                          _check_state 1F2C  
                         ?_SetDCPWM1 000F                           ?_SetDCPWM2 000F  
                        ?_spin_right 0001                        PORtask@count1 0015  
                      PORtask@count2 0019                  __end_of__stringdata 107E  
                     _pirouette_left 1CF4               __size_of_set_osc_32MHz 0028  
                      ?_straight_fwd 0001             set_motor_speed@the_motor 001A  
                           ?_PORtask 0001                             ?_WDTtask 0001  
                         ?_OpenUSART 000F                    __size_of_high_isr 18F8  
                           ?_BusyADC 0001                             ?_ReadADC 000F  
                  OpenADC@portconfig 0010                             ?_OpenADC 000F  
                  __size_of_full_stp 0026                            __pintcode 0008  
                        ??_RESETtask 0015                       _initialization 1774  
                  __size_of_set_leds 007E                             ?_isWDTTO 0001  
                        ?_turn_right 0001                             ?_clr_mem 0001  
                           ?_clr_tmr 0001                          __smallconst 1000  
                  WriteTimer0@timer0 000F               __end_of_pirouette_left 1D1A  
                           ?_openLVD 0001             __size_of_set_motor_speed 00CA  
                     ??_straight_fwd 001E                       __size_of_isBOR 000E  
                     __size_of_isPOR 0014                       __size_of_gtrap 005E  
                     __size_of_putch 000C               __size_of_motor_control 040E  
                    ??_check_sensors 0014                        _set_directive 161C  
                          _openPORTA 1F62                            _openPORTB 1F5C  
                          _openPORTD 1F68                            _openPORTE 1F50  
                      OpenADC@config 0013                __size_of_lvd_flag_set 0004  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                        ??_reset_codes 001D  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
             __end_of_initialization 1804                             _RCONbits 000FD0  
                  ??_openPORTCforPWM 000F                        _set_osc_32MHz 1BE8  
                __size_of_spin_right 0026  __end_ofset_motor_speed@motor_speeds 100F  
        set_motor_speed@motor_speeds 1001                          _HLVDCONbits 000FD2  
                          _threshold 0028                            _spin_left 1CA8  
                         _ADCON0bits 000FC2                          __stringdata 100F  
                          _tmr_state 002A                            _start_tmr 1E36  
                       ?_StatusReset 0001                      ?_pirouette_left 0001  
                        ??_SetDCPWM1 0011                          ??_SetDCPWM2 0011  
                   __size_of_BORtask 0020                         _lvd_flag_set 1F72  
                          _turn_left 1C36                       ?_set_directive 001E  
                   __size_of_PORtask 00AA                          ??_OpenUSART 0011  
                 SetDCPWM1@dutycycle 000F                           ?_openPORTA 0001  
                         ?_openPORTB 0001                           ?_openPORTD 0001  
                         ?_openPORTE 0001                     __size_of_WDTtask 001C  
                    OpenUSART@config 0014                  __size_of_turn_right 0026  
                           _OpenPWM1 1EDA                             _OpenPWM2 1B84  
                   __size_of_BusyADC 000C                     __size_of_ReadADC 000A  
                           __Hrparam 0000                        ?_change_track 0001  
                   __size_of_OpenADC 005E                      ?_initialization 0001  
                           __Lrparam 0000                   SetDCPWM2@dutycycle 000F  
                     ?_set_osc_32MHz 0001                  __end_of_reset_codes 1B10  
                      _motor_control 1080                         ?_WriteTimer0 000F  
                         ?_spin_left 0001                       OpenPWM2@ccp2mx 0011  
                   __size_of_isWDTTO 0014                           ?_start_tmr 0001  
                   __size_of_clr_mem 000A        set_motor_speed@speed_modifier 0016  
                   __size_of_clr_tmr 000C                       OpenPWM1@period 000F  
                     OpenPWM2@period 0010                     __size_of_openLVD 0018  
                           __ptext10 1F36                             __ptext11 1F6E  
                           __ptext20 1CCE                             __ptext12 1F14  
                           __ptext21 1CF4                             __ptext13 1968  
                           __ptext30 1E7C                             __ptext22 1D1A  
                           __ptext14 161C                             __ptext31 1E90  
                           __ptext23 148E                             __ptext15 1C10  
                           __ptext40 1F56                             __ptext32 1EEC  
                           __ptext24 1F40                             __ptext16 1C36  
                           __ptext41 1EFA                             __ptext33 1DE2  
                           __ptext25 1EC8                             __ptext17 1C5C  
                           __ptext50 1EDA                             __ptext42 1F5C  
                           __ptext34 1DC4                             __ptext26 1F72  
                           __ptext18 1C82                             __ptext51 19C6  
                           __ptext43 1F62                             __ptext35 1DFE  
                           __ptext27 1774                             __ptext19 1CA8  
                           __ptext52 1D84                             __ptext44 1E4E  
                           __ptext36 16CA                             __ptext28 1BE8  
                           __ptext53 1DA4                             __ptext45 1B10  
                           __ptext37 1D64                             __ptext29 1AD0  
                           __ptext54 1BBE                             __ptext46 1B4A  
                           __ptext38 1F4A                             __ptext55 1F20  
                           __ptext47 1900                             __ptext39 1F50  
                           __ptext56 1F68                             __ptext48 1E1A  
                           __ptext57 1A24                             __ptext49 1B84  
                         ?_turn_left 0001                             _high_isr 0008  
          set_motor_speed@duty_cycle 001C                    ??_set_motor_speed 0018  
                      __size_of_main 004E                             _full_stp 1D1A  
                     ??_change_track 0020                             _lvd_flag 002D  
                           _side_mem 0026                             _set_leds 1804  
               __end_of_straight_fwd 1C82                       ?_motor_control 0001  
           __size_of_pirouette_right 0026                            putch@data 000F  
                        _OSCTUNEbits 000F9B                           _INTCONbits 000FF2  
                       ?_check_state 0001                       OpenUSART@spbrg 000F  
                       ??_spin_right 001E                      ??_set_directive 0020  
             set_directive@directive 001E                             intlevel2 0000  
                        ??_openPORTA 000F                          ??_openPORTB 000F  
                        ??_openPORTD 000F                          ??_openPORTE 000F  
                  _openPORTCforUSART 1F56                    SetChanADC@channel 0010  
                    ??_set_osc_32MHz 000F                          _reset_codes 1AD0  
                         _OSCCONbits 000FD3                   ?_openPORTCforUSART 0001  
                           printf@ap 0012                   __end_of_spin_right 1CA8  
                ??_openPORTCforUSART 000F                          ??_spin_left 001E  
                       ??_turn_right 001E                          ??_start_tmr 0013  
               __size_of_StatusReset 0006                          ??_turn_left 001E  
                    _openPORTCforPWM 1EFA            __end_of_openPORTCforUSART 1F5C  
                 __end_of_turn_right 1C36                           _STKFULtask 1DC4  
                    ??_motor_control 0020  
