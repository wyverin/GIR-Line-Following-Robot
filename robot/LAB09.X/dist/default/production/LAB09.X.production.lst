

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Apr  4 19:49:35 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	text56,global,reloc=2,class=CODE,delta=1
    66                           	psect	text57,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	opt stack 0
    75  001000  00                 	db	0
    76  001001                     set_motor_speed@motor_speeds:
    77                           	opt stack 0
    78  001001  FCE0               	dw	64736
    79  001003  FD2B               	dw	64811
    80  001005  FD76               	dw	64886
    81  001007  0000               	dw	0
    82  001009  028A               	dw	650
    83  00100B  02D5               	dw	725
    84  00100D  0320               	dw	800
    85  00100F                     __end_ofset_motor_speed@motor_speeds:
    86                           	opt stack 0
    87  0000                     _ADCON0	set	4034
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADRESL	set	4035
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _CCP1CON	set	4029
    95  0000                     _CCP2CON	set	4026
    96  0000                     _CCPR1L	set	4030
    97  0000                     _CCPR2L	set	4027
    98  0000                     _HLVDCONbits	set	4050
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR2bits	set	4002
   101  0000                     _OSCCONbits	set	4051
   102  0000                     _OSCTUNEbits	set	3995
   103  0000                     _PIE1bits	set	3997
   104  0000                     _PIE2bits	set	4000
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _PORTCbits	set	3970
   108  0000                     _PORTD	set	3971
   109  0000                     _PORTDbits	set	3971
   110  0000                     _PORTEbits	set	3972
   111  0000                     _PR2	set	4043
   112  0000                     _RCONbits	set	4048
   113  0000                     _RCSTA	set	4011
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _SPBRG	set	4015
   116  0000                     _SPBRGH	set	4016
   117  0000                     _STKPTRbits	set	4092
   118  0000                     _T0CON	set	4053
   119  0000                     _T0CONbits	set	4053
   120  0000                     _T2CON	set	4042
   121  0000                     _T2CONbits	set	4042
   122  0000                     _TMR0H	set	4055
   123  0000                     _TMR0L	set	4054
   124  0000                     _TMR2	set	4044
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISCbits	set	3988
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISE	set	3990
   132  0000                     _TXREG	set	4013
   133  0000                     _TXSTA	set	4012
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _TMR0IF	set	32658
   136  0000                     _TXIF	set	31988
   137  00100F                     __stringdata:
   138                           	opt stack 0
   139  00100F                     STR_1:
   140  00100F  0A                 	db	10
   141  001010  0D                 	db	13
   142  001011  4B                 	db	75	;'K'
   143  001012  77                 	db	119	;'w'
   144  001013  61                 	db	97	;'a'
   145  001014  6E                 	db	110	;'n'
   146  001015  74                 	db	116	;'t'
   147  001016  6C                 	db	108	;'l'
   148  001017  65                 	db	101	;'e'
   149  001018  6E                 	db	110	;'n'
   150  001019  20                 	db	32
   151  00101A  41                 	db	65	;'A'
   152  00101B  50                 	db	80	;'P'
   153  00101C  53                 	db	83	;'S'
   154  00101D  43                 	db	67	;'C'
   155  00101E  31                 	db	49	;'1'
   156  00101F  32                 	db	50	;'2'
   157  001020  39                 	db	57	;'9'
   158  001021  39                 	db	57	;'9'
   159  001022  20                 	db	32
   160  001023  73                 	db	115	;'s'
   161  001024  69                 	db	105	;'i'
   162  001025  6D                 	db	109	;'m'
   163  001026  70                 	db	112	;'p'
   164  001027  6C                 	db	108	;'l'
   165  001028  65                 	db	101	;'e'
   166  001029  20                 	db	32
   167  00102A  63                 	db	99	;'c'
   168  00102B  75                 	db	117	;'u'
   169  00102C  72                 	db	114	;'r'
   170  00102D  76                 	db	118	;'v'
   171  00102E  65                 	db	101	;'e'
   172  00102F  20                 	db	32
   173  001030  66                 	db	102	;'f'
   174  001031  6F                 	db	111	;'o'
   175  001032  6C                 	db	108	;'l'
   176  001033  6C                 	db	108	;'l'
   177  001034  6F                 	db	111	;'o'
   178  001035  77                 	db	119	;'w'
   179  001036  65                 	db	101	;'e'
   180  001037  72                 	db	114	;'r'
   181  001038  20                 	db	32
   182  001039  2D                 	db	45
   183  00103A  2D                 	db	45
   184  00103B  20                 	db	32
   185  00103C  77                 	db	119	;'w'
   186  00103D  69                 	db	105	;'i'
   187  00103E  74                 	db	116	;'t'
   188  00103F  68                 	db	104	;'h'
   189  001040  20                 	db	32
   190  001041  65                 	db	101	;'e'
   191  001042  72                 	db	114	;'r'
   192  001043  72                 	db	114	;'r'
   193  001044  6F                 	db	111	;'o'
   194  001045  72                 	db	114	;'r'
   195  001046  20                 	db	32
   196  001047  63                 	db	99	;'c'
   197  001048  6F                 	db	111	;'o'
   198  001049  64                 	db	100	;'d'
   199  00104A  65                 	db	101	;'e'
   200  00104B  73                 	db	115	;'s'
   201  00104C  0A                 	db	10
   202  00104D  0D                 	db	13
   203  00104E  00                 	db	0
   204  00104F                     STR_6:
   205  00104F  20                 	db	32
   206  001050  3C                 	db	60	;'<'
   207  001051  72                 	db	114	;'r'
   208  001052  65                 	db	101	;'e'
   209  001053  73                 	db	115	;'s'
   210  001054  65                 	db	101	;'e'
   211  001055  74                 	db	116	;'t'
   212  001056  3E                 	db	62	;'>'
   213  001057  20                 	db	32
   214  001058  00                 	db	0
   215  001059                     STR_5:
   216  001059  3C                 	db	60	;'<'
   217  00105A  53                 	db	83	;'S'
   218  00105B  54                 	db	84	;'T'
   219  00105C  4B                 	db	75	;'K'
   220  00105D  46                 	db	70	;'F'
   221  00105E  55                 	db	85	;'U'
   222  00105F  4C                 	db	76	;'L'
   223  001060  3E                 	db	62	;'>'
   224  001061  00                 	db	0
   225  001062                     STR_4:
   226  001062  3C                 	db	60	;'<'
   227  001063  57                 	db	87	;'W'
   228  001064  44                 	db	68	;'D'
   229  001065  54                 	db	84	;'T'
   230  001066  20                 	db	32
   231  001067  54                 	db	84	;'T'
   232  001068  4F                 	db	79	;'O'
   233  001069  3E                 	db	62	;'>'
   234  00106A  00                 	db	0
   235  00106B                     STR_7:
   236  00106B  5C                 	db	92	;'\'
   237  00106C  3C                 	db	60	;'<'
   238  00106D  4C                 	db	76	;'L'
   239  00106E  56                 	db	86	;'V'
   240  00106F  44                 	db	68	;'D'
   241  001070  3E                 	db	62	;'>'
   242  001071  00                 	db	0
   243  001072                     STR_3:
   244  001072  3C                 	db	60	;'<'
   245  001073  42                 	db	66	;'B'
   246  001074  4F                 	db	79	;'O'
   247  001075  52                 	db	82	;'R'
   248  001076  3E                 	db	62	;'>'
   249  001077  00                 	db	0
   250  001078                     STR_2:
   251  001078  3C                 	db	60	;'<'
   252  001079  50                 	db	80	;'P'
   253  00107A  4F                 	db	79	;'O'
   254  00107B  52                 	db	82	;'R'
   255  00107C  3E                 	db	62	;'>'
   256  00107D  00                 	db	0
   257  00107E                     __end_of__stringdata:
   258                           	opt stack 0
   259                           
   260                           ; #config settings
   261  00107E  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  001E2C                     __pcinit:
   265                           	opt stack 0
   266  001E2C                     start_initialization:
   267                           	opt stack 0
   268  001E2C                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Clear objects allocated to COMRAM (12 bytes)
   272  001E2C  EE00  F020         	lfsr	0,__pbssCOMRAM
   273  001E30  0E0C               	movlw	12
   274  001E32                     clear_0:
   275  001E32  6AEE               	clrf	postinc0,c
   276  001E34  06E8               	decf	wreg,f,c
   277  001E36  E1FD               	bnz	clear_0
   278  001E38                     end_of_initialization:
   279                           	opt stack 0
   280  001E38                     __end_of__initialization:
   281                           	opt stack 0
   282  001E38  0100               	movlb	0
   283  001E3A  EF09  F00D         	goto	_main	;jump to C main() function
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	bssCOMRAM
   288  000020                     __pbssCOMRAM:
   289                           	opt stack 0
   290  000020                     _memory:
   291                           	opt stack 0
   292  000020                     	ds	2
   293  000022                     _move_state:
   294                           	opt stack 0
   295  000022                     	ds	2
   296  000024                     _side_mem:
   297                           	opt stack 0
   298  000024                     	ds	2
   299  000026                     _threshold:
   300                           	opt stack 0
   301  000026                     	ds	2
   302  000028                     _tmr_state:
   303                           	opt stack 0
   304  000028                     	ds	2
   305  00002A                     _SeeLine:
   306                           	opt stack 0
   307  00002A                     	ds	1
   308  00002B                     _lvd_flag:
   309                           	opt stack 0
   310  00002B                     	ds	1
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           
   314                           	psect	cstackCOMRAM
   315  000001                     __pcstackCOMRAM:
   316                           	opt stack 0
   317  000001                     ??_high_isr:
   318  000001                     
   319                           ; 2 bytes @ 0x0
   320  000001                     	ds	14
   321  00000F                     ??_set_leds:
   322  00000F                     ??_OpenPWM2:
   323  00000F                     ??_SetChanADC:
   324  00000F                     ?_ReadADC:
   325                           	opt stack 0
   326  00000F                     ?_ReadTimer0:
   327                           	opt stack 0
   328  00000F                     putch@data:
   329                           	opt stack 0
   330  00000F                     OpenADC@config2:
   331                           	opt stack 0
   332  00000F                     OpenPWM1@period:
   333                           	opt stack 0
   334  00000F                     OpenTimer0@config:
   335                           	opt stack 0
   336  00000F                     OpenTimer2@config:
   337                           	opt stack 0
   338  00000F                     set_osc_32MHz@i:
   339                           	opt stack 0
   340  00000F                     SetDCPWM1@dutycycle:
   341                           	opt stack 0
   342  00000F                     SetDCPWM2@dutycycle:
   343                           	opt stack 0
   344  00000F                     WriteTimer0@timer0:
   345                           	opt stack 0
   346  00000F                     OpenUSART@spbrg:
   347                           	opt stack 0
   348  00000F                     gtrap@count:
   349                           	opt stack 0
   350                           
   351                           ; 4 bytes @ 0xE
   352  00000F                     	ds	1
   353  000010                     ?_printf:
   354                           	opt stack 0
   355  000010                     OpenADC@portconfig:
   356                           	opt stack 0
   357  000010                     SetChanADC@channel:
   358                           	opt stack 0
   359  000010                     OpenPWM2@period:
   360                           	opt stack 0
   361  000010                     printf@f:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0xF
   365  000010                     	ds	1
   366  000011                     ??_OpenUSART:
   367  000011                     ??_OpenADC:
   368  000011                     ??_SetDCPWM1:
   369  000011                     ??_SetDCPWM2:
   370  000011                     ?_adc:
   371                           	opt stack 0
   372  000011                     OpenPWM2@ccp2mx:
   373                           	opt stack 0
   374  000011                     ReadTimer0@timer:
   375                           	opt stack 0
   376  000011                     WriteTimer0@timer:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x10
   380  000011                     	ds	1
   381  000012                     printf@ap:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x11
   385  000012                     	ds	1
   386  000013                     adc@channel:
   387                           	opt stack 0
   388  000013                     OpenADC@config:
   389                           	opt stack 0
   390  000013                     SetDCPWM1@DCycle:
   391                           	opt stack 0
   392  000013                     SetDCPWM2@DCycle:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x12
   396  000013                     	ds	1
   397  000014                     ??_check_sensors:
   398  000014                     printf@c:
   399                           	opt stack 0
   400  000014                     OpenUSART@config:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x13
   404  000014                     	ds	1
   405  000015                     set_motor_speed@motor_speed:
   406                           	opt stack 0
   407  000015                     PORtask@count1:
   408                           	opt stack 0
   409                           
   410                           ; 4 bytes @ 0x14
   411  000015                     	ds	1
   412  000016                     set_motor_speed@speed_modifier:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x15
   416  000016                     	ds	2
   417  000018                     ??_set_motor_speed:
   418                           
   419                           ; 0 bytes @ 0x17
   420  000018                     	ds	1
   421  000019                     PORtask@count2:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x18
   425  000019                     	ds	1
   426  00001A                     set_motor_speed@the_motor:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x19
   430  00001A                     	ds	1
   431  00001B                     set_motor_speed@dir_modifier:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x1A
   435  00001B                     	ds	1
   436  00001C                     set_motor_speed@duty_cycle:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x1B
   440  00001C                     	ds	1
   441  00001D                     
   442                           ; 0 bytes @ 0x1C
   443  00001D                     	ds	1
   444  00001E                     set_directive@directive:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x1D
   448  00001E                     	ds	2
   449  000020                     postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           
   452                           ; 0 bytes @ 0x1F
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 16 in file "../main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;		None               void
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels required when called:    7
   478 ;; This function calls:
   479 ;;		_LVtrap
   480 ;;		_OpenTimer0
   481 ;;		_check_sensors
   482 ;;		_initialization
   483 ;;		_lvd_flag_set
   484 ;;		_motor_control
   485 ;;		_printf
   486 ;;		_set_leds
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text0
   493  001A12                     __ptext0:
   494                           	opt stack 0
   495  001A12                     _main:
   496                           	opt stack 24
   497                           
   498                           ;main.c: 19: initialization();
   499                           
   500                           ;incstack = 0
   501  001A12  EC82  F00B         	call	_initialization	;wreg free
   502                           
   503                           ;main.c: 24: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   504  001A16  0E10               	movlw	high STR_1
   505  001A18  6E11               	movwf	printf@f+1,c
   506  001A1A  0E0F               	movlw	low STR_1
   507  001A1C  6E10               	movwf	printf@f,c
   508  001A1E  ECA3  F00D         	call	_printf	;wreg free
   509  001A22  0004               	clrwdt		;# 
   510                           
   511                           ;main.c: 27: threshold = 240u;
   512  001A24  0E00               	movlw	0
   513  001A26  6E27               	movwf	_threshold+1,c
   514  001A28  0EF0               	movlw	240
   515  001A2A  6E26               	movwf	_threshold,c
   516                           
   517                           ;main.c: 30: OpenTimer0(0b01111111 & 0b10000111 & 0b11111110);
   518  001A2C  0E06               	movlw	6
   519  001A2E  EC86  F00E         	call	_OpenTimer0
   520                           
   521                           ;main.c: 32: side_mem=2;
   522  001A32  0E00               	movlw	0
   523  001A34  6E25               	movwf	_side_mem+1,c
   524  001A36  0E02               	movlw	2
   525  001A38  6E24               	movwf	_side_mem,c
   526  001A3A                     l2086:
   527                           
   528                           ;main.c: 35: {
   529                           ;main.c: 36: check_sensors();
   530  001A3A  EC74  F00A         	call	_check_sensors	;wreg free
   531                           
   532                           ;main.c: 37: set_leds();
   533  001A3E  ECCA  F00B         	call	_set_leds	;wreg free
   534                           
   535                           ;main.c: 42: motor_control();
   536  001A42  EC40  F008         	call	_motor_control	;wreg free
   537  001A46  0004               	clrwdt		;# 
   538                           
   539                           ;main.c: 44: if(lvd_flag_set()) LVtrap();
   540  001A48  EC7D  F00F         	call	_lvd_flag_set	;wreg free
   541  001A4C  0900               	iorlw	0
   542  001A4E  B4D8               	btfsc	status,2,c
   543  001A50  D7F4               	goto	l2086
   544  001A52  EC96  F00E         	call	_LVtrap	;wreg free
   545  001A56  D7F1               	goto	l2086
   546  001A58                     __end_of_main:
   547                           	opt stack 0
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           status	equ	0xFD8
   551                           
   552 ;; *************** function _motor_control *****************
   553 ;; Defined at:
   554 ;;		line 134 in file "../motor_control.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;		None               void
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    6
   575 ;; This function calls:
   576 ;;		_ReadTimer0
   577 ;;		_change_track
   578 ;;		_check_state
   579 ;;		_clr_tmr
   580 ;;		_full_stp
   581 ;;		_set_directive
   582 ;;		_start_tmr
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589  001080                     __ptext1:
   590                           	opt stack 0
   591  001080                     _motor_control:
   592                           	opt stack 24
   593                           
   594                           ;motor_control.c: 138: if(SeeLine.B != 0b00000 && SeeLine.B != 0b11111)if(tmr_state != 0
      +                          )clr_tmr();
   595                           
   596                           ;incstack = 0
   597  001080  502A               	movf	_SeeLine,w,c
   598  001082  0B1F               	andlw	31
   599  001084  0900               	iorlw	0
   600  001086  B4D8               	btfsc	status,2,c
   601  001088  D194               	goto	l2056
   602  00108A  502A               	movf	_SeeLine,w,c
   603  00108C  0B1F               	andlw	31
   604  00108E  0A1F               	xorlw	31
   605  001090  B4D8               	btfsc	status,2,c
   606  001092  D18F               	goto	l2056
   607  001094  5029               	movf	_tmr_state+1,w,c
   608  001096  1028               	iorwf	_tmr_state,w,c
   609  001098  B4D8               	btfsc	status,2,c
   610  00109A  D18B               	goto	l2056
   611  00109C  EC48  F00F         	call	_clr_tmr	;wreg free
   612  0010A0  D188               	goto	l2056
   613  0010A2                     l1882:
   614                           
   615                           ;motor_control.c: 143: if(move_state!=4)set_directive(4);
   616  0010A2  5022               	movf	_move_state,w,c
   617  0010A4  0A04               	xorlw	4
   618  0010A6  1023               	iorwf	_move_state+1,w,c
   619  0010A8  B4D8               	btfsc	status,2,c
   620  0010AA  D1B8               	goto	l410
   621  0010AC  0E00               	movlw	0
   622  0010AE  6E1F               	movwf	set_directive@directive+1,c
   623  0010B0  0E04               	movlw	4
   624  0010B2  6E1E               	movwf	set_directive@directive,c
   625  0010B4  ECD6  F00A         	call	_set_directive	;wreg free
   626  0010B8  D1B1               	goto	l410
   627  0010BA                     l1886:
   628                           
   629                           ;motor_control.c: 148: if(memory==0)
   630  0010BA  5021               	movf	_memory+1,w,c
   631  0010BC  1020               	iorwf	_memory,w,c
   632  0010BE  A4D8               	btfss	status,2,c
   633  0010C0  D1AD               	goto	l410
   634                           
   635                           ;motor_control.c: 149: if(move_state!=4)
   636  0010C2  5022               	movf	_move_state,w,c
   637  0010C4  0A04               	xorlw	4
   638  0010C6  1023               	iorwf	_move_state+1,w,c
   639  0010C8  B4D8               	btfsc	status,2,c
   640  0010CA  D1A8               	goto	l410
   641                           
   642                           ;motor_control.c: 150: set_directive(4);
   643  0010CC  0E00               	movlw	0
   644  0010CE  6E1F               	movwf	set_directive@directive+1,c
   645  0010D0  0E04               	movlw	4
   646  0010D2  6E1E               	movwf	set_directive@directive,c
   647  0010D4  ECD6  F00A         	call	_set_directive	;wreg free
   648  0010D8  D1A1               	goto	l410
   649  0010DA                     l1894:
   650                           
   651                           ;motor_control.c: 158: if(move_state!=4)set_directive(4);
   652  0010DA  5022               	movf	_move_state,w,c
   653  0010DC  0A04               	xorlw	4
   654  0010DE  1023               	iorwf	_move_state+1,w,c
   655  0010E0  B4D8               	btfsc	status,2,c
   656  0010E2  D19C               	goto	l410
   657  0010E4  0E00               	movlw	0
   658  0010E6  6E1F               	movwf	set_directive@directive+1,c
   659  0010E8  0E04               	movlw	4
   660  0010EA  6E1E               	movwf	set_directive@directive,c
   661  0010EC  ECD6  F00A         	call	_set_directive	;wreg free
   662  0010F0  D195               	goto	l410
   663  0010F2                     l1898:
   664                           
   665                           ;motor_control.c: 163: if(move_state!=4)set_directive(4);
   666  0010F2  5022               	movf	_move_state,w,c
   667  0010F4  0A04               	xorlw	4
   668  0010F6  1023               	iorwf	_move_state+1,w,c
   669  0010F8  B4D8               	btfsc	status,2,c
   670  0010FA  D190               	goto	l410
   671  0010FC  0E00               	movlw	0
   672  0010FE  6E1F               	movwf	set_directive@directive+1,c
   673  001100  0E04               	movlw	4
   674  001102  6E1E               	movwf	set_directive@directive,c
   675  001104  ECD6  F00A         	call	_set_directive	;wreg free
   676  001108  D189               	goto	l410
   677  00110A                     l1902:
   678                           
   679                           ;motor_control.c: 168: if(memory==0)
   680  00110A  5021               	movf	_memory+1,w,c
   681  00110C  1020               	iorwf	_memory,w,c
   682  00110E  A4D8               	btfss	status,2,c
   683  001110  D185               	goto	l410
   684                           
   685                           ;motor_control.c: 169: if(move_state!=4)
   686  001112  5022               	movf	_move_state,w,c
   687  001114  0A04               	xorlw	4
   688  001116  1023               	iorwf	_move_state+1,w,c
   689  001118  B4D8               	btfsc	status,2,c
   690  00111A  D007               	goto	l1908
   691                           
   692                           ;motor_control.c: 170: set_directive(4);
   693  00111C  0E00               	movlw	0
   694  00111E  6E1F               	movwf	set_directive@directive+1,c
   695  001120  0E04               	movlw	4
   696  001122  6E1E               	movwf	set_directive@directive,c
   697  001124  ECD6  F00A         	call	_set_directive	;wreg free
   698  001128  D179               	goto	l410
   699  00112A                     l1908:
   700                           
   701                           ;motor_control.c: 171: else if(memory==1)
   702  00112A  0420               	decf	_memory,w,c
   703  00112C  1021               	iorwf	_memory+1,w,c
   704  00112E  A4D8               	btfss	status,2,c
   705  001130  D175               	goto	l410
   706                           
   707                           ;motor_control.c: 172: {
   708                           ;motor_control.c: 173: change_track();
   709  001132  EC7C  F00C         	call	_change_track	;wreg free
   710  001136  D172               	goto	l410
   711  001138                     l1912:
   712                           
   713                           ;motor_control.c: 178: if(memory==0)
   714  001138  5021               	movf	_memory+1,w,c
   715  00113A  1020               	iorwf	_memory,w,c
   716  00113C  A4D8               	btfss	status,2,c
   717  00113E  D011               	goto	l1922
   718                           
   719                           ;motor_control.c: 179: if(move_state!=4){
   720  001140  5022               	movf	_move_state,w,c
   721  001142  0A04               	xorlw	4
   722  001144  1023               	iorwf	_move_state+1,w,c
   723  001146  B4D8               	btfsc	status,2,c
   724  001148  D007               	goto	l1918
   725                           
   726                           ;motor_control.c: 180: set_directive(4);
   727  00114A  0E00               	movlw	0
   728  00114C  6E1F               	movwf	set_directive@directive+1,c
   729  00114E  0E04               	movlw	4
   730  001150  6E1E               	movwf	set_directive@directive,c
   731  001152  ECD6  F00A         	call	_set_directive	;wreg free
   732                           
   733                           ;motor_control.c: 182: }
   734  001156  D005               	goto	l1922
   735  001158                     l1918:
   736                           
   737                           ;motor_control.c: 184: else if(memory==1)
   738  001158  0420               	decf	_memory,w,c
   739  00115A  1021               	iorwf	_memory+1,w,c
   740  00115C  B4D8               	btfsc	status,2,c
   741                           
   742                           ;motor_control.c: 185: {
   743                           ;motor_control.c: 186: change_track();
   744  00115E  EC7C  F00C         	call	_change_track	;wreg free
   745  001162                     l1922:
   746                           
   747                           ;motor_control.c: 187: }
   748                           ;motor_control.c: 188: side_mem = 1;
   749  001162  0E00               	movlw	0
   750  001164  6E25               	movwf	_side_mem+1,c
   751  001166  0E01               	movlw	1
   752  001168  D046               	goto	L3
   753  00116A                     l1924:
   754                           
   755                           ;motor_control.c: 192: if(memory==0)
   756  00116A  5021               	movf	_memory+1,w,c
   757  00116C  1020               	iorwf	_memory,w,c
   758  00116E  A4D8               	btfss	status,2,c
   759  001170  D011               	goto	l1934
   760                           
   761                           ;motor_control.c: 193: if(move_state!=4){
   762  001172  5022               	movf	_move_state,w,c
   763  001174  0A04               	xorlw	4
   764  001176  1023               	iorwf	_move_state+1,w,c
   765  001178  B4D8               	btfsc	status,2,c
   766  00117A  D007               	goto	l1930
   767                           
   768                           ;motor_control.c: 194: set_directive(4);
   769  00117C  0E00               	movlw	0
   770  00117E  6E1F               	movwf	set_directive@directive+1,c
   771  001180  0E04               	movlw	4
   772  001182  6E1E               	movwf	set_directive@directive,c
   773  001184  ECD6  F00A         	call	_set_directive	;wreg free
   774                           
   775                           ;motor_control.c: 195: }
   776  001188  D005               	goto	l1934
   777  00118A                     l1930:
   778                           
   779                           ;motor_control.c: 197: else if(memory==1)
   780  00118A  0420               	decf	_memory,w,c
   781  00118C  1021               	iorwf	_memory+1,w,c
   782  00118E  B4D8               	btfsc	status,2,c
   783                           
   784                           ;motor_control.c: 198: {
   785                           ;motor_control.c: 199: change_track();
   786  001190  EC7C  F00C         	call	_change_track	;wreg free
   787  001194                     l1934:
   788                           
   789                           ;motor_control.c: 200: }
   790                           ;motor_control.c: 201: side_mem = 3;
   791  001194  0E00               	movlw	0
   792  001196  6E25               	movwf	_side_mem+1,c
   793  001198  0E03               	movlw	3
   794  00119A  D02D               	goto	L3
   795  00119C                     l1936:
   796                           
   797                           ;motor_control.c: 204: if(memory==0)
   798  00119C  5021               	movf	_memory+1,w,c
   799  00119E  1020               	iorwf	_memory,w,c
   800  0011A0  A4D8               	btfss	status,2,c
   801  0011A2  D7DF               	goto	l1922
   802                           
   803                           ;motor_control.c: 205: if(move_state!=4){
   804  0011A4  5022               	movf	_move_state,w,c
   805  0011A6  0A04               	xorlw	4
   806  0011A8  1023               	iorwf	_move_state+1,w,c
   807  0011AA  B4D8               	btfsc	status,2,c
   808  0011AC  D007               	goto	l1942
   809                           
   810                           ;motor_control.c: 206: set_directive(4);
   811  0011AE  0E00               	movlw	0
   812  0011B0  6E1F               	movwf	set_directive@directive+1,c
   813  0011B2  0E04               	movlw	4
   814  0011B4  6E1E               	movwf	set_directive@directive,c
   815  0011B6  ECD6  F00A         	call	_set_directive	;wreg free
   816                           
   817                           ;motor_control.c: 208: }
   818  0011BA  D7D3               	goto	l1922
   819  0011BC                     l1942:
   820                           
   821                           ;motor_control.c: 210: else if(memory==1)
   822  0011BC  0420               	decf	_memory,w,c
   823  0011BE  1021               	iorwf	_memory+1,w,c
   824  0011C0  B4D8               	btfsc	status,2,c
   825                           
   826                           ;motor_control.c: 211: {
   827                           ;motor_control.c: 212: change_track();
   828  0011C2  EC7C  F00C         	call	_change_track	;wreg free
   829  0011C6  D7CD               	goto	l1922
   830  0011C8                     l1948:
   831                           
   832                           ;motor_control.c: 218: if(memory==0)
   833  0011C8  5021               	movf	_memory+1,w,c
   834  0011CA  1020               	iorwf	_memory,w,c
   835  0011CC  A4D8               	btfss	status,2,c
   836  0011CE  D7E2               	goto	l1934
   837                           
   838                           ;motor_control.c: 219: if(move_state!=4){
   839  0011D0  5022               	movf	_move_state,w,c
   840  0011D2  0A04               	xorlw	4
   841  0011D4  1023               	iorwf	_move_state+1,w,c
   842  0011D6  B4D8               	btfsc	status,2,c
   843  0011D8  D007               	goto	l1954
   844                           
   845                           ;motor_control.c: 220: set_directive(4);
   846  0011DA  0E00               	movlw	0
   847  0011DC  6E1F               	movwf	set_directive@directive+1,c
   848  0011DE  0E04               	movlw	4
   849  0011E0  6E1E               	movwf	set_directive@directive,c
   850  0011E2  ECD6  F00A         	call	_set_directive	;wreg free
   851                           
   852                           ;motor_control.c: 221: }
   853  0011E6  D7D6               	goto	l1934
   854  0011E8                     l1954:
   855                           
   856                           ;motor_control.c: 223: else if(memory==1)
   857  0011E8  0420               	decf	_memory,w,c
   858  0011EA  1021               	iorwf	_memory+1,w,c
   859  0011EC  A4D8               	btfss	status,2,c
   860  0011EE  D7D2               	goto	l1934
   861                           
   862                           ;motor_control.c: 224: {
   863                           ;motor_control.c: 225: change_track();
   864  0011F0  EC7C  F00C         	call	_change_track	;wreg free
   865  0011F4  D7CF               	goto	l1934
   866  0011F6                     L3:
   867  0011F6  6E24               	movwf	_side_mem,c
   868                           
   869                           ;motor_control.c: 228: break;
   870  0011F8  D111               	goto	l410
   871  0011FA                     l1960:
   872                           
   873                           ;motor_control.c: 230: if(memory==0)
   874  0011FA  5021               	movf	_memory+1,w,c
   875  0011FC  1020               	iorwf	_memory,w,c
   876  0011FE  A4D8               	btfss	status,2,c
   877  001200  D7C9               	goto	l1934
   878                           
   879                           ;motor_control.c: 231: if(move_state!=4){
   880  001202  5022               	movf	_move_state,w,c
   881  001204  0A04               	xorlw	4
   882  001206  1023               	iorwf	_move_state+1,w,c
   883  001208  B4D8               	btfsc	status,2,c
   884  00120A  D007               	goto	l1966
   885                           
   886                           ;motor_control.c: 232: set_directive(4);
   887  00120C  0E00               	movlw	0
   888  00120E  6E1F               	movwf	set_directive@directive+1,c
   889  001210  0E04               	movlw	4
   890  001212  6E1E               	movwf	set_directive@directive,c
   891  001214  ECD6  F00A         	call	_set_directive	;wreg free
   892                           
   893                           ;motor_control.c: 233: }
   894  001218  D7BD               	goto	l1934
   895  00121A                     l1966:
   896                           
   897                           ;motor_control.c: 234: else if(memory==1)
   898  00121A  0420               	decf	_memory,w,c
   899  00121C  1021               	iorwf	_memory+1,w,c
   900  00121E  B4D8               	btfsc	status,2,c
   901                           
   902                           ;motor_control.c: 235: {
   903                           ;motor_control.c: 236: change_track();
   904  001220  EC7C  F00C         	call	_change_track	;wreg free
   905  001224  D7B7               	goto	l1934
   906  001226                     l1972:
   907                           
   908                           ;motor_control.c: 242: if(memory==0)
   909  001226  5021               	movf	_memory+1,w,c
   910  001228  1020               	iorwf	_memory,w,c
   911  00122A  A4D8               	btfss	status,2,c
   912  00122C  D79A               	goto	l1922
   913                           
   914                           ;motor_control.c: 243: if(move_state!=4){
   915  00122E  5022               	movf	_move_state,w,c
   916  001230  0A04               	xorlw	4
   917  001232  1023               	iorwf	_move_state+1,w,c
   918  001234  B4D8               	btfsc	status,2,c
   919  001236  D007               	goto	l1978
   920                           
   921                           ;motor_control.c: 244: set_directive(4);
   922  001238  0E00               	movlw	0
   923  00123A  6E1F               	movwf	set_directive@directive+1,c
   924  00123C  0E04               	movlw	4
   925  00123E  6E1E               	movwf	set_directive@directive,c
   926  001240  ECD6  F00A         	call	_set_directive	;wreg free
   927                           
   928                           ;motor_control.c: 245: }
   929  001244  D78E               	goto	l1922
   930  001246                     l1978:
   931                           
   932                           ;motor_control.c: 246: else if(memory==1)
   933  001246  0420               	decf	_memory,w,c
   934  001248  1021               	iorwf	_memory+1,w,c
   935  00124A  B4D8               	btfsc	status,2,c
   936                           
   937                           ;motor_control.c: 247: {
   938                           ;motor_control.c: 248: change_track();
   939  00124C  EC7C  F00C         	call	_change_track	;wreg free
   940  001250  D788               	goto	l1922
   941  001252                     l1984:
   942                           
   943                           ;motor_control.c: 255: if(move_state!=5)set_directive(5);
   944  001252  5022               	movf	_move_state,w,c
   945  001254  0A05               	xorlw	5
   946  001256  1023               	iorwf	_move_state+1,w,c
   947  001258  B4D8               	btfsc	status,2,c
   948  00125A  D0E0               	goto	l410
   949  00125C  0E00               	movlw	0
   950  00125E  6E1F               	movwf	set_directive@directive+1,c
   951  001260  0E05               	movlw	5
   952  001262  6E1E               	movwf	set_directive@directive,c
   953  001264  ECD6  F00A         	call	_set_directive	;wreg free
   954  001268  D0D9               	goto	l410
   955  00126A                     l1988:
   956                           
   957                           ;motor_control.c: 259: if(move_state!=2)set_directive(2);
   958  00126A  5022               	movf	_move_state,w,c
   959  00126C  0A02               	xorlw	2
   960  00126E  1023               	iorwf	_move_state+1,w,c
   961  001270  B4D8               	btfsc	status,2,c
   962  001272  D0D4               	goto	l410
   963  001274  0E00               	movlw	0
   964  001276  6E1F               	movwf	set_directive@directive+1,c
   965  001278  0E02               	movlw	2
   966  00127A  6E1E               	movwf	set_directive@directive,c
   967  00127C  ECD6  F00A         	call	_set_directive	;wreg free
   968  001280  D0CD               	goto	l410
   969  001282                     l1992:
   970                           
   971                           ;motor_control.c: 263: if(move_state!=6)set_directive(6);
   972  001282  5022               	movf	_move_state,w,c
   973  001284  0A06               	xorlw	6
   974  001286  1023               	iorwf	_move_state+1,w,c
   975  001288  B4D8               	btfsc	status,2,c
   976  00128A  D0C8               	goto	l410
   977  00128C  0E00               	movlw	0
   978  00128E  6E1F               	movwf	set_directive@directive+1,c
   979  001290  0E06               	movlw	6
   980  001292  6E1E               	movwf	set_directive@directive,c
   981  001294  ECD6  F00A         	call	_set_directive	;wreg free
   982  001298  D0C1               	goto	l410
   983  00129A                     l1996:
   984                           
   985                           ;motor_control.c: 267: if(move_state!=1)set_directive(1);
   986  00129A  0422               	decf	_move_state,w,c
   987  00129C  1023               	iorwf	_move_state+1,w,c
   988  00129E  B4D8               	btfsc	status,2,c
   989  0012A0  D0BD               	goto	l410
   990  0012A2  0E00               	movlw	0
   991  0012A4  6E1F               	movwf	set_directive@directive+1,c
   992  0012A6  0E01               	movlw	1
   993  0012A8  6E1E               	movwf	set_directive@directive,c
   994  0012AA  ECD6  F00A         	call	_set_directive	;wreg free
   995  0012AE  D0B6               	goto	l410
   996  0012B0                     l2000:
   997                           
   998                           ;motor_control.c: 271: if(tmr_state!=1){
   999  0012B0  0428               	decf	_tmr_state,w,c
  1000  0012B2  1029               	iorwf	_tmr_state+1,w,c
  1001  0012B4  B4D8               	btfsc	status,2,c
  1002  0012B6  D00D               	goto	l2008
  1003                           
  1004                           ;motor_control.c: 272: if(move_state!=4)set_directive(4);
  1005  0012B8  5022               	movf	_move_state,w,c
  1006  0012BA  0A04               	xorlw	4
  1007  0012BC  1023               	iorwf	_move_state+1,w,c
  1008  0012BE  B4D8               	btfsc	status,2,c
  1009  0012C0  D006               	goto	l2006
  1010  0012C2  0E00               	movlw	0
  1011  0012C4  6E1F               	movwf	set_directive@directive+1,c
  1012  0012C6  0E04               	movlw	4
  1013  0012C8  6E1E               	movwf	set_directive@directive,c
  1014  0012CA  ECD6  F00A         	call	_set_directive	;wreg free
  1015  0012CE                     l2006:
  1016                           
  1017                           ;motor_control.c: 273: start_tmr();
  1018  0012CE  ECDF  F00E         	call	_start_tmr	;wreg free
  1019  0012D2                     l2008:
  1020                           
  1021                           ;motor_control.c: 274: }
  1022                           ;motor_control.c: 276: if(tmr_state==1 && side_mem!=2 && ReadTimer0() < 20000){
  1023  0012D2  0428               	decf	_tmr_state,w,c
  1024  0012D4  1029               	iorwf	_tmr_state+1,w,c
  1025  0012D6  A4D8               	btfss	status,2,c
  1026  0012D8  D026               	goto	l2024
  1027  0012DA  5024               	movf	_side_mem,w,c
  1028  0012DC  0A02               	xorlw	2
  1029  0012DE  1025               	iorwf	_side_mem+1,w,c
  1030  0012E0  B4D8               	btfsc	status,2,c
  1031  0012E2  D021               	goto	l2024
  1032  0012E4  EC28  F00F         	call	_ReadTimer0	;wreg free
  1033  0012E8  0E20               	movlw	32
  1034  0012EA  5C0F               	subwf	?_ReadTimer0,w,c
  1035  0012EC  0E4E               	movlw	78
  1036  0012EE  5810               	subwfb	?_ReadTimer0+1,w,c
  1037  0012F0  B0D8               	btfsc	status,0,c
  1038  0012F2  D019               	goto	l2024
  1039                           
  1040                           ;motor_control.c: 277: if(side_mem==1)set_directive(0);
  1041  0012F4  0424               	decf	_side_mem,w,c
  1042  0012F6  1025               	iorwf	_side_mem+1,w,c
  1043  0012F8  A4D8               	btfss	status,2,c
  1044  0012FA  D006               	goto	l2018
  1045  0012FC  0E00               	movlw	0
  1046  0012FE  6E1F               	movwf	set_directive@directive+1,c
  1047  001300  0E00               	movlw	0
  1048  001302  6E1E               	movwf	set_directive@directive,c
  1049  001304  ECD6  F00A         	call	_set_directive	;wreg free
  1050  001308                     l2018:
  1051                           
  1052                           ;motor_control.c: 278: if(side_mem==3)set_directive(7);
  1053  001308  5024               	movf	_side_mem,w,c
  1054  00130A  0A03               	xorlw	3
  1055  00130C  1025               	iorwf	_side_mem+1,w,c
  1056  00130E  A4D8               	btfss	status,2,c
  1057  001310  D006               	goto	l2022
  1058  001312  0E00               	movlw	0
  1059  001314  6E1F               	movwf	set_directive@directive+1,c
  1060  001316  0E07               	movlw	7
  1061  001318  6E1E               	movwf	set_directive@directive,c
  1062  00131A  ECD6  F00A         	call	_set_directive	;wreg free
  1063  00131E                     l2022:
  1064                           
  1065                           ;motor_control.c: 279: side_mem=2;
  1066  00131E  0E00               	movlw	0
  1067  001320  6E25               	movwf	_side_mem+1,c
  1068  001322  0E02               	movlw	2
  1069  001324  6E24               	movwf	_side_mem,c
  1070  001326                     l2024:
  1071                           
  1072                           ;motor_control.c: 280: }
  1073                           ;motor_control.c: 286: if(tmr_state==1){
  1074  001326  0428               	decf	_tmr_state,w,c
  1075  001328  1029               	iorwf	_tmr_state+1,w,c
  1076  00132A  A4D8               	btfss	status,2,c
  1077  00132C  D077               	goto	l410
  1078                           
  1079                           ;motor_control.c: 287: if(ReadTimer0()>35000){
  1080  00132E  EC28  F00F         	call	_ReadTimer0	;wreg free
  1081  001332  0EB9               	movlw	185
  1082  001334  5C0F               	subwf	?_ReadTimer0,w,c
  1083  001336  0E88               	movlw	136
  1084  001338  5810               	subwfb	?_ReadTimer0+1,w,c
  1085  00133A  A0D8               	btfss	status,0,c
  1086  00133C  D06F               	goto	l410
  1087                           
  1088                           ;motor_control.c: 288: set_directive(0);
  1089  00133E  0E00               	movlw	0
  1090  001340  6E1F               	movwf	set_directive@directive+1,c
  1091  001342  0E00               	movlw	0
  1092  001344  6E1E               	movwf	set_directive@directive,c
  1093  001346  ECD6  F00A         	call	_set_directive	;wreg free
  1094  00134A                     l398:
  1095  00134A  A4F2               	btfss	intcon,2,c	;volatile
  1096  00134C  D7FE               	goto	l398
  1097  00134E  EC28  F00F         	call	_ReadTimer0	;wreg free
  1098  001352  0EC8               	movlw	200
  1099  001354  5C0F               	subwf	?_ReadTimer0,w,c
  1100  001356  0E32               	movlw	50
  1101  001358  5810               	subwfb	?_ReadTimer0+1,w,c
  1102  00135A  A0D8               	btfss	status,0,c
  1103  00135C  D7F6               	goto	l398
  1104                           
  1105                           ;motor_control.c: 290: clr_tmr();
  1106  00135E  EC48  F00F         	call	_clr_tmr	;wreg free
  1107  001362  D05C               	goto	l410
  1108  001364                     l2034:
  1109                           
  1110                           ;motor_control.c: 332: if(tmr_state!=1){
  1111  001364  0428               	decf	_tmr_state,w,c
  1112  001366  1029               	iorwf	_tmr_state+1,w,c
  1113  001368  B4D8               	btfsc	status,2,c
  1114  00136A  D00D               	goto	l2042
  1115                           
  1116                           ;motor_control.c: 333: if(move_state!=4)set_directive(4);
  1117  00136C  5022               	movf	_move_state,w,c
  1118  00136E  0A04               	xorlw	4
  1119  001370  1023               	iorwf	_move_state+1,w,c
  1120  001372  B4D8               	btfsc	status,2,c
  1121  001374  D006               	goto	l2040
  1122  001376  0E00               	movlw	0
  1123  001378  6E1F               	movwf	set_directive@directive+1,c
  1124  00137A  0E04               	movlw	4
  1125  00137C  6E1E               	movwf	set_directive@directive,c
  1126  00137E  ECD6  F00A         	call	_set_directive	;wreg free
  1127  001382                     l2040:
  1128                           
  1129                           ;motor_control.c: 334: start_tmr();
  1130  001382  ECDF  F00E         	call	_start_tmr	;wreg free
  1131  001386                     l2042:
  1132                           
  1133                           ;motor_control.c: 335: }
  1134                           ;motor_control.c: 337: if(tmr_state==1){
  1135  001386  0428               	decf	_tmr_state,w,c
  1136  001388  1029               	iorwf	_tmr_state+1,w,c
  1137  00138A  A4D8               	btfss	status,2,c
  1138  00138C  D00F               	goto	l2052
  1139                           
  1140                           ;motor_control.c: 338: if(ReadTimer0()>15767){
  1141  00138E  EC28  F00F         	call	_ReadTimer0	;wreg free
  1142  001392  0E98               	movlw	152
  1143  001394  5C0F               	subwf	?_ReadTimer0,w,c
  1144  001396  0E3D               	movlw	61
  1145  001398  5810               	subwfb	?_ReadTimer0+1,w,c
  1146  00139A  A0D8               	btfss	status,0,c
  1147  00139C  D007               	goto	l2052
  1148                           
  1149                           ;motor_control.c: 339: full_stp();
  1150  00139E  EC51  F00E         	call	_full_stp	;wreg free
  1151                           
  1152                           ;motor_control.c: 341: while(SeeLine.b.Center == 1)check_state();
  1153  0013A2  D002               	goto	l2050
  1154  0013A4                     l2048:
  1155  0013A4  EC5A  F00F         	call	_check_state	;wreg free
  1156  0013A8                     l2050:
  1157  0013A8  B42A               	btfsc	_SeeLine,2,c
  1158  0013AA  D7FC               	goto	l2048
  1159  0013AC                     l2052:
  1160                           
  1161                           ;motor_control.c: 342: }
  1162                           ;motor_control.c: 343: }
  1163                           ;motor_control.c: 344: check_state();
  1164  0013AC  EC5A  F00F         	call	_check_state	;wreg free
  1165                           
  1166                           ;motor_control.c: 346: break;
  1167  0013B0  D035               	goto	l410
  1168  0013B2                     l2056:
  1169  0013B2  502A               	movf	_SeeLine,w,c
  1170  0013B4  0B1F               	andlw	31
  1171                           
  1172                           ; Switch size 1, requested type "space"
  1173                           ; Number of cases is 17, Range of values is 0 to 31
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte           52    27 (average)
  1177                           ;	Chosen strategy is simple_byte
  1178  0013B6  0A00               	xorlw	0	; case 0
  1179  0013B8  B4D8               	btfsc	status,2,c
  1180  0013BA  D77A               	goto	l2000
  1181  0013BC  0A01               	xorlw	1	; case 1
  1182  0013BE  B4D8               	btfsc	status,2,c
  1183  0013C0  D760               	goto	l1992
  1184  0013C2  0A03               	xorlw	3	; case 2
  1185  0013C4  B4D8               	btfsc	status,2,c
  1186  0013C6  D745               	goto	l1984
  1187  0013C8  0A06               	xorlw	6	; case 4
  1188  0013CA  B4D8               	btfsc	status,2,c
  1189  0013CC  D66A               	goto	l1882
  1190  0013CE  0A01               	xorlw	1	; case 5
  1191  0013D0  B4D8               	btfsc	status,2,c
  1192  0013D2  D69B               	goto	l1902
  1193  0013D4  0A03               	xorlw	3	; case 6
  1194  0013D6  B4D8               	btfsc	status,2,c
  1195  0013D8  D68C               	goto	l1898
  1196  0013DA  0A01               	xorlw	1	; case 7
  1197  0013DC  B4D8               	btfsc	status,2,c
  1198  0013DE  D6C5               	goto	l1924
  1199  0013E0  0A0F               	xorlw	15	; case 8
  1200  0013E2  B4D8               	btfsc	status,2,c
  1201  0013E4  D742               	goto	l1988
  1202  0013E6  0A04               	xorlw	4	; case 12
  1203  0013E8  B4D8               	btfsc	status,2,c
  1204  0013EA  D677               	goto	l1894
  1205  0013EC  0A03               	xorlw	3	; case 15
  1206  0013EE  B4D8               	btfsc	status,2,c
  1207  0013F0  D6EB               	goto	l1948
  1208  0013F2  0A1F               	xorlw	31	; case 16
  1209  0013F4  B4D8               	btfsc	status,2,c
  1210  0013F6  D751               	goto	l1996
  1211  0013F8  0A04               	xorlw	4	; case 20
  1212  0013FA  B4D8               	btfsc	status,2,c
  1213  0013FC  D65E               	goto	l1886
  1214  0013FE  0A03               	xorlw	3	; case 23
  1215  001400  B4D8               	btfsc	status,2,c
  1216  001402  D6FB               	goto	l1960
  1217  001404  0A0B               	xorlw	11	; case 28
  1218  001406  B4D8               	btfsc	status,2,c
  1219  001408  D697               	goto	l1912
  1220  00140A  0A01               	xorlw	1	; case 29
  1221  00140C  B4D8               	btfsc	status,2,c
  1222  00140E  D70B               	goto	l1972
  1223  001410  0A03               	xorlw	3	; case 30
  1224  001412  B4D8               	btfsc	status,2,c
  1225  001414  D6C3               	goto	l1936
  1226  001416  0A01               	xorlw	1	; case 31
  1227  001418  B4D8               	btfsc	status,2,c
  1228  00141A  D7A4               	goto	l2034
  1229  00141C                     l410:
  1230  00141C  0012               	return	
  1231  00141E                     __end_of_motor_control:
  1232                           	opt stack 0
  1233                           intcon	equ	0xFF2
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _start_tmr *****************
  1239 ;; Defined at:
  1240 ;;		line 44 in file "../motor_control.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;		None               void
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    2
  1261 ;; This function calls:
  1262 ;;		_WriteTimer0
  1263 ;; This function is called by:
  1264 ;;		_motor_control
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text2
  1269  001DBE                     __ptext2:
  1270                           	opt stack 0
  1271  001DBE                     _start_tmr:
  1272                           	opt stack 27
  1273                           
  1274                           ;motor_control.c: 45: TMR0IF = 0;
  1275                           
  1276                           ;incstack = 0
  1277  001DBE  94F2               	bcf	intcon,2,c	;volatile
  1278                           
  1279                           ;motor_control.c: 46: WriteTimer0(0u);
  1280  001DC0  0E00               	movlw	0
  1281  001DC2  6E10               	movwf	WriteTimer0@timer0+1,c
  1282  001DC4  0E00               	movlw	0
  1283  001DC6  6E0F               	movwf	WriteTimer0@timer0,c
  1284  001DC8  EC1F  F00F         	call	_WriteTimer0	;wreg free
  1285                           
  1286                           ;motor_control.c: 47: tmr_state = 1;
  1287  001DCC  0E00               	movlw	0
  1288  001DCE  6E29               	movwf	_tmr_state+1,c
  1289  001DD0  0E01               	movlw	1
  1290  001DD2  6E28               	movwf	_tmr_state,c
  1291  001DD4  0012               	return	
  1292  001DD6                     __end_of_start_tmr:
  1293                           	opt stack 0
  1294                           intcon	equ	0xFF2
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _WriteTimer0 *****************
  1300 ;; Defined at:
  1301 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  timer0          2   14[COMRAM] unsigned int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  timer           2   16[COMRAM] struct Timers
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		None
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;Total ram usage:        4 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_start_tmr
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text3
  1330  001E3E                     __ptext3:
  1331                           	opt stack 0
  1332  001E3E                     _WriteTimer0:
  1333                           	opt stack 27
  1334                           
  1335                           ;incstack = 0
  1336  001E3E  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1337  001E42  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1338  001E46  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1339  001E4A  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1340  001E4E  0012               	return	
  1341  001E50                     __end_of_WriteTimer0:
  1342                           	opt stack 0
  1343                           intcon	equ	0xFF2
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           status	equ	0xFD8
  1347                           
  1348 ;; *************** function _clr_tmr *****************
  1349 ;; Defined at:
  1350 ;;		line 51 in file "../motor_control.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		wreg, status,2
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_motor_control
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text4
  1379  001E90                     __ptext4:
  1380                           	opt stack 0
  1381  001E90                     _clr_tmr:
  1382                           	opt stack 28
  1383                           
  1384                           ;motor_control.c: 52: TMR0IF = 0;
  1385                           
  1386                           ;incstack = 0
  1387  001E90  94F2               	bcf	intcon,2,c	;volatile
  1388                           
  1389                           ;motor_control.c: 53: tmr_state = 0;
  1390  001E92  0E00               	movlw	0
  1391  001E94  6E29               	movwf	_tmr_state+1,c
  1392  001E96  0E00               	movlw	0
  1393  001E98  6E28               	movwf	_tmr_state,c
  1394  001E9A  0012               	return	
  1395  001E9C                     __end_of_clr_tmr:
  1396                           	opt stack 0
  1397                           intcon	equ	0xFF2
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _check_state *****************
  1403 ;; Defined at:
  1404 ;;		line 95 in file "../motor_control.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  2  305[COMRAM] int 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    4
  1425 ;; This function calls:
  1426 ;;		_check_sensors
  1427 ;;		_set_leds
  1428 ;; This function is called by:
  1429 ;;		_motor_control
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text5
  1434  001EB4                     __ptext5:
  1435                           	opt stack 0
  1436  001EB4                     _check_state:
  1437                           	opt stack 25
  1438                           
  1439                           ;motor_control.c: 96: check_sensors();
  1440                           
  1441                           ;incstack = 0
  1442  001EB4  EC74  F00A         	call	_check_sensors	;wreg free
  1443                           
  1444                           ;motor_control.c: 97: set_leds();
  1445  001EB8  ECCA  F00B         	call	_set_leds	;wreg free
  1446  001EBC  0012               	return	
  1447  001EBE                     __end_of_check_state:
  1448                           	opt stack 0
  1449                           intcon	equ	0xFF2
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _set_leds *****************
  1455 ;; Defined at:
  1456 ;;		line 254 in file "../sumovore.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;		None               void
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;;		_check_state
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text6
  1486  001794                     __ptext6:
  1487                           	opt stack 0
  1488  001794                     _set_leds:
  1489                           	opt stack 29
  1490                           
  1491                           ;sumovore.c: 256: PORTDbits.RD0=!SeeLine.b.Left;
  1492                           
  1493                           ;incstack = 0
  1494  001794  B82A               	btfsc	_SeeLine,4,c
  1495  001796  D002               	goto	u210
  1496  001798  0E01               	movlw	1
  1497  00179A  D001               	goto	u216
  1498  00179C                     u210:
  1499  00179C  0E00               	movlw	0
  1500  00179E                     u216:
  1501  00179E  6E0F               	movwf	??_set_leds& (0+255),c
  1502  0017A0  5083               	movf	3971,w,c	;volatile
  1503  0017A2  180F               	xorwf	??_set_leds,w,c
  1504  0017A4  0BFE               	andlw	-2
  1505  0017A6  180F               	xorwf	??_set_leds,w,c
  1506  0017A8  6E83               	movwf	3971,c	;volatile
  1507                           
  1508                           ;sumovore.c: 257: PORTDbits.RD1=!SeeLine.b.CntLeft;
  1509  0017AA  B62A               	btfsc	_SeeLine,3,c
  1510  0017AC  D002               	goto	u220
  1511  0017AE  0E01               	movlw	1
  1512  0017B0  D001               	goto	u226
  1513  0017B2                     u220:
  1514  0017B2  0E00               	movlw	0
  1515  0017B4                     u226:
  1516  0017B4  6E0F               	movwf	??_set_leds& (0+255),c
  1517  0017B6  460F               	rlncf	??_set_leds,f,c
  1518  0017B8  5083               	movf	3971,w,c	;volatile
  1519  0017BA  180F               	xorwf	??_set_leds,w,c
  1520  0017BC  0BFD               	andlw	-3
  1521  0017BE  180F               	xorwf	??_set_leds,w,c
  1522  0017C0  6E83               	movwf	3971,c	;volatile
  1523                           
  1524                           ;sumovore.c: 258: PORTDbits.RD2=!SeeLine.b.Center;
  1525  0017C2  B42A               	btfsc	_SeeLine,2,c
  1526  0017C4  D002               	goto	u230
  1527  0017C6  0E01               	movlw	1
  1528  0017C8  D001               	goto	u236
  1529  0017CA                     u230:
  1530  0017CA  0E00               	movlw	0
  1531  0017CC                     u236:
  1532  0017CC  6E0F               	movwf	??_set_leds& (0+255),c
  1533  0017CE  460F               	rlncf	??_set_leds,f,c
  1534  0017D0  460F               	rlncf	??_set_leds,f,c
  1535  0017D2  5083               	movf	3971,w,c	;volatile
  1536  0017D4  180F               	xorwf	??_set_leds,w,c
  1537  0017D6  0BFB               	andlw	-5
  1538  0017D8  180F               	xorwf	??_set_leds,w,c
  1539  0017DA  6E83               	movwf	3971,c	;volatile
  1540                           
  1541                           ;sumovore.c: 259: PORTDbits.RD3=!SeeLine.b.CntRight;
  1542  0017DC  B22A               	btfsc	_SeeLine,1,c
  1543  0017DE  D002               	goto	u240
  1544  0017E0  0E01               	movlw	1
  1545  0017E2  D001               	goto	u246
  1546  0017E4                     u240:
  1547  0017E4  0E00               	movlw	0
  1548  0017E6                     u246:
  1549  0017E6  6E0F               	movwf	??_set_leds& (0+255),c
  1550  0017E8  460F               	rlncf	??_set_leds,f,c
  1551  0017EA  460F               	rlncf	??_set_leds,f,c
  1552  0017EC  460F               	rlncf	??_set_leds,f,c
  1553  0017EE  5083               	movf	3971,w,c	;volatile
  1554  0017F0  180F               	xorwf	??_set_leds,w,c
  1555  0017F2  0BF7               	andlw	-9
  1556  0017F4  180F               	xorwf	??_set_leds,w,c
  1557  0017F6  6E83               	movwf	3971,c	;volatile
  1558                           
  1559                           ;sumovore.c: 260: PORTDbits.RD4=!SeeLine.b.Right;
  1560  0017F8  B02A               	btfsc	_SeeLine,0,c
  1561  0017FA  D002               	goto	u250
  1562  0017FC  0E01               	movlw	1
  1563  0017FE  D001               	goto	u256
  1564  001800                     u250:
  1565  001800  0E00               	movlw	0
  1566  001802                     u256:
  1567  001802  6E0F               	movwf	??_set_leds& (0+255),c
  1568  001804  3A0F               	swapf	??_set_leds,f,c
  1569  001806  5083               	movf	3971,w,c	;volatile
  1570  001808  180F               	xorwf	??_set_leds,w,c
  1571  00180A  0BEF               	andlw	-17
  1572  00180C  180F               	xorwf	??_set_leds,w,c
  1573  00180E  6E83               	movwf	3971,c	;volatile
  1574  001810  0012               	return	
  1575  001812                     __end_of_set_leds:
  1576                           	opt stack 0
  1577                           intcon	equ	0xFF2
  1578                           postinc0	equ	0xFEE
  1579                           wreg	equ	0xFE8
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function _check_sensors *****************
  1583 ;; Defined at:
  1584 ;;		line 240 in file "../sumovore.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;		None               void
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;Total ram usage:        1 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    3
  1605 ;; This function calls:
  1606 ;;		_adc
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;;		_check_state
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text7
  1614  0014E8                     __ptext7:
  1615                           	opt stack 0
  1616  0014E8                     _check_sensors:
  1617                           	opt stack 25
  1618                           
  1619                           ;sumovore.c: 242: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  1620                           
  1621                           ;incstack = 0
  1622  0014E8  0E87               	movlw	135
  1623  0014EA  EC64  F00E         	call	_adc
  1624  0014EE  5011               	movf	?_adc,w,c
  1625  0014F0  5C26               	subwf	_threshold,w,c
  1626  0014F2  5012               	movf	?_adc+1,w,c
  1627  0014F4  5827               	subwfb	_threshold+1,w,c
  1628  0014F6  B0D8               	btfsc	status,0,c
  1629  0014F8  D002               	goto	u160
  1630  0014FA  0E01               	movlw	1
  1631  0014FC  D001               	goto	u166
  1632  0014FE                     u160:
  1633  0014FE  0E00               	movlw	0
  1634  001500                     u166:
  1635  001500  6E14               	movwf	??_check_sensors& (0+255),c
  1636  001502  3A14               	swapf	??_check_sensors,f,c
  1637  001504  502A               	movf	_SeeLine,w,c
  1638  001506  1814               	xorwf	??_check_sensors,w,c
  1639  001508  0BEF               	andlw	-17
  1640  00150A  1814               	xorwf	??_check_sensors,w,c
  1641  00150C  6E2A               	movwf	_SeeLine,c
  1642                           
  1643                           ;sumovore.c: 243: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  1644  00150E  0E8F               	movlw	143
  1645  001510  EC64  F00E         	call	_adc
  1646  001514  5011               	movf	?_adc,w,c
  1647  001516  5C26               	subwf	_threshold,w,c
  1648  001518  5012               	movf	?_adc+1,w,c
  1649  00151A  5827               	subwfb	_threshold+1,w,c
  1650  00151C  B0D8               	btfsc	status,0,c
  1651  00151E  D002               	goto	u170
  1652  001520  0E01               	movlw	1
  1653  001522  D001               	goto	u176
  1654  001524                     u170:
  1655  001524  0E00               	movlw	0
  1656  001526                     u176:
  1657  001526  6E14               	movwf	??_check_sensors& (0+255),c
  1658  001528  4614               	rlncf	??_check_sensors,f,c
  1659  00152A  4614               	rlncf	??_check_sensors,f,c
  1660  00152C  4614               	rlncf	??_check_sensors,f,c
  1661  00152E  502A               	movf	_SeeLine,w,c
  1662  001530  1814               	xorwf	??_check_sensors,w,c
  1663  001532  0BF7               	andlw	-9
  1664  001534  1814               	xorwf	??_check_sensors,w,c
  1665  001536  6E2A               	movwf	_SeeLine,c
  1666                           
  1667                           ;sumovore.c: 244: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  1668  001538  0E97               	movlw	151
  1669  00153A  EC64  F00E         	call	_adc
  1670  00153E  5011               	movf	?_adc,w,c
  1671  001540  5C26               	subwf	_threshold,w,c
  1672  001542  5012               	movf	?_adc+1,w,c
  1673  001544  5827               	subwfb	_threshold+1,w,c
  1674  001546  B0D8               	btfsc	status,0,c
  1675  001548  D002               	goto	u180
  1676  00154A  0E01               	movlw	1
  1677  00154C  D001               	goto	u186
  1678  00154E                     u180:
  1679  00154E  0E00               	movlw	0
  1680  001550                     u186:
  1681  001550  6E14               	movwf	??_check_sensors& (0+255),c
  1682  001552  4614               	rlncf	??_check_sensors,f,c
  1683  001554  4614               	rlncf	??_check_sensors,f,c
  1684  001556  502A               	movf	_SeeLine,w,c
  1685  001558  1814               	xorwf	??_check_sensors,w,c
  1686  00155A  0BFB               	andlw	-5
  1687  00155C  1814               	xorwf	??_check_sensors,w,c
  1688  00155E  6E2A               	movwf	_SeeLine,c
  1689                           
  1690                           ;sumovore.c: 245: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  1691  001560  0E9F               	movlw	159
  1692  001562  EC64  F00E         	call	_adc
  1693  001566  5011               	movf	?_adc,w,c
  1694  001568  5C26               	subwf	_threshold,w,c
  1695  00156A  5012               	movf	?_adc+1,w,c
  1696  00156C  5827               	subwfb	_threshold+1,w,c
  1697  00156E  B0D8               	btfsc	status,0,c
  1698  001570  D002               	goto	u190
  1699  001572  0E01               	movlw	1
  1700  001574  D001               	goto	u196
  1701  001576                     u190:
  1702  001576  0E00               	movlw	0
  1703  001578                     u196:
  1704  001578  6E14               	movwf	??_check_sensors& (0+255),c
  1705  00157A  4614               	rlncf	??_check_sensors,f,c
  1706  00157C  502A               	movf	_SeeLine,w,c
  1707  00157E  1814               	xorwf	??_check_sensors,w,c
  1708  001580  0BFD               	andlw	-3
  1709  001582  1814               	xorwf	??_check_sensors,w,c
  1710  001584  6E2A               	movwf	_SeeLine,c
  1711                           
  1712                           ;sumovore.c: 246: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  1713  001586  0EA7               	movlw	167
  1714  001588  EC64  F00E         	call	_adc
  1715  00158C  5011               	movf	?_adc,w,c
  1716  00158E  5C26               	subwf	_threshold,w,c
  1717  001590  5012               	movf	?_adc+1,w,c
  1718  001592  5827               	subwfb	_threshold+1,w,c
  1719  001594  B0D8               	btfsc	status,0,c
  1720  001596  D002               	goto	u200
  1721  001598  0E01               	movlw	1
  1722  00159A  D001               	goto	u206
  1723  00159C                     u200:
  1724  00159C  0E00               	movlw	0
  1725  00159E                     u206:
  1726  00159E  6E14               	movwf	??_check_sensors& (0+255),c
  1727  0015A0  502A               	movf	_SeeLine,w,c
  1728  0015A2  1814               	xorwf	??_check_sensors,w,c
  1729  0015A4  0BFE               	andlw	-2
  1730  0015A6  1814               	xorwf	??_check_sensors,w,c
  1731  0015A8  6E2A               	movwf	_SeeLine,c
  1732  0015AA  0012               	return	
  1733  0015AC                     __end_of_check_sensors:
  1734                           	opt stack 0
  1735                           intcon	equ	0xFF2
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _adc *****************
  1741 ;; Defined at:
  1742 ;;		line 228 in file "../sumovore.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  channel         1    wreg     unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  channel         1   18[COMRAM] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2   16[COMRAM] unsigned int 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        3 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    2
  1763 ;; This function calls:
  1764 ;;		_BusyADC
  1765 ;;		_ConvertADC
  1766 ;;		_ReadADC
  1767 ;;		_SetChanADC
  1768 ;; This function is called by:
  1769 ;;		_check_sensors
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text8
  1774  001CC8                     __ptext8:
  1775                           	opt stack 0
  1776  001CC8                     _adc:
  1777                           	opt stack 25
  1778                           
  1779                           ;incstack = 0
  1780                           ;adc@channel stored from wreg
  1781  001CC8  6E13               	movwf	adc@channel,c
  1782                           
  1783                           ;sumovore.c: 230: SetChanADC( channel );
  1784  001CCA  5013               	movf	adc@channel,w,c
  1785  001CCC  ECF7  F00E         	call	_SetChanADC
  1786                           
  1787                           ;sumovore.c: 231: ConvertADC();
  1788  001CD0  EC7B  F00F         	call	_ConvertADC	;wreg free
  1789  001CD4                     l1384:
  1790  001CD4  EC4E  F00F         	call	_BusyADC	;wreg free
  1791  001CD8  0900               	iorlw	0
  1792  001CDA  A4D8               	btfss	status,2,c
  1793  001CDC  D7FB               	goto	l1384
  1794                           
  1795                           ;sumovore.c: 234: return ReadADC();
  1796  001CDE  EC5F  F00F         	call	_ReadADC	;wreg free
  1797  001CE2  C00F  F011         	movff	?_ReadADC,?_adc
  1798  001CE6  C010  F012         	movff	?_ReadADC+1,?_adc+1
  1799  001CEA  0012               	return	
  1800  001CEC                     __end_of_adc:
  1801                           	opt stack 0
  1802                           intcon	equ	0xFF2
  1803                           postinc0	equ	0xFEE
  1804                           wreg	equ	0xFE8
  1805                           status	equ	0xFD8
  1806                           
  1807 ;; *************** function _SetChanADC *****************
  1808 ;; Defined at:
  1809 ;;		line 30 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcsetch.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  channel         1    wreg     unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  channel         1   15[COMRAM] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;		None               void
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;Total ram usage:        2 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    1
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_adc
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text9
  1838  001DEE                     __ptext9:
  1839                           	opt stack 0
  1840  001DEE                     _SetChanADC:
  1841                           	opt stack 25
  1842                           
  1843                           ;incstack = 0
  1844                           ;SetChanADC@channel stored from wreg
  1845  001DEE  6E10               	movwf	SetChanADC@channel,c
  1846  001DF0  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  1847  001DF4  0EC3               	movlw	195
  1848  001DF6  160F               	andwf	??_SetChanADC,f,c
  1849  001DF8  90D8               	bcf	status,0,c
  1850  001DFA  3010               	rrcf	SetChanADC@channel,w,c
  1851  001DFC  0B3C               	andlw	60
  1852  001DFE  100F               	iorwf	??_SetChanADC,w,c
  1853  001E00  6EC2               	movwf	4034,c	;volatile
  1854  001E02  0012               	return	
  1855  001E04                     __end_of_SetChanADC:
  1856                           	opt stack 0
  1857                           intcon	equ	0xFF2
  1858                           postinc0	equ	0xFEE
  1859                           wreg	equ	0xFE8
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _ReadADC *****************
  1863 ;; Defined at:
  1864 ;;		line 24 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcread.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2   14[COMRAM] int 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;Total ram usage:        2 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_adc
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text10
  1893  001EBE                     __ptext10:
  1894                           	opt stack 0
  1895  001EBE                     _ReadADC:
  1896                           	opt stack 25
  1897                           
  1898                           ;incstack = 0
  1899  001EBE  50C4               	movf	4036,w,c	;volatile
  1900  001EC0  6E10               	movwf	?_ReadADC+1,c
  1901  001EC2  50C3               	movf	4035,w,c	;volatile
  1902  001EC4  6E0F               	movwf	?_ReadADC,c
  1903  001EC6  0012               	return	
  1904  001EC8                     __end_of_ReadADC:
  1905                           	opt stack 0
  1906                           intcon	equ	0xFF2
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _ConvertADC *****************
  1912 ;; Defined at:
  1913 ;;		line 22 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;		None               void
  1920 ;; Registers used:
  1921 ;;		None
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    1
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_adc
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text11
  1942  001EF6                     __ptext11:
  1943                           	opt stack 0
  1944  001EF6                     _ConvertADC:
  1945                           	opt stack 25
  1946                           
  1947                           ;incstack = 0
  1948  001EF6  82C2               	bsf	4034,1,c	;volatile
  1949  001EF8  0012               	return	
  1950  001EFA                     __end_of_ConvertADC:
  1951                           	opt stack 0
  1952                           intcon	equ	0xFF2
  1953                           postinc0	equ	0xFEE
  1954                           wreg	equ	0xFE8
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _BusyADC *****************
  1958 ;; Defined at:
  1959 ;;		line 26 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_adc
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text12
  1988  001E9C                     __ptext12:
  1989                           	opt stack 0
  1990  001E9C                     _BusyADC:
  1991                           	opt stack 25
  1992                           
  1993                           ;incstack = 0
  1994  001E9C  A2C2               	btfss	4034,1,c	;volatile
  1995  001E9E  D002               	goto	u100
  1996  001EA0  0E01               	movlw	1
  1997  001EA2  D001               	goto	l539
  1998  001EA4                     u100:
  1999  001EA4  0E00               	movlw	0
  2000  001EA6                     l539:
  2001  001EA6  0012               	return	
  2002  001EA8                     __end_of_BusyADC:
  2003                           	opt stack 0
  2004                           intcon	equ	0xFF2
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           status	equ	0xFD8
  2008                           
  2009 ;; *************** function _change_track *****************
  2010 ;; Defined at:
  2011 ;;		line 110 in file "../motor_control.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;		None               void
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    5
  2032 ;; This function calls:
  2033 ;;		_clr_mem
  2034 ;;		_set_directive
  2035 ;; This function is called by:
  2036 ;;		_motor_control
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text13
  2041  0018F8                     __ptext13:
  2042                           	opt stack 0
  2043  0018F8                     _change_track:
  2044                           	opt stack 24
  2045                           
  2046                           ;motor_control.c: 111: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2047                           
  2048                           ;incstack = 0
  2049  0018F8  B82A               	btfsc	_SeeLine,4,c
  2050  0018FA  B62A               	btfsc	_SeeLine,3,c
  2051  0018FC  D014               	goto	l1802
  2052  0018FE  A42A               	btfss	_SeeLine,2,c
  2053  001900  D012               	goto	l1802
  2054                           
  2055                           ;motor_control.c: 113: set_directive(1);
  2056  001902  0E00               	movlw	0
  2057  001904  6E1F               	movwf	set_directive@directive+1,c
  2058  001906  0E01               	movlw	1
  2059  001908  6E1E               	movwf	set_directive@directive,c
  2060  00190A  ECD6  F00A         	call	_set_directive	;wreg free
  2061  00190E                     l316:
  2062  00190E  B42A               	btfsc	_SeeLine,2,c
  2063  001910  D7FE               	goto	l316
  2064                           
  2065                           ;motor_control.c: 115: set_directive(1);
  2066  001912  0E00               	movlw	0
  2067  001914  6E1F               	movwf	set_directive@directive+1,c
  2068  001916  0E01               	movlw	1
  2069  001918  6E1E               	movwf	set_directive@directive,c
  2070  00191A  ECD6  F00A         	call	_set_directive	;wreg free
  2071  00191E                     l319:
  2072  00191E  A42A               	btfss	_SeeLine,2,c
  2073  001920  D7FE               	goto	l319
  2074                           
  2075                           ;motor_control.c: 117: clr_mem();
  2076  001922  EC64  F00F         	call	_clr_mem	;wreg free
  2077  001926                     l1802:
  2078                           
  2079                           ;motor_control.c: 118: }
  2080                           ;motor_control.c: 119: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2081  001926  B82A               	btfsc	_SeeLine,4,c
  2082  001928  B62A               	btfsc	_SeeLine,3,c
  2083  00192A  D014               	goto	l329
  2084  00192C  A42A               	btfss	_SeeLine,2,c
  2085  00192E  D012               	goto	l329
  2086                           
  2087                           ;motor_control.c: 121: set_directive(6);
  2088  001930  0E00               	movlw	0
  2089  001932  6E1F               	movwf	set_directive@directive+1,c
  2090  001934  0E06               	movlw	6
  2091  001936  6E1E               	movwf	set_directive@directive,c
  2092  001938  ECD6  F00A         	call	_set_directive	;wreg free
  2093  00193C                     l323:
  2094  00193C  B42A               	btfsc	_SeeLine,2,c
  2095  00193E  D7FE               	goto	l323
  2096                           
  2097                           ;motor_control.c: 123: set_directive(6);
  2098  001940  0E00               	movlw	0
  2099  001942  6E1F               	movwf	set_directive@directive+1,c
  2100  001944  0E06               	movlw	6
  2101  001946  6E1E               	movwf	set_directive@directive,c
  2102  001948  ECD6  F00A         	call	_set_directive	;wreg free
  2103  00194C                     l326:
  2104  00194C  A42A               	btfss	_SeeLine,2,c
  2105  00194E  D7FE               	goto	l326
  2106                           
  2107                           ;motor_control.c: 125: clr_mem();
  2108  001950  EC64  F00F         	call	_clr_mem	;wreg free
  2109  001954                     l329:
  2110  001954  0012               	return	
  2111  001956                     __end_of_change_track:
  2112                           	opt stack 0
  2113                           intcon	equ	0xFF2
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _set_directive *****************
  2119 ;; Defined at:
  2120 ;;		line 57 in file "../motor_control.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  directive       2   29[COMRAM] int 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;		None               void
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;Total ram usage:        2 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    4
  2141 ;; This function calls:
  2142 ;;		_full_stp
  2143 ;;		_pirouette_left
  2144 ;;		_pirouette_right
  2145 ;;		_spin_left
  2146 ;;		_spin_right
  2147 ;;		_straight_fwd
  2148 ;;		_turn_left
  2149 ;;		_turn_right
  2150 ;; This function is called by:
  2151 ;;		_change_track
  2152 ;;		_motor_control
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text14
  2157  0015AC                     __ptext14:
  2158                           	opt stack 0
  2159  0015AC                     _set_directive:
  2160                           	opt stack 25
  2161                           
  2162                           ;motor_control.c: 60: if(directive==0){
  2163                           
  2164                           ;incstack = 0
  2165  0015AC  501F               	movf	set_directive@directive+1,w,c
  2166  0015AE  101E               	iorwf	set_directive@directive,w,c
  2167  0015B0  A4D8               	btfss	status,2,c
  2168  0015B2  D006               	goto	l1600
  2169                           
  2170                           ;motor_control.c: 61: pirouette_left();
  2171  0015B4  EC3E  F00E         	call	_pirouette_left	;wreg free
  2172                           
  2173                           ;motor_control.c: 62: move_state=0;
  2174  0015B8  0E00               	movlw	0
  2175  0015BA  6E23               	movwf	_move_state+1,c
  2176  0015BC  0E00               	movlw	0
  2177  0015BE  6E22               	movwf	_move_state,c
  2178  0015C0                     l1600:
  2179                           
  2180                           ;motor_control.c: 63: }
  2181                           ;motor_control.c: 64: if(directive==1){
  2182  0015C0  041E               	decf	set_directive@directive,w,c
  2183  0015C2  101F               	iorwf	set_directive@directive+1,w,c
  2184  0015C4  A4D8               	btfss	status,2,c
  2185  0015C6  D006               	goto	l1606
  2186                           
  2187                           ;motor_control.c: 65: spin_left();
  2188  0015C8  EC18  F00E         	call	_spin_left	;wreg free
  2189                           
  2190                           ;motor_control.c: 66: move_state=1;
  2191  0015CC  0E00               	movlw	0
  2192  0015CE  6E23               	movwf	_move_state+1,c
  2193  0015D0  0E01               	movlw	1
  2194  0015D2  6E22               	movwf	_move_state,c
  2195  0015D4                     l1606:
  2196                           
  2197                           ;motor_control.c: 67: }
  2198                           ;motor_control.c: 68: if(directive==2){
  2199  0015D4  501E               	movf	set_directive@directive,w,c
  2200  0015D6  0A02               	xorlw	2
  2201  0015D8  101F               	iorwf	set_directive@directive+1,w,c
  2202  0015DA  A4D8               	btfss	status,2,c
  2203  0015DC  D006               	goto	l1612
  2204                           
  2205                           ;motor_control.c: 69: turn_left();
  2206  0015DE  ECDF  F00D         	call	_turn_left	;wreg free
  2207                           
  2208                           ;motor_control.c: 70: move_state=2;
  2209  0015E2  0E00               	movlw	0
  2210  0015E4  6E23               	movwf	_move_state+1,c
  2211  0015E6  0E02               	movlw	2
  2212  0015E8  6E22               	movwf	_move_state,c
  2213  0015EA                     l1612:
  2214                           
  2215                           ;motor_control.c: 71: }
  2216                           ;motor_control.c: 72: if(directive==3){
  2217  0015EA  501E               	movf	set_directive@directive,w,c
  2218  0015EC  0A03               	xorlw	3
  2219  0015EE  101F               	iorwf	set_directive@directive+1,w,c
  2220  0015F0  A4D8               	btfss	status,2,c
  2221  0015F2  D006               	goto	l1618
  2222                           
  2223                           ;motor_control.c: 73: full_stp();
  2224  0015F4  EC51  F00E         	call	_full_stp	;wreg free
  2225                           
  2226                           ;motor_control.c: 74: move_state=3;
  2227  0015F8  0E00               	movlw	0
  2228  0015FA  6E23               	movwf	_move_state+1,c
  2229  0015FC  0E03               	movlw	3
  2230  0015FE  6E22               	movwf	_move_state,c
  2231  001600                     l1618:
  2232                           
  2233                           ;motor_control.c: 75: }
  2234                           ;motor_control.c: 76: if(directive==4){
  2235  001600  501E               	movf	set_directive@directive,w,c
  2236  001602  0A04               	xorlw	4
  2237  001604  101F               	iorwf	set_directive@directive+1,w,c
  2238  001606  A4D8               	btfss	status,2,c
  2239  001608  D006               	goto	l1624
  2240                           
  2241                           ;motor_control.c: 77: straight_fwd();
  2242  00160A  ECF2  F00D         	call	_straight_fwd	;wreg free
  2243                           
  2244                           ;motor_control.c: 78: move_state=4;
  2245  00160E  0E00               	movlw	0
  2246  001610  6E23               	movwf	_move_state+1,c
  2247  001612  0E04               	movlw	4
  2248  001614  6E22               	movwf	_move_state,c
  2249  001616                     l1624:
  2250                           
  2251                           ;motor_control.c: 79: }
  2252                           ;motor_control.c: 80: if(directive==5){
  2253  001616  501E               	movf	set_directive@directive,w,c
  2254  001618  0A05               	xorlw	5
  2255  00161A  101F               	iorwf	set_directive@directive+1,w,c
  2256  00161C  A4D8               	btfss	status,2,c
  2257  00161E  D006               	goto	l1630
  2258                           
  2259                           ;motor_control.c: 81: turn_right();
  2260  001620  ECCC  F00D         	call	_turn_right	;wreg free
  2261                           
  2262                           ;motor_control.c: 82: move_state=5;
  2263  001624  0E00               	movlw	0
  2264  001626  6E23               	movwf	_move_state+1,c
  2265  001628  0E05               	movlw	5
  2266  00162A  6E22               	movwf	_move_state,c
  2267  00162C                     l1630:
  2268                           
  2269                           ;motor_control.c: 83: }
  2270                           ;motor_control.c: 84: if(directive==6){
  2271  00162C  501E               	movf	set_directive@directive,w,c
  2272  00162E  0A06               	xorlw	6
  2273  001630  101F               	iorwf	set_directive@directive+1,w,c
  2274  001632  A4D8               	btfss	status,2,c
  2275  001634  D006               	goto	l1636
  2276                           
  2277                           ;motor_control.c: 85: spin_right();
  2278  001636  EC05  F00E         	call	_spin_right	;wreg free
  2279                           
  2280                           ;motor_control.c: 86: move_state=6;
  2281  00163A  0E00               	movlw	0
  2282  00163C  6E23               	movwf	_move_state+1,c
  2283  00163E  0E06               	movlw	6
  2284  001640  6E22               	movwf	_move_state,c
  2285  001642                     l1636:
  2286                           
  2287                           ;motor_control.c: 87: }
  2288                           ;motor_control.c: 88: if(directive==7){
  2289  001642  501E               	movf	set_directive@directive,w,c
  2290  001644  0A07               	xorlw	7
  2291  001646  101F               	iorwf	set_directive@directive+1,w,c
  2292  001648  A4D8               	btfss	status,2,c
  2293  00164A  D006               	goto	l303
  2294                           
  2295                           ;motor_control.c: 89: pirouette_right();
  2296  00164C  EC2B  F00E         	call	_pirouette_right	;wreg free
  2297                           
  2298                           ;motor_control.c: 90: move_state=7;
  2299  001650  0E00               	movlw	0
  2300  001652  6E23               	movwf	_move_state+1,c
  2301  001654  0E07               	movlw	7
  2302  001656  6E22               	movwf	_move_state,c
  2303  001658                     l303:
  2304  001658  0012               	return	
  2305  00165A                     __end_of_set_directive:
  2306                           	opt stack 0
  2307                           intcon	equ	0xFF2
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           status	equ	0xFD8
  2311                           
  2312 ;; *************** function _turn_right *****************
  2313 ;; Defined at:
  2314 ;;		line 384 in file "../motor_control.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;		None               void
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    3
  2335 ;; This function calls:
  2336 ;;		_set_motor_speed
  2337 ;; This function is called by:
  2338 ;;		_set_directive
  2339 ;;		_follow_simple_curves
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text15
  2344  001B98                     __ptext15:
  2345                           	opt stack 0
  2346  001B98                     _turn_right:
  2347                           	opt stack 25
  2348                           
  2349                           ;motor_control.c: 386: set_motor_speed(left, slow, 0);
  2350                           
  2351                           ;incstack = 0
  2352  001B98  0E04               	movlw	4
  2353  001B9A  6E15               	movwf	set_motor_speed@motor_speed,c
  2354  001B9C  0E00               	movlw	0
  2355  001B9E  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2356  001BA0  0E00               	movlw	0
  2357  001BA2  6E16               	movwf	set_motor_speed@speed_modifier,c
  2358  001BA4  0E00               	movlw	0
  2359  001BA6  EC0F  F00A         	call	_set_motor_speed
  2360                           
  2361                           ;motor_control.c: 387: set_motor_speed(right, stop, 0);
  2362  001BAA  0E03               	movlw	3
  2363  001BAC  6E15               	movwf	set_motor_speed@motor_speed,c
  2364  001BAE  0E00               	movlw	0
  2365  001BB0  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2366  001BB2  0E00               	movlw	0
  2367  001BB4  6E16               	movwf	set_motor_speed@speed_modifier,c
  2368  001BB6  0E01               	movlw	1
  2369  001BB8  EC0F  F00A         	call	_set_motor_speed
  2370  001BBC  0012               	return	
  2371  001BBE                     __end_of_turn_right:
  2372                           	opt stack 0
  2373                           intcon	equ	0xFF2
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _turn_left *****************
  2379 ;; Defined at:
  2380 ;;		line 369 in file "../motor_control.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    3
  2401 ;; This function calls:
  2402 ;;		_set_motor_speed
  2403 ;; This function is called by:
  2404 ;;		_set_directive
  2405 ;;		_follow_simple_curves
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text16
  2410  001BBE                     __ptext16:
  2411                           	opt stack 0
  2412  001BBE                     _turn_left:
  2413                           	opt stack 25
  2414                           
  2415                           ;motor_control.c: 371: set_motor_speed(left, stop, 0);
  2416                           
  2417                           ;incstack = 0
  2418  001BBE  0E03               	movlw	3
  2419  001BC0  6E15               	movwf	set_motor_speed@motor_speed,c
  2420  001BC2  0E00               	movlw	0
  2421  001BC4  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2422  001BC6  0E00               	movlw	0
  2423  001BC8  6E16               	movwf	set_motor_speed@speed_modifier,c
  2424  001BCA  0E00               	movlw	0
  2425  001BCC  EC0F  F00A         	call	_set_motor_speed
  2426                           
  2427                           ;motor_control.c: 372: set_motor_speed(right, slow, 0);
  2428  001BD0  0E04               	movlw	4
  2429  001BD2  6E15               	movwf	set_motor_speed@motor_speed,c
  2430  001BD4  0E00               	movlw	0
  2431  001BD6  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2432  001BD8  0E00               	movlw	0
  2433  001BDA  6E16               	movwf	set_motor_speed@speed_modifier,c
  2434  001BDC  0E01               	movlw	1
  2435  001BDE  EC0F  F00A         	call	_set_motor_speed
  2436  001BE2  0012               	return	
  2437  001BE4                     __end_of_turn_left:
  2438                           	opt stack 0
  2439                           intcon	equ	0xFF2
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _straight_fwd *****************
  2445 ;; Defined at:
  2446 ;;		line 374 in file "../motor_control.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    3
  2467 ;; This function calls:
  2468 ;;		_set_motor_speed
  2469 ;; This function is called by:
  2470 ;;		_set_directive
  2471 ;;		_follow_simple_curves
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text17
  2476  001BE4                     __ptext17:
  2477                           	opt stack 0
  2478  001BE4                     _straight_fwd:
  2479                           	opt stack 25
  2480                           
  2481                           ;motor_control.c: 376: set_motor_speed(left, slow, 75);
  2482                           
  2483                           ;incstack = 0
  2484  001BE4  0E04               	movlw	4
  2485  001BE6  6E15               	movwf	set_motor_speed@motor_speed,c
  2486  001BE8  0E00               	movlw	0
  2487  001BEA  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2488  001BEC  0E4B               	movlw	75
  2489  001BEE  6E16               	movwf	set_motor_speed@speed_modifier,c
  2490  001BF0  0E00               	movlw	0
  2491  001BF2  EC0F  F00A         	call	_set_motor_speed
  2492                           
  2493                           ;motor_control.c: 377: set_motor_speed(right, slow, 0);
  2494  001BF6  0E04               	movlw	4
  2495  001BF8  6E15               	movwf	set_motor_speed@motor_speed,c
  2496  001BFA  0E00               	movlw	0
  2497  001BFC  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2498  001BFE  0E00               	movlw	0
  2499  001C00  6E16               	movwf	set_motor_speed@speed_modifier,c
  2500  001C02  0E01               	movlw	1
  2501  001C04  EC0F  F00A         	call	_set_motor_speed
  2502  001C08  0012               	return	
  2503  001C0A                     __end_of_straight_fwd:
  2504                           	opt stack 0
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function _spin_right *****************
  2511 ;; Defined at:
  2512 ;;		line 379 in file "../motor_control.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    3
  2533 ;; This function calls:
  2534 ;;		_set_motor_speed
  2535 ;; This function is called by:
  2536 ;;		_set_directive
  2537 ;;		_follow_simple_curves
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text18
  2542  001C0A                     __ptext18:
  2543                           	opt stack 0
  2544  001C0A                     _spin_right:
  2545                           	opt stack 25
  2546                           
  2547                           ;motor_control.c: 381: set_motor_speed(left, slow, 0);
  2548                           
  2549                           ;incstack = 0
  2550  001C0A  0E04               	movlw	4
  2551  001C0C  6E15               	movwf	set_motor_speed@motor_speed,c
  2552  001C0E  0E00               	movlw	0
  2553  001C10  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2554  001C12  0E00               	movlw	0
  2555  001C14  6E16               	movwf	set_motor_speed@speed_modifier,c
  2556  001C16  0E00               	movlw	0
  2557  001C18  EC0F  F00A         	call	_set_motor_speed
  2558                           
  2559                           ;motor_control.c: 382: set_motor_speed(right, rev_slow, 0);
  2560  001C1C  0E02               	movlw	2
  2561  001C1E  6E15               	movwf	set_motor_speed@motor_speed,c
  2562  001C20  0E00               	movlw	0
  2563  001C22  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2564  001C24  0E00               	movlw	0
  2565  001C26  6E16               	movwf	set_motor_speed@speed_modifier,c
  2566  001C28  0E01               	movlw	1
  2567  001C2A  EC0F  F00A         	call	_set_motor_speed
  2568  001C2E  0012               	return	
  2569  001C30                     __end_of_spin_right:
  2570                           	opt stack 0
  2571                           intcon	equ	0xFF2
  2572                           postinc0	equ	0xFEE
  2573                           wreg	equ	0xFE8
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function _spin_left *****************
  2577 ;; Defined at:
  2578 ;;		line 363 in file "../motor_control.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;		None               void
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;Total ram usage:        0 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    3
  2599 ;; This function calls:
  2600 ;;		_set_motor_speed
  2601 ;; This function is called by:
  2602 ;;		_set_directive
  2603 ;;		_follow_simple_curves
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text19
  2608  001C30                     __ptext19:
  2609                           	opt stack 0
  2610  001C30                     _spin_left:
  2611                           	opt stack 25
  2612                           
  2613                           ;motor_control.c: 365: set_motor_speed(left, rev_slow, 0);
  2614                           
  2615                           ;incstack = 0
  2616  001C30  0E02               	movlw	2
  2617  001C32  6E15               	movwf	set_motor_speed@motor_speed,c
  2618  001C34  0E00               	movlw	0
  2619  001C36  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2620  001C38  0E00               	movlw	0
  2621  001C3A  6E16               	movwf	set_motor_speed@speed_modifier,c
  2622  001C3C  0E00               	movlw	0
  2623  001C3E  EC0F  F00A         	call	_set_motor_speed
  2624                           
  2625                           ;motor_control.c: 366: set_motor_speed(right, slow, 0);
  2626  001C42  0E04               	movlw	4
  2627  001C44  6E15               	movwf	set_motor_speed@motor_speed,c
  2628  001C46  0E00               	movlw	0
  2629  001C48  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2630  001C4A  0E00               	movlw	0
  2631  001C4C  6E16               	movwf	set_motor_speed@speed_modifier,c
  2632  001C4E  0E01               	movlw	1
  2633  001C50  EC0F  F00A         	call	_set_motor_speed
  2634  001C54  0012               	return	
  2635  001C56                     __end_of_spin_left:
  2636                           	opt stack 0
  2637                           intcon	equ	0xFF2
  2638                           postinc0	equ	0xFEE
  2639                           wreg	equ	0xFE8
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function _pirouette_right *****************
  2643 ;; Defined at:
  2644 ;;		line 39 in file "../motor_control.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;		None               void
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    3
  2665 ;; This function calls:
  2666 ;;		_set_motor_speed
  2667 ;; This function is called by:
  2668 ;;		_set_directive
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text20
  2673  001C56                     __ptext20:
  2674                           	opt stack 0
  2675  001C56                     _pirouette_right:
  2676                           	opt stack 25
  2677                           
  2678                           ;motor_control.c: 40: set_motor_speed(left, slow, 0);
  2679                           
  2680                           ;incstack = 0
  2681  001C56  0E04               	movlw	4
  2682  001C58  6E15               	movwf	set_motor_speed@motor_speed,c
  2683  001C5A  0E00               	movlw	0
  2684  001C5C  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2685  001C5E  0E00               	movlw	0
  2686  001C60  6E16               	movwf	set_motor_speed@speed_modifier,c
  2687  001C62  0E00               	movlw	0
  2688  001C64  EC0F  F00A         	call	_set_motor_speed
  2689                           
  2690                           ;motor_control.c: 41: set_motor_speed(right, rev_slow, 0);
  2691  001C68  0E02               	movlw	2
  2692  001C6A  6E15               	movwf	set_motor_speed@motor_speed,c
  2693  001C6C  0E00               	movlw	0
  2694  001C6E  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2695  001C70  0E00               	movlw	0
  2696  001C72  6E16               	movwf	set_motor_speed@speed_modifier,c
  2697  001C74  0E01               	movlw	1
  2698  001C76  EC0F  F00A         	call	_set_motor_speed
  2699  001C7A  0012               	return	
  2700  001C7C                     __end_of_pirouette_right:
  2701                           	opt stack 0
  2702                           intcon	equ	0xFF2
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           status	equ	0xFD8
  2706                           
  2707 ;; *************** function _pirouette_left *****************
  2708 ;; Defined at:
  2709 ;;		line 35 in file "../motor_control.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;		None               void
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    3
  2730 ;; This function calls:
  2731 ;;		_set_motor_speed
  2732 ;; This function is called by:
  2733 ;;		_set_directive
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text21
  2738  001C7C                     __ptext21:
  2739                           	opt stack 0
  2740  001C7C                     _pirouette_left:
  2741                           	opt stack 25
  2742                           
  2743                           ;motor_control.c: 36: set_motor_speed(left, rev_slow, 0);
  2744                           
  2745                           ;incstack = 0
  2746  001C7C  0E02               	movlw	2
  2747  001C7E  6E15               	movwf	set_motor_speed@motor_speed,c
  2748  001C80  0E00               	movlw	0
  2749  001C82  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2750  001C84  0E00               	movlw	0
  2751  001C86  6E16               	movwf	set_motor_speed@speed_modifier,c
  2752  001C88  0E00               	movlw	0
  2753  001C8A  EC0F  F00A         	call	_set_motor_speed
  2754                           
  2755                           ;motor_control.c: 37: set_motor_speed(right, slow, 0);
  2756  001C8E  0E04               	movlw	4
  2757  001C90  6E15               	movwf	set_motor_speed@motor_speed,c
  2758  001C92  0E00               	movlw	0
  2759  001C94  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2760  001C96  0E00               	movlw	0
  2761  001C98  6E16               	movwf	set_motor_speed@speed_modifier,c
  2762  001C9A  0E01               	movlw	1
  2763  001C9C  EC0F  F00A         	call	_set_motor_speed
  2764  001CA0  0012               	return	
  2765  001CA2                     __end_of_pirouette_left:
  2766                           	opt stack 0
  2767                           intcon	equ	0xFF2
  2768                           postinc0	equ	0xFEE
  2769                           wreg	equ	0xFE8
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _full_stp *****************
  2773 ;; Defined at:
  2774 ;;		line 30 in file "../motor_control.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    3
  2795 ;; This function calls:
  2796 ;;		_set_motor_speed
  2797 ;; This function is called by:
  2798 ;;		_set_directive
  2799 ;;		_motor_control
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text22
  2804  001CA2                     __ptext22:
  2805                           	opt stack 0
  2806  001CA2                     _full_stp:
  2807                           	opt stack 25
  2808                           
  2809                           ;motor_control.c: 31: set_motor_speed(left, stop, 0);
  2810                           
  2811                           ;incstack = 0
  2812  001CA2  0E03               	movlw	3
  2813  001CA4  6E15               	movwf	set_motor_speed@motor_speed,c
  2814  001CA6  0E00               	movlw	0
  2815  001CA8  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2816  001CAA  0E00               	movlw	0
  2817  001CAC  6E16               	movwf	set_motor_speed@speed_modifier,c
  2818  001CAE  0E00               	movlw	0
  2819  001CB0  EC0F  F00A         	call	_set_motor_speed
  2820                           
  2821                           ;motor_control.c: 32: set_motor_speed(right, stop, 0);
  2822  001CB4  0E03               	movlw	3
  2823  001CB6  6E15               	movwf	set_motor_speed@motor_speed,c
  2824  001CB8  0E00               	movlw	0
  2825  001CBA  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2826  001CBC  0E00               	movlw	0
  2827  001CBE  6E16               	movwf	set_motor_speed@speed_modifier,c
  2828  001CC0  0E01               	movlw	1
  2829  001CC2  EC0F  F00A         	call	_set_motor_speed
  2830  001CC6  0012               	return	
  2831  001CC8                     __end_of_full_stp:
  2832                           	opt stack 0
  2833                           intcon	equ	0xFF2
  2834                           postinc0	equ	0xFEE
  2835                           wreg	equ	0xFE8
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _set_motor_speed *****************
  2839 ;; Defined at:
  2840 ;;		line 187 in file "../sumovore.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  the_motor       1    wreg     enum E4168
  2843 ;;  motor_speed     1   20[COMRAM] enum E4160
  2844 ;;  speed_modifi    2   21[COMRAM] int 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  the_motor       1   25[COMRAM] enum E4168
  2847 ;;  duty_cycle      2   27[COMRAM] int 
  2848 ;;  dir_modifier    1   26[COMRAM] enum E4224
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        9 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    2
  2865 ;; This function calls:
  2866 ;;		_SetDCPWM1
  2867 ;;		_SetDCPWM2
  2868 ;; This function is called by:
  2869 ;;		_full_stp
  2870 ;;		_pirouette_left
  2871 ;;		_pirouette_right
  2872 ;;		_spin_left
  2873 ;;		_turn_left
  2874 ;;		_straight_fwd
  2875 ;;		_spin_right
  2876 ;;		_turn_right
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text23
  2881  00141E                     __ptext23:
  2882                           	opt stack 0
  2883  00141E                     _set_motor_speed:
  2884                           	opt stack 25
  2885                           
  2886                           ;incstack = 0
  2887                           ;set_motor_speed@the_motor stored from wreg
  2888  00141E  6E1A               	movwf	set_motor_speed@the_motor,c
  2889                           
  2890                           ;sumovore.c: 189: const static int motor_speeds[] = { -800, -725, -650, 0, 650, 725, 800
      +                          };
  2891                           ;sumovore.c: 190: int duty_cycle;
  2892                           ;sumovore.c: 191: enum e_direction {reverse,forward} dir_modifier= forward;
  2893  001420  0E01               	movlw	1
  2894  001422  6E1B               	movwf	set_motor_speed@dir_modifier,c
  2895                           
  2896                           ;sumovore.c: 193: duty_cycle = motor_speeds[ motor_speed ] + speed_modifier;
  2897  001424  5015               	movf	set_motor_speed@motor_speed,w,c
  2898  001426  0D02               	mullw	2
  2899  001428  0E01               	movlw	low set_motor_speed@motor_speeds
  2900  00142A  24F3               	addwf	prodl,w,c
  2901  00142C  6EF6               	movwf	tblptrl,c
  2902  00142E  0E10               	movlw	high set_motor_speed@motor_speeds
  2903  001430  20F4               	addwfc	prodh,w,c
  2904  001432  6EF7               	movwf	tblptrh,c
  2905  001434                     	if	1	;There are 3 active tblptr bytes
  2906  001434  6AF8               	clrf	tblptru,c
  2907  001436  0E00               	movlw	low (__mediumconst shr (0+16))
  2908  001438  22F8               	addwfc	tblptru,f,c
  2909  00143A                     	endif
  2910  00143A  0009               	tblrd		*+
  2911  00143C  CFF5 F018          	movff	tablat,??_set_motor_speed
  2912  001440  0009               	tblrd		*+
  2913  001442  CFF5 F019          	movff	tablat,??_set_motor_speed+1
  2914  001446  5016               	movf	set_motor_speed@speed_modifier,w,c
  2915  001448  2418               	addwf	??_set_motor_speed,w,c
  2916  00144A  6E1C               	movwf	set_motor_speed@duty_cycle,c
  2917  00144C  5017               	movf	set_motor_speed@speed_modifier+1,w,c
  2918  00144E  2019               	addwfc	??_set_motor_speed+1,w,c
  2919  001450  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  2920                           
  2921                           ;sumovore.c: 194: if ( duty_cycle < 0 )
  2922  001452  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  2923  001454  0A80               	xorlw	128
  2924  001456  6EF3               	movwf	prodl,c
  2925  001458  0E80               	movlw	128
  2926  00145A  5CF3               	subwf	prodl,w,c
  2927  00145C  0E00               	movlw	0
  2928  00145E  B4D8               	btfsc	status,2,c
  2929  001460  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  2930  001462  B0D8               	btfsc	status,0,c
  2931  001464  D006               	goto	l1336
  2932                           
  2933                           ;sumovore.c: 195: {
  2934                           ;sumovore.c: 196: dir_modifier = reverse;
  2935  001466  0E00               	movlw	0
  2936  001468  6E1B               	movwf	set_motor_speed@dir_modifier,c
  2937                           
  2938                           ;sumovore.c: 197: duty_cycle = -1 * duty_cycle;
  2939  00146A  6C1C               	negf	set_motor_speed@duty_cycle,c
  2940  00146C  1E1D               	comf	set_motor_speed@duty_cycle+1,f,c
  2941  00146E  B0D8               	btfsc	status,0,c
  2942  001470  2A1D               	incf	set_motor_speed@duty_cycle+1,f,c
  2943  001472                     l1336:
  2944                           
  2945                           ;sumovore.c: 198: }
  2946                           ;sumovore.c: 199: if ( duty_cycle > 800 ) duty_cycle = 800;
  2947  001472  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  2948  001474  0A80               	xorlw	128
  2949  001476  0F7D               	addlw	-131
  2950  001478  0E21               	movlw	33
  2951  00147A  B4D8               	btfsc	status,2,c
  2952  00147C  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  2953  00147E  A0D8               	btfss	status,0,c
  2954  001480  D004               	goto	l1340
  2955  001482  0E03               	movlw	3
  2956  001484  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  2957  001486  0E20               	movlw	32
  2958  001488  6E1C               	movwf	set_motor_speed@duty_cycle,c
  2959  00148A                     l1340:
  2960                           
  2961                           ;sumovore.c: 201: if (the_motor == left)
  2962  00148A  661A               	tstfsz	set_motor_speed@the_motor,c
  2963  00148C  D016               	goto	l1350
  2964                           
  2965                           ;sumovore.c: 202: {
  2966                           ;sumovore.c: 203: SetDCPWM2((unsigned int) duty_cycle );
  2967  00148E  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM2@dutycycle
  2968  001492  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM2@dutycycle+1
  2969  001496  EC4C  F00D         	call	_SetDCPWM2	;wreg free
  2970                           
  2971                           ;sumovore.c: 204: if ( dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  2972  00149A  661B               	tstfsz	set_motor_speed@dir_modifier,c
  2973  00149C  D002               	goto	l178
  2974  00149E  9082               	bcf	3970,0,c	;volatile
  2975  0014A0  D001               	goto	l1348
  2976  0014A2                     l178:
  2977                           
  2978                           ;sumovore.c: 205: else PORTCbits.RC0 = 0b1;
  2979  0014A2  8082               	bsf	3970,0,c	;volatile
  2980  0014A4                     l1348:
  2981                           
  2982                           ;sumovore.c: 206: PORTEbits.RE1 = !PORTCbits.RC0;
  2983  0014A4  B082               	btfsc	3970,0,c	;volatile
  2984  0014A6  D002               	goto	u70
  2985  0014A8  0E01               	movlw	1
  2986  0014AA  D001               	goto	u76
  2987  0014AC                     u70:
  2988  0014AC  0E00               	movlw	0
  2989  0014AE                     u76:
  2990  0014AE  6E18               	movwf	??_set_motor_speed& (0+255),c
  2991  0014B0  4618               	rlncf	??_set_motor_speed,f,c
  2992  0014B2  5084               	movf	3972,w,c	;volatile
  2993  0014B4  1818               	xorwf	??_set_motor_speed,w,c
  2994  0014B6  0BFD               	andlw	-3
  2995  0014B8  D014               	goto	L4
  2996  0014BA                     l1350:
  2997                           
  2998                           ;sumovore.c: 208: else
  2999                           ;sumovore.c: 209: {
  3000                           ;sumovore.c: 210: SetDCPWM1((unsigned int) duty_cycle );
  3001  0014BA  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM1@dutycycle
  3002  0014BE  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM1@dutycycle+1
  3003  0014C2  EC69  F00D         	call	_SetDCPWM1	;wreg free
  3004                           
  3005                           ;sumovore.c: 211: if ( dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  3006  0014C6  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3007  0014C8  D002               	goto	l181
  3008  0014CA  9A82               	bcf	3970,5,c	;volatile
  3009  0014CC  D001               	goto	l1356
  3010  0014CE                     l181:
  3011                           
  3012                           ;sumovore.c: 212: else PORTCbits.RC5 = 0b1;
  3013  0014CE  8A82               	bsf	3970,5,c	;volatile
  3014  0014D0                     l1356:
  3015                           
  3016                           ;sumovore.c: 213: PORTEbits.RE0 = !PORTCbits.RC5;
  3017  0014D0  BA82               	btfsc	3970,5,c	;volatile
  3018  0014D2  D002               	goto	u90
  3019  0014D4  0E01               	movlw	1
  3020  0014D6  D001               	goto	u96
  3021  0014D8                     u90:
  3022  0014D8  0E00               	movlw	0
  3023  0014DA                     u96:
  3024  0014DA  6E18               	movwf	??_set_motor_speed& (0+255),c
  3025  0014DC  5084               	movf	3972,w,c	;volatile
  3026  0014DE  1818               	xorwf	??_set_motor_speed,w,c
  3027  0014E0  0BFE               	andlw	-2
  3028  0014E2                     L4:
  3029  0014E2  1818               	xorwf	??_set_motor_speed,w,c
  3030  0014E4  6E84               	movwf	3972,c	;volatile
  3031  0014E6  0012               	return	
  3032  0014E8                     __end_of_set_motor_speed:
  3033                           	opt stack 0
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           status	equ	0xFD8
  3044                           
  3045 ;; *************** function _clr_mem *****************
  3046 ;; Defined at:
  3047 ;;		line 99 in file "../motor_control.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, status,2
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    1
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_change_track
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text24
  3076  001EC8                     __ptext24:
  3077                           	opt stack 0
  3078  001EC8                     _clr_mem:
  3079                           	opt stack 27
  3080                           
  3081                           ;motor_control.c: 100: memory = 0;
  3082                           
  3083                           ;incstack = 0
  3084  001EC8  0E00               	movlw	0
  3085  001ECA  6E21               	movwf	_memory+1,c
  3086  001ECC  0E00               	movlw	0
  3087  001ECE  6E20               	movwf	_memory,c
  3088  001ED0  0012               	return	
  3089  001ED2                     __end_of_clr_mem:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           intcon	equ	0xFF2
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function _ReadTimer0 *****************
  3103 ;; Defined at:
  3104 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0read.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  timer           2   16[COMRAM] struct Timers
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  2   14[COMRAM] unsigned int 
  3111 ;; Registers used:
  3112 ;;		None
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;Total ram usage:        4 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_motor_control
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text25
  3133  001E50                     __ptext25:
  3134                           	opt stack 0
  3135  001E50                     _ReadTimer0:
  3136                           	opt stack 28
  3137                           
  3138                           ;incstack = 0
  3139  001E50  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  3140  001E54  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  3141  001E58  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  3142  001E5C  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  3143  001E60  0012               	return	
  3144  001E62                     __end_of_ReadTimer0:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function _lvd_flag_set *****************
  3158 ;; Defined at:
  3159 ;;		line 47 in file "../interrupts.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      unsigned char 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    1
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text26
  3188  001EFA                     __ptext26:
  3189                           	opt stack 0
  3190  001EFA                     _lvd_flag_set:
  3191                           	opt stack 29
  3192                           
  3193                           ;interrupts.c: 49: return lvd_flag;
  3194                           
  3195                           ;incstack = 0
  3196  001EFA  502B               	movf	_lvd_flag,w,c
  3197  001EFC  0012               	return	
  3198  001EFE                     __end_of_lvd_flag_set:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           status	equ	0xFD8
  3210                           
  3211 ;; *************** function _initialization *****************
  3212 ;; Defined at:
  3213 ;;		line 65 in file "../sumovore.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;		None               void
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    5
  3234 ;; This function calls:
  3235 ;;		_OpenADC
  3236 ;;		_OpenPWM1
  3237 ;;		_OpenPWM2
  3238 ;;		_OpenTimer2
  3239 ;;		_OpenUSART
  3240 ;;		_SetDCPWM1
  3241 ;;		_SetDCPWM2
  3242 ;;		_openLVD
  3243 ;;		_openPORTA
  3244 ;;		_openPORTB
  3245 ;;		_openPORTCforPWM
  3246 ;;		_openPORTCforUSART
  3247 ;;		_openPORTD
  3248 ;;		_openPORTE
  3249 ;;		_reset_codes
  3250 ;;		_set_osc_32MHz
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text27
  3257  001704                     __ptext27:
  3258                           	opt stack 0
  3259  001704                     _initialization:
  3260                           	opt stack 25
  3261                           
  3262                           ;sumovore.c: 67: SeeLine.B = 0;
  3263                           
  3264                           ;incstack = 0
  3265  001704  902A               	bcf	_SeeLine,0,c
  3266  001706  922A               	bcf	_SeeLine,1,c
  3267  001708  942A               	bcf	_SeeLine,2,c
  3268  00170A  962A               	bcf	_SeeLine,3,c
  3269  00170C  982A               	bcf	_SeeLine,4,c
  3270                           
  3271                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  3272  00170E  8ED0               	bsf	4048,7,c	;volatile
  3273                           
  3274                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  3275  001710  9EF2               	bcf	intcon,7,c	;volatile
  3276                           
  3277                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  3278  001712  9CF2               	bcf	intcon,6,c	;volatile
  3279                           
  3280                           ;sumovore.c: 72: set_osc_32MHz();
  3281  001714  ECB8  F00D         	call	_set_osc_32MHz	;wreg free
  3282                           
  3283                           ;sumovore.c: 73: openPORTCforUSART();
  3284  001718  EC6F  F00F         	call	_openPORTCforUSART	;wreg free
  3285                           
  3286                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111, 16 );
  3287  00171C  0E00               	movlw	0
  3288  00171E  6E10               	movwf	OpenUSART@spbrg+1,c
  3289  001720  0E10               	movlw	16
  3290  001722  6E0F               	movwf	OpenUSART@spbrg,c
  3291  001724  0E3C               	movlw	60
  3292  001726  EC48  F00C         	call	_OpenUSART
  3293                           
  3294                           ;sumovore.c: 81: openPORTD();
  3295  00172A  EC78  F00F         	call	_openPORTD	;wreg free
  3296                           
  3297                           ;sumovore.c: 82: PORTD = 0;
  3298  00172E  0E00               	movlw	0
  3299  001730  6E83               	movwf	3971,c	;volatile
  3300                           
  3301                           ;sumovore.c: 84: reset_codes();
  3302  001732  EC2C  F00D         	call	_reset_codes	;wreg free
  3303                           
  3304                           ;sumovore.c: 86: openPORTCforPWM();
  3305  001736  EC41  F00F         	call	_openPORTCforPWM	;wreg free
  3306                           
  3307                           ;sumovore.c: 88: openPORTA();
  3308  00173A  EC75  F00F         	call	_openPORTA	;wreg free
  3309                           
  3310                           ;sumovore.c: 89: openPORTB();
  3311  00173E  EC72  F00F         	call	_openPORTB	;wreg free
  3312                           
  3313                           ;sumovore.c: 90: openPORTE();
  3314  001742  EC6C  F00F         	call	_openPORTE	;wreg free
  3315                           
  3316                           ;sumovore.c: 93: openLVD();
  3317  001746  ECEB  F00E         	call	_openLVD	;wreg free
  3318                           
  3319                           ;sumovore.c: 97: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  3320  00174A  0E0C               	movlw	12
  3321  00174C  6E0F               	movwf	OpenADC@config2,c
  3322  00174E  0E0A               	movlw	10
  3323  001750  6E10               	movwf	OpenADC@portconfig,c
  3324  001752  0EA7               	movlw	167
  3325  001754  ECAB  F00C         	call	_OpenADC
  3326                           
  3327                           ;sumovore.c: 100: PORTCbits.RC5 = 0b0;
  3328  001758  9A82               	bcf	3970,5,c	;volatile
  3329                           
  3330                           ;sumovore.c: 101: PORTEbits.RE0 = 0b0;
  3331  00175A  9084               	bcf	3972,0,c	;volatile
  3332                           
  3333                           ;sumovore.c: 102: PORTCbits.RC0 = 0b0;
  3334  00175C  9082               	bcf	3970,0,c	;volatile
  3335                           
  3336                           ;sumovore.c: 103: PORTEbits.RE1 = 0b0;
  3337  00175E  9284               	bcf	3972,1,c	;volatile
  3338                           
  3339                           ;sumovore.c: 108: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  3340  001760  0E06               	movlw	6
  3341  001762  ECD1  F00E         	call	_OpenTimer2
  3342                           
  3343                           ;sumovore.c: 109: OpenPWM1(199);
  3344  001766  0EC7               	movlw	199
  3345  001768  EC31  F00F         	call	_OpenPWM1
  3346                           
  3347                           ;sumovore.c: 111: OpenPWM2(199);
  3348  00176C  0EC7               	movlw	199
  3349  00176E  EC86  F00D         	call	_OpenPWM2
  3350                           
  3351                           ;sumovore.c: 112: SetDCPWM1(0);
  3352  001772  0E00               	movlw	0
  3353  001774  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  3354  001776  0E00               	movlw	0
  3355  001778  6E0F               	movwf	SetDCPWM1@dutycycle,c
  3356  00177A  EC69  F00D         	call	_SetDCPWM1	;wreg free
  3357                           
  3358                           ;sumovore.c: 115: SetDCPWM2(0);
  3359  00177E  0E00               	movlw	0
  3360  001780  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  3361  001782  0E00               	movlw	0
  3362  001784  6E0F               	movwf	SetDCPWM2@dutycycle,c
  3363  001786  EC4C  F00D         	call	_SetDCPWM2	;wreg free
  3364                           
  3365                           ;sumovore.c: 116: threshold = 120u;
  3366  00178A  0E00               	movlw	0
  3367  00178C  6E27               	movwf	_threshold+1,c
  3368  00178E  0E78               	movlw	120
  3369  001790  6E26               	movwf	_threshold,c
  3370  001792  0012               	return	
  3371  001794                     __end_of_initialization:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           intcon	equ	0xFF2
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _set_osc_32MHz *****************
  3385 ;; Defined at:
  3386 ;;		line 18 in file "../../Common/osc.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  i               2   14[COMRAM] int 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;Total ram usage:        2 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_initialization
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text28
  3415  001B70                     __ptext28:
  3416                           	opt stack 0
  3417  001B70                     _set_osc_32MHz:
  3418                           	opt stack 28
  3419                           
  3420                           ;osc.c: 20: int i;
  3421                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  3422                           
  3423                           ;incstack = 0
  3424  001B70  8CD3               	bsf	4051,6,c	;volatile
  3425                           
  3426                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  3427  001B72  8AD3               	bsf	4051,5,c	;volatile
  3428                           
  3429                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  3430  001B74  88D3               	bsf	4051,4,c	;volatile
  3431                           
  3432                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  3433  001B76  8C9B               	bsf	3995,6,c	;volatile
  3434                           
  3435                           ;osc.c: 28: for(i=0;i<500;i++);
  3436  001B78  0E00               	movlw	0
  3437  001B7A  6E10               	movwf	set_osc_32MHz@i+1,c
  3438  001B7C  0E00               	movlw	0
  3439  001B7E  6E0F               	movwf	set_osc_32MHz@i,c
  3440  001B80  5010               	movf	set_osc_32MHz@i+1,w,c
  3441  001B82  0A80               	xorlw	128
  3442  001B84  0F7F               	addlw	-129
  3443  001B86  0EF4               	movlw	244
  3444  001B88  B4D8               	btfsc	status,2,c
  3445  001B8A  5C0F               	subwf	set_osc_32MHz@i,w,c
  3446  001B8C  B0D8               	btfsc	status,0,c
  3447  001B8E  D003               	goto	l446
  3448  001B90  4A0F               	infsnz	set_osc_32MHz@i,f,c
  3449  001B92  2A10               	incf	set_osc_32MHz@i+1,f,c
  3450  001B94  D7F5               	goto	L5
  3451  001B96                     l446:
  3452  001B96  0012               	return	
  3453  001B98                     __end_of_set_osc_32MHz:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           intcon	equ	0xFF2
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _reset_codes *****************
  3467 ;; Defined at:
  3468 ;;		line 280 in file "../sumovore.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    4
  3489 ;; This function calls:
  3490 ;;		_BORtask
  3491 ;;		_PORtask
  3492 ;;		_RESETtask
  3493 ;;		_STKFULtask
  3494 ;;		_WDTtask
  3495 ;;		_isBOR
  3496 ;;		_isPOR
  3497 ;;		_isWDTTO
  3498 ;; This function is called by:
  3499 ;;		_initialization
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text29
  3504  001A58                     __ptext29:
  3505                           	opt stack 0
  3506  001A58                     _reset_codes:
  3507                           	opt stack 25
  3508                           
  3509                           ;sumovore.c: 282: if( isPOR() ) PORtask();
  3510                           
  3511                           ;incstack = 0
  3512  001A58  EC0C  F00F         	call	_isPOR	;wreg free
  3513  001A5C  0900               	iorlw	0
  3514  001A5E  B4D8               	btfsc	status,2,c
  3515  001A60  D003               	goto	l1714
  3516  001A62  EC2D  F00B         	call	_PORtask	;wreg free
  3517  001A66  D017               	goto	l209
  3518  001A68                     l1714:
  3519                           
  3520                           ;sumovore.c: 285: else if (isBOR() ) BORtask();
  3521  001A68  EC3A  F00F         	call	_isBOR	;wreg free
  3522  001A6C  0900               	iorlw	0
  3523  001A6E  B4D8               	btfsc	status,2,c
  3524  001A70  D003               	goto	l1718
  3525  001A72  EC76  F00E         	call	_BORtask	;wreg free
  3526  001A76  D00F               	goto	l209
  3527  001A78                     l1718:
  3528                           
  3529                           ;sumovore.c: 287: else if(isWDTTO() ) WDTtask();
  3530  001A78  EC02  F00F         	call	_isWDTTO	;wreg free
  3531  001A7C  0900               	iorlw	0
  3532  001A7E  B4D8               	btfsc	status,2,c
  3533  001A80  D003               	goto	l205
  3534  001A82  ECB5  F00E         	call	_WDTtask	;wreg free
  3535  001A86  D007               	goto	l209
  3536  001A88                     l205:
  3537                           
  3538                           ;sumovore.c: 291: else if(STKPTRbits.STKFUL) STKFULtask();
  3539  001A88  AEFC               	btfss	stkptr,7,c	;volatile
  3540  001A8A  D003               	goto	l1724
  3541  001A8C  ECA6  F00E         	call	_STKFULtask	;wreg free
  3542  001A90  D002               	goto	l209
  3543  001A92                     l1724:
  3544                           
  3545                           ;sumovore.c: 295: else RESETtask();
  3546  001A92  ECC3  F00E         	call	_RESETtask	;wreg free
  3547  001A96                     l209:
  3548  001A96  0012               	return	
  3549  001A98                     __end_of_reset_codes:
  3550                           	opt stack 0
  3551                           stkptr	equ	0xFFC
  3552                           tblptru	equ	0xFF8
  3553                           tblptrh	equ	0xFF7
  3554                           tblptrl	equ	0xFF6
  3555                           tablat	equ	0xFF5
  3556                           prodh	equ	0xFF4
  3557                           prodl	equ	0xFF3
  3558                           intcon	equ	0xFF2
  3559                           postinc0	equ	0xFEE
  3560                           wreg	equ	0xFE8
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _isWDTTO *****************
  3564 ;; Defined at:
  3565 ;;		line 15 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/iswdtto.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_reset_codes
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text30
  3594  001E04                     __ptext30:
  3595                           	opt stack 0
  3596  001E04                     _isWDTTO:
  3597                           	opt stack 27
  3598                           
  3599                           ;incstack = 0
  3600  001E04  B2D0               	btfsc	4048,1,c	;volatile
  3601  001E06  A4D0               	btfss	4048,2,c	;volatile
  3602  001E08  D005               	goto	l1544
  3603  001E0A  B0D0               	btfsc	4048,0,c	;volatile
  3604  001E0C  B6D0               	btfsc	4048,3,c	;volatile
  3605  001E0E  D002               	goto	l1544
  3606  001E10  0E01               	movlw	1
  3607  001E12  D001               	goto	l721
  3608  001E14                     l1544:
  3609  001E14  0E00               	movlw	0
  3610  001E16                     l721:
  3611  001E16  0012               	return	
  3612  001E18                     __end_of_isWDTTO:
  3613                           	opt stack 0
  3614                           stkptr	equ	0xFFC
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           postinc0	equ	0xFEE
  3623                           wreg	equ	0xFE8
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _isPOR *****************
  3627 ;; Defined at:
  3628 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/ispor.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      unsigned char 
  3635 ;; Registers used:
  3636 ;;		wreg
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_reset_codes
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text31
  3657  001E18                     __ptext31:
  3658                           	opt stack 0
  3659  001E18                     _isPOR:
  3660                           	opt stack 27
  3661                           
  3662                           ;incstack = 0
  3663  001E18  A2D0               	btfss	4048,1,c	;volatile
  3664  001E1A  A4D0               	btfss	4048,2,c	;volatile
  3665  001E1C  D005               	goto	l1452
  3666  001E1E  A0D0               	btfss	4048,0,c	;volatile
  3667  001E20  A6D0               	btfss	4048,3,c	;volatile
  3668  001E22  D002               	goto	l1452
  3669  001E24  0E01               	movlw	1
  3670  001E26  D001               	goto	l712
  3671  001E28                     l1452:
  3672  001E28  0E00               	movlw	0
  3673  001E2A                     l712:
  3674  001E2A  0012               	return	
  3675  001E2C                     __end_of_isPOR:
  3676                           	opt stack 0
  3677                           stkptr	equ	0xFFC
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           prodh	equ	0xFF4
  3683                           prodl	equ	0xFF3
  3684                           intcon	equ	0xFF2
  3685                           postinc0	equ	0xFEE
  3686                           wreg	equ	0xFE8
  3687                           status	equ	0xFD8
  3688                           
  3689 ;; *************** function _isBOR *****************
  3690 ;; Defined at:
  3691 ;;		line 12 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/isbor.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      unsigned char 
  3698 ;; Registers used:
  3699 ;;		wreg
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_reset_codes
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text32
  3720  001E74                     __ptext32:
  3721                           	opt stack 0
  3722  001E74                     _isBOR:
  3723                           	opt stack 27
  3724                           
  3725                           ;incstack = 0
  3726  001E74  A0D0               	btfss	4048,0,c	;volatile
  3727  001E76  A2D0               	btfss	4048,1,c	;volatile
  3728  001E78  D002               	goto	l1500
  3729  001E7A  0E01               	movlw	1
  3730  001E7C  D001               	goto	l703
  3731  001E7E                     l1500:
  3732  001E7E  0E00               	movlw	0
  3733  001E80                     l703:
  3734  001E80  0012               	return	
  3735  001E82                     __end_of_isBOR:
  3736                           	opt stack 0
  3737                           stkptr	equ	0xFFC
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           intcon	equ	0xFF2
  3745                           postinc0	equ	0xFEE
  3746                           wreg	equ	0xFE8
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _WDTtask *****************
  3750 ;; Defined at:
  3751 ;;		line 368 in file "../sumovore.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		_gtrap
  3774 ;;		_printf
  3775 ;; This function is called by:
  3776 ;;		_reset_codes
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text33
  3781  001D6A                     __ptext33:
  3782                           	opt stack 0
  3783  001D6A                     _WDTtask:
  3784                           	opt stack 25
  3785                           
  3786                           ;sumovore.c: 370: printf("<WDT TO>");
  3787                           
  3788                           ;incstack = 0
  3789  001D6A  0E10               	movlw	high STR_4
  3790  001D6C  6E11               	movwf	printf@f+1,c
  3791  001D6E  0E62               	movlw	low STR_4
  3792  001D70  6E10               	movwf	printf@f,c
  3793  001D72  ECA3  F00D         	call	_printf	;wreg free
  3794                           
  3795                           ;sumovore.c: 371: PORTDbits.RD0=!1;
  3796  001D76  9083               	bcf	3971,0,c	;volatile
  3797                           
  3798                           ;sumovore.c: 372: PORTDbits.RD1=!0;
  3799  001D78  8283               	bsf	3971,1,c	;volatile
  3800                           
  3801                           ;sumovore.c: 373: PORTDbits.RD2=!1;
  3802  001D7A  9483               	bcf	3971,2,c	;volatile
  3803                           
  3804                           ;sumovore.c: 374: PORTDbits.RD3=!0;
  3805  001D7C  8683               	bsf	3971,3,c	;volatile
  3806                           
  3807                           ;sumovore.c: 375: PORTDbits.RD4=!0;
  3808  001D7E  8883               	bsf	3971,4,c	;volatile
  3809                           
  3810                           ;sumovore.c: 376: gtrap();
  3811  001D80  ECDA  F00C         	call	_gtrap	;wreg free
  3812  001D84  0012               	return	
  3813  001D86                     __end_of_WDTtask:
  3814                           	opt stack 0
  3815                           stkptr	equ	0xFFC
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           intcon	equ	0xFF2
  3823                           postinc0	equ	0xFEE
  3824                           wreg	equ	0xFE8
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _STKFULtask *****************
  3828 ;; Defined at:
  3829 ;;		line 387 in file "../sumovore.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;		None               void
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    3
  3850 ;; This function calls:
  3851 ;;		_gtrap
  3852 ;;		_printf
  3853 ;; This function is called by:
  3854 ;;		_reset_codes
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text34
  3859  001D4C                     __ptext34:
  3860                           	opt stack 0
  3861  001D4C                     _STKFULtask:
  3862                           	opt stack 25
  3863                           
  3864                           ;sumovore.c: 390: STKPTRbits.STKFUL = 0;
  3865                           
  3866                           ;incstack = 0
  3867  001D4C  9EFC               	bcf	stkptr,7,c	;volatile
  3868                           
  3869                           ;sumovore.c: 391: printf("<STKFUL>");
  3870  001D4E  0E10               	movlw	high STR_5
  3871  001D50  6E11               	movwf	printf@f+1,c
  3872  001D52  0E59               	movlw	low STR_5
  3873  001D54  6E10               	movwf	printf@f,c
  3874  001D56  ECA3  F00D         	call	_printf	;wreg free
  3875                           
  3876                           ;sumovore.c: 392: PORTDbits.RD0=!1;
  3877  001D5A  9083               	bcf	3971,0,c	;volatile
  3878                           
  3879                           ;sumovore.c: 393: PORTDbits.RD1=!0;
  3880  001D5C  8283               	bsf	3971,1,c	;volatile
  3881                           
  3882                           ;sumovore.c: 394: PORTDbits.RD2=!1;
  3883  001D5E  9483               	bcf	3971,2,c	;volatile
  3884                           
  3885                           ;sumovore.c: 395: PORTDbits.RD3=!0;
  3886  001D60  8683               	bsf	3971,3,c	;volatile
  3887                           
  3888                           ;sumovore.c: 396: PORTDbits.RD4=!1;
  3889  001D62  9883               	bcf	3971,4,c	;volatile
  3890                           
  3891                           ;sumovore.c: 397: gtrap();
  3892  001D64  ECDA  F00C         	call	_gtrap	;wreg free
  3893  001D68  0012               	return	
  3894  001D6A                     __end_of_STKFULtask:
  3895                           	opt stack 0
  3896                           stkptr	equ	0xFFC
  3897                           tblptru	equ	0xFF8
  3898                           tblptrh	equ	0xFF7
  3899                           tblptrl	equ	0xFF6
  3900                           tablat	equ	0xFF5
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           intcon	equ	0xFF2
  3904                           postinc0	equ	0xFEE
  3905                           wreg	equ	0xFE8
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _RESETtask *****************
  3909 ;; Defined at:
  3910 ;;		line 403 in file "../sumovore.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;		None               void
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    3
  3931 ;; This function calls:
  3932 ;;		_gtrap
  3933 ;;		_printf
  3934 ;; This function is called by:
  3935 ;;		_reset_codes
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text35
  3940  001D86                     __ptext35:
  3941                           	opt stack 0
  3942  001D86                     _RESETtask:
  3943                           	opt stack 25
  3944                           
  3945                           ;sumovore.c: 406: printf(" <reset> ");
  3946                           
  3947                           ;incstack = 0
  3948  001D86  0E10               	movlw	high STR_6
  3949  001D88  6E11               	movwf	printf@f+1,c
  3950  001D8A  0E4F               	movlw	low STR_6
  3951  001D8C  6E10               	movwf	printf@f,c
  3952  001D8E  ECA3  F00D         	call	_printf	;wreg free
  3953                           
  3954                           ;sumovore.c: 407: PORTDbits.RD0=!1;
  3955  001D92  9083               	bcf	3971,0,c	;volatile
  3956                           
  3957                           ;sumovore.c: 408: PORTDbits.RD1=!0;
  3958  001D94  8283               	bsf	3971,1,c	;volatile
  3959                           
  3960                           ;sumovore.c: 409: PORTDbits.RD2=!1;
  3961  001D96  9483               	bcf	3971,2,c	;volatile
  3962                           
  3963                           ;sumovore.c: 410: PORTDbits.RD3=!1;
  3964  001D98  9683               	bcf	3971,3,c	;volatile
  3965                           
  3966                           ;sumovore.c: 411: PORTDbits.RD4=!1;
  3967  001D9A  9883               	bcf	3971,4,c	;volatile
  3968                           
  3969                           ;sumovore.c: 412: gtrap();
  3970  001D9C  ECDA  F00C         	call	_gtrap	;wreg free
  3971  001DA0  0012               	return	
  3972  001DA2                     __end_of_RESETtask:
  3973                           	opt stack 0
  3974                           stkptr	equ	0xFFC
  3975                           tblptru	equ	0xFF8
  3976                           tblptrh	equ	0xFF7
  3977                           tblptrl	equ	0xFF6
  3978                           tablat	equ	0xFF5
  3979                           prodh	equ	0xFF4
  3980                           prodl	equ	0xFF3
  3981                           intcon	equ	0xFF2
  3982                           postinc0	equ	0xFEE
  3983                           wreg	equ	0xFE8
  3984                           status	equ	0xFD8
  3985                           
  3986 ;; *************** function _PORtask *****************
  3987 ;; Defined at:
  3988 ;;		line 305 in file "../sumovore.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  count2          4   24[COMRAM] unsigned long 
  3993 ;;  count1          4   20[COMRAM] unsigned long 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:        8 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    3
  4010 ;; This function calls:
  4011 ;;		_StatusReset
  4012 ;;		_printf
  4013 ;; This function is called by:
  4014 ;;		_reset_codes
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text36
  4019  00165A                     __ptext36:
  4020                           	opt stack 0
  4021  00165A                     _PORtask:
  4022                           	opt stack 25
  4023                           
  4024                           ;sumovore.c: 307: unsigned long count1=0, count2=0;
  4025                           
  4026                           ;incstack = 0
  4027  00165A  0E00               	movlw	0
  4028  00165C  6E15               	movwf	PORtask@count1,c
  4029  00165E  0E00               	movlw	0
  4030  001660  6E16               	movwf	PORtask@count1+1,c
  4031  001662  0E00               	movlw	0
  4032  001664  6E17               	movwf	PORtask@count1+2,c
  4033  001666  0E00               	movlw	0
  4034  001668  6E18               	movwf	PORtask@count1+3,c
  4035  00166A  0E00               	movlw	0
  4036  00166C  6E19               	movwf	PORtask@count2,c
  4037  00166E  0E00               	movlw	0
  4038  001670  6E1A               	movwf	PORtask@count2+1,c
  4039  001672  0E00               	movlw	0
  4040  001674  6E1B               	movwf	PORtask@count2+2,c
  4041  001676  0E00               	movlw	0
  4042  001678  6E1C               	movwf	PORtask@count2+3,c
  4043                           
  4044                           ;sumovore.c: 308: StatusReset();
  4045  00167A  EC69  F00F         	call	_StatusReset	;wreg free
  4046                           
  4047                           ;sumovore.c: 310: printf("<POR>");
  4048  00167E  0E10               	movlw	high STR_2
  4049  001680  6E11               	movwf	printf@f+1,c
  4050  001682  0E78               	movlw	low STR_2
  4051  001684  6E10               	movwf	printf@f,c
  4052  001686  ECA3  F00D         	call	_printf	;wreg free
  4053                           
  4054                           ;sumovore.c: 311: PORTDbits.RD0=!1;
  4055  00168A  9083               	bcf	3971,0,c	;volatile
  4056                           
  4057                           ;sumovore.c: 312: PORTDbits.RD1=!0;
  4058  00168C  8283               	bsf	3971,1,c	;volatile
  4059                           
  4060                           ;sumovore.c: 313: PORTDbits.RD2=!0;
  4061  00168E  8483               	bsf	3971,2,c	;volatile
  4062                           
  4063                           ;sumovore.c: 314: PORTDbits.RD3=!0;
  4064  001690  8683               	bsf	3971,3,c	;volatile
  4065                           
  4066                           ;sumovore.c: 315: PORTDbits.RD4=!0;
  4067  001692  8883               	bsf	3971,4,c	;volatile
  4068                           
  4069                           ;sumovore.c: 316: while(count1<10u)
  4070  001694  D02C               	goto	l212
  4071  001696                     l213:
  4072  001696  0004               	clrwdt		;# 
  4073                           
  4074                           ;sumovore.c: 319: if (count2==30000u)
  4075  001698  501A               	movf	PORtask@count2+1,w,c
  4076  00169A  0A75               	xorlw	117
  4077  00169C  0E30               	movlw	48
  4078  00169E  B4D8               	btfsc	status,2,c
  4079  0016A0  1819               	xorwf	PORtask@count2,w,c
  4080  0016A2  101B               	iorwf	PORtask@count2+2,w,c
  4081  0016A4  101C               	iorwf	PORtask@count2+3,w,c
  4082  0016A6  A4D8               	btfss	status,2,c
  4083  0016A8  D011               	goto	l1482
  4084                           
  4085                           ;sumovore.c: 320: {
  4086                           ;sumovore.c: 321: count2=0;
  4087  0016AA  0E00               	movlw	0
  4088  0016AC  6E19               	movwf	PORtask@count2,c
  4089  0016AE  0E00               	movlw	0
  4090  0016B0  6E1A               	movwf	PORtask@count2+1,c
  4091  0016B2  0E00               	movlw	0
  4092  0016B4  6E1B               	movwf	PORtask@count2+2,c
  4093  0016B6  0E00               	movlw	0
  4094  0016B8  6E1C               	movwf	PORtask@count2+3,c
  4095                           
  4096                           ;sumovore.c: 322: count1++;
  4097  0016BA  0E01               	movlw	1
  4098  0016BC  2615               	addwf	PORtask@count1,f,c
  4099  0016BE  0E00               	movlw	0
  4100  0016C0  2216               	addwfc	PORtask@count1+1,f,c
  4101  0016C2  2217               	addwfc	PORtask@count1+2,f,c
  4102  0016C4  2218               	addwfc	PORtask@count1+3,f,c
  4103                           
  4104                           ;sumovore.c: 323: PORTDbits.RD0=!1;
  4105  0016C6  9083               	bcf	3971,0,c	;volatile
  4106                           
  4107                           ;sumovore.c: 324: PORTDbits.RD1=!0;
  4108  0016C8  8283               	bsf	3971,1,c	;volatile
  4109                           
  4110                           ;sumovore.c: 325: }
  4111  0016CA  D00B               	goto	l1486
  4112  0016CC                     l1482:
  4113                           
  4114                           ;sumovore.c: 326: else if (count2==15000u)
  4115  0016CC  501A               	movf	PORtask@count2+1,w,c
  4116  0016CE  0A3A               	xorlw	58
  4117  0016D0  0E98               	movlw	152
  4118  0016D2  B4D8               	btfsc	status,2,c
  4119  0016D4  1819               	xorwf	PORtask@count2,w,c
  4120  0016D6  101B               	iorwf	PORtask@count2+2,w,c
  4121  0016D8  101C               	iorwf	PORtask@count2+3,w,c
  4122  0016DA  A4D8               	btfss	status,2,c
  4123  0016DC  D002               	goto	l1486
  4124                           
  4125                           ;sumovore.c: 327: {
  4126                           ;sumovore.c: 328: PORTDbits.RD0=!0;
  4127  0016DE  8083               	bsf	3971,0,c	;volatile
  4128                           
  4129                           ;sumovore.c: 329: PORTDbits.RD1=!1;
  4130  0016E0  9283               	bcf	3971,1,c	;volatile
  4131  0016E2                     l1486:
  4132                           
  4133                           ;sumovore.c: 330: }
  4134                           ;sumovore.c: 331: count2++;
  4135  0016E2  0E01               	movlw	1
  4136  0016E4  2619               	addwf	PORtask@count2,f,c
  4137  0016E6  0E00               	movlw	0
  4138  0016E8  221A               	addwfc	PORtask@count2+1,f,c
  4139  0016EA  221B               	addwfc	PORtask@count2+2,f,c
  4140  0016EC  221C               	addwfc	PORtask@count2+3,f,c
  4141  0016EE                     l212:
  4142  0016EE  0E0A               	movlw	10
  4143  0016F0  5C15               	subwf	PORtask@count1,w,c
  4144  0016F2  0E00               	movlw	0
  4145  0016F4  5816               	subwfb	PORtask@count1+1,w,c
  4146  0016F6  0E00               	movlw	0
  4147  0016F8  5817               	subwfb	PORtask@count1+2,w,c
  4148  0016FA  0E00               	movlw	0
  4149  0016FC  5818               	subwfb	PORtask@count1+3,w,c
  4150  0016FE  B0D8               	btfsc	status,0,c
  4151  001700  0012               	return	
  4152  001702  D7C9               	goto	l213
  4153  001704                     __end_of_PORtask:
  4154                           	opt stack 0
  4155                           stkptr	equ	0xFFC
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           intcon	equ	0xFF2
  4163                           postinc0	equ	0xFEE
  4164                           wreg	equ	0xFE8
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _BORtask *****************
  4168 ;; Defined at:
  4169 ;;		line 347 in file "../sumovore.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;		None               void
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    3
  4190 ;; This function calls:
  4191 ;;		_StatusReset
  4192 ;;		_gtrap
  4193 ;;		_printf
  4194 ;; This function is called by:
  4195 ;;		_reset_codes
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text37
  4200  001CEC                     __ptext37:
  4201                           	opt stack 0
  4202  001CEC                     _BORtask:
  4203                           	opt stack 25
  4204                           
  4205                           ;sumovore.c: 349: StatusReset();
  4206                           
  4207                           ;incstack = 0
  4208  001CEC  EC69  F00F         	call	_StatusReset	;wreg free
  4209                           
  4210                           ;sumovore.c: 351: printf("<BOR>");
  4211  001CF0  0E10               	movlw	high STR_3
  4212  001CF2  6E11               	movwf	printf@f+1,c
  4213  001CF4  0E72               	movlw	low STR_3
  4214  001CF6  6E10               	movwf	printf@f,c
  4215  001CF8  ECA3  F00D         	call	_printf	;wreg free
  4216                           
  4217                           ;sumovore.c: 352: PORTDbits.RD0=!0;
  4218  001CFC  8083               	bsf	3971,0,c	;volatile
  4219                           
  4220                           ;sumovore.c: 353: PORTDbits.RD1=!0;
  4221  001CFE  8283               	bsf	3971,1,c	;volatile
  4222                           
  4223                           ;sumovore.c: 354: PORTDbits.RD2=!0;
  4224  001D00  8483               	bsf	3971,2,c	;volatile
  4225                           
  4226                           ;sumovore.c: 355: PORTDbits.RD3=!0;
  4227  001D02  8683               	bsf	3971,3,c	;volatile
  4228                           
  4229                           ;sumovore.c: 356: PORTDbits.RD4=!1;
  4230  001D04  9883               	bcf	3971,4,c	;volatile
  4231                           
  4232                           ;sumovore.c: 357: gtrap();
  4233  001D06  ECDA  F00C         	call	_gtrap	;wreg free
  4234  001D0A  0012               	return	
  4235  001D0C                     __end_of_BORtask:
  4236                           	opt stack 0
  4237                           stkptr	equ	0xFFC
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           intcon	equ	0xFF2
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function _StatusReset *****************
  4250 ;; Defined at:
  4251 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/statrst.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;		None               void
  4258 ;; Registers used:
  4259 ;;		None
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_PORtask
  4276 ;;		_BORtask
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text38
  4281  001ED2                     __ptext38:
  4282                           	opt stack 0
  4283  001ED2                     _StatusReset:
  4284                           	opt stack 26
  4285                           
  4286                           ;incstack = 0
  4287  001ED2  82D0               	bsf	4048,1,c	;volatile
  4288  001ED4  80D0               	bsf	4048,0,c	;volatile
  4289  001ED6  0012               	return	
  4290  001ED8                     __end_of_StatusReset:
  4291                           	opt stack 0
  4292                           stkptr	equ	0xFFC
  4293                           tblptru	equ	0xFF8
  4294                           tblptrh	equ	0xFF7
  4295                           tblptrl	equ	0xFF6
  4296                           tablat	equ	0xFF5
  4297                           prodh	equ	0xFF4
  4298                           prodl	equ	0xFF3
  4299                           intcon	equ	0xFF2
  4300                           postinc0	equ	0xFEE
  4301                           wreg	equ	0xFE8
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _openPORTE *****************
  4305 ;; Defined at:
  4306 ;;		line 177 in file "../sumovore.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		wreg, status,2
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_initialization
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text39
  4335  001ED8                     __ptext39:
  4336                           	opt stack 0
  4337  001ED8                     _openPORTE:
  4338                           	opt stack 28
  4339                           
  4340                           ;sumovore.c: 179: TRISE = 0b000;
  4341                           
  4342                           ;incstack = 0
  4343  001ED8  0E00               	movlw	0
  4344  001EDA  6E96               	movwf	3990,c	;volatile
  4345  001EDC  0012               	return	
  4346  001EDE                     __end_of_openPORTE:
  4347                           	opt stack 0
  4348                           stkptr	equ	0xFFC
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           postinc0	equ	0xFEE
  4357                           wreg	equ	0xFE8
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _openPORTCforUSART *****************
  4361 ;; Defined at:
  4362 ;;		line 123 in file "../sumovore.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;		None               void
  4369 ;; Registers used:
  4370 ;;		None
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    1
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_initialization
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text40
  4391  001EDE                     __ptext40:
  4392                           	opt stack 0
  4393  001EDE                     _openPORTCforUSART:
  4394                           	opt stack 28
  4395                           
  4396                           ;sumovore.c: 125: TRISCbits.TRISC6 = 0;
  4397                           
  4398                           ;incstack = 0
  4399  001EDE  9C94               	bcf	3988,6,c	;volatile
  4400                           
  4401                           ;sumovore.c: 126: TRISCbits.TRISC7 = 1;
  4402  001EE0  8E94               	bsf	3988,7,c	;volatile
  4403  001EE2  0012               	return	
  4404  001EE4                     __end_of_openPORTCforUSART:
  4405                           	opt stack 0
  4406                           stkptr	equ	0xFFC
  4407                           tblptru	equ	0xFF8
  4408                           tblptrh	equ	0xFF7
  4409                           tblptrl	equ	0xFF6
  4410                           tablat	equ	0xFF5
  4411                           prodh	equ	0xFF4
  4412                           prodl	equ	0xFF3
  4413                           intcon	equ	0xFF2
  4414                           postinc0	equ	0xFEE
  4415                           wreg	equ	0xFE8
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function _openPORTCforPWM *****************
  4419 ;; Defined at:
  4420 ;;		line 132 in file "../sumovore.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;		None               void
  4427 ;; Registers used:
  4428 ;;		None
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_initialization
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text41
  4449  001E82                     __ptext41:
  4450                           	opt stack 0
  4451  001E82                     _openPORTCforPWM:
  4452                           	opt stack 28
  4453                           
  4454                           ;sumovore.c: 134: TRISCbits.TRISC0 = 0;
  4455                           
  4456                           ;incstack = 0
  4457  001E82  9094               	bcf	3988,0,c	;volatile
  4458                           
  4459                           ;sumovore.c: 135: TRISCbits.TRISC1 = 0;
  4460  001E84  9294               	bcf	3988,1,c	;volatile
  4461                           
  4462                           ;sumovore.c: 136: TRISCbits.TRISC2 = 0;
  4463  001E86  9494               	bcf	3988,2,c	;volatile
  4464                           
  4465                           ;sumovore.c: 137: TRISCbits.TRISC3 = 0;
  4466  001E88  9694               	bcf	3988,3,c	;volatile
  4467                           
  4468                           ;sumovore.c: 138: TRISCbits.TRISC4 = 0;
  4469  001E8A  9894               	bcf	3988,4,c	;volatile
  4470                           
  4471                           ;sumovore.c: 139: TRISCbits.TRISC5 = 0;
  4472  001E8C  9A94               	bcf	3988,5,c	;volatile
  4473  001E8E  0012               	return	
  4474  001E90                     __end_of_openPORTCforPWM:
  4475                           	opt stack 0
  4476                           stkptr	equ	0xFFC
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           status	equ	0xFD8
  4487                           
  4488 ;; *************** function _openPORTB *****************
  4489 ;; Defined at:
  4490 ;;		line 157 in file "../sumovore.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;		None               void
  4497 ;; Registers used:
  4498 ;;		wreg, status,2
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    1
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_initialization
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text42
  4519  001EE4                     __ptext42:
  4520                           	opt stack 0
  4521  001EE4                     _openPORTB:
  4522                           	opt stack 28
  4523                           
  4524                           ;sumovore.c: 159: TRISB = 0B11000000;
  4525                           
  4526                           ;incstack = 0
  4527  001EE4  0EC0               	movlw	192
  4528  001EE6  6E93               	movwf	3987,c	;volatile
  4529  001EE8  0012               	return	
  4530  001EEA                     __end_of_openPORTB:
  4531                           	opt stack 0
  4532                           stkptr	equ	0xFFC
  4533                           tblptru	equ	0xFF8
  4534                           tblptrh	equ	0xFF7
  4535                           tblptrl	equ	0xFF6
  4536                           tablat	equ	0xFF5
  4537                           prodh	equ	0xFF4
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function _openPORTA *****************
  4545 ;; Defined at:
  4546 ;;		line 146 in file "../sumovore.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;		None               void
  4553 ;; Registers used:
  4554 ;;		wreg, status,2
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_initialization
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text43
  4575  001EEA                     __ptext43:
  4576                           	opt stack 0
  4577  001EEA                     _openPORTA:
  4578                           	opt stack 28
  4579                           
  4580                           ;sumovore.c: 148: TRISA = 0B11101111;
  4581                           
  4582                           ;incstack = 0
  4583  001EEA  0EEF               	movlw	239
  4584  001EEC  6E92               	movwf	3986,c	;volatile
  4585  001EEE  0012               	return	
  4586  001EF0                     __end_of_openPORTA:
  4587                           	opt stack 0
  4588                           stkptr	equ	0xFFC
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           intcon	equ	0xFF2
  4596                           postinc0	equ	0xFEE
  4597                           wreg	equ	0xFE8
  4598                           status	equ	0xFD8
  4599                           
  4600 ;; *************** function _openLVD *****************
  4601 ;; Defined at:
  4602 ;;		line 426 in file "../sumovore.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;		None               void
  4609 ;; Registers used:
  4610 ;;		None
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_initialization
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text44
  4631  001DD6                     __ptext44:
  4632                           	opt stack 0
  4633  001DD6                     _openLVD:
  4634                           	opt stack 28
  4635                           
  4636                           ;sumovore.c: 428: RCONbits.IPEN = 1;
  4637                           
  4638                           ;incstack = 0
  4639  001DD6  8ED0               	bsf	4048,7,c	;volatile
  4640                           
  4641                           ;sumovore.c: 429: HLVDCONbits.HLVDEN = 1;
  4642  001DD8  88D2               	bsf	4050,4,c	;volatile
  4643                           
  4644                           ;sumovore.c: 431: IPR2bits.HLVDIP = 1;
  4645  001DDA  84A2               	bsf	4002,2,c	;volatile
  4646                           
  4647                           ;sumovore.c: 432: HLVDCONbits.VDIRMAG = 0;
  4648  001DDC  9ED2               	bcf	4050,7,c	;volatile
  4649                           
  4650                           ;sumovore.c: 434: HLVDCONbits.HLVDL3 = 1;
  4651  001DDE  86D2               	bsf	4050,3,c	;volatile
  4652                           
  4653                           ;sumovore.c: 435: HLVDCONbits.HLVDL2 = 1;
  4654  001DE0  84D2               	bsf	4050,2,c	;volatile
  4655                           
  4656                           ;sumovore.c: 436: HLVDCONbits.HLVDL1 = 1;
  4657  001DE2  82D2               	bsf	4050,1,c	;volatile
  4658                           
  4659                           ;sumovore.c: 437: HLVDCONbits.HLVDL0 = 0;
  4660  001DE4  90D2               	bcf	4050,0,c	;volatile
  4661                           
  4662                           ;sumovore.c: 438: PIR2bits.HLVDIF = 0;
  4663  001DE6  94A1               	bcf	4001,2,c	;volatile
  4664                           
  4665                           ;sumovore.c: 439: PIE2bits.HLVDIE = 1;
  4666  001DE8  84A0               	bsf	4000,2,c	;volatile
  4667                           
  4668                           ;sumovore.c: 440: INTCONbits.GIEH = 1;
  4669  001DEA  8EF2               	bsf	intcon,7,c	;volatile
  4670  001DEC  0012               	return	
  4671  001DEE                     __end_of_openLVD:
  4672                           	opt stack 0
  4673                           stkptr	equ	0xFFC
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           intcon	equ	0xFF2
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _SetDCPWM2 *****************
  4686 ;; Defined at:
  4687 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2setdc.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4692 ;; Return value:  Size  Location     Type
  4693 ;;		None               void
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;Total ram usage:        6 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_initialization
  4712 ;;		_set_motor_speed
  4713 ;;		_motors_brake_all
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text45
  4718  001A98                     __ptext45:
  4719                           	opt stack 0
  4720  001A98                     _SetDCPWM2:
  4721                           	opt stack 25
  4722                           
  4723                           ;incstack = 0
  4724  001A98  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4725  001A9C  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4726  001AA0  0E06               	movlw	6
  4727  001AA2                     u25:
  4728  001AA2  90D8               	bcf	status,0,c
  4729  001AA4  3611               	rlcf	??_SetDCPWM2,f,c
  4730  001AA6  3612               	rlcf	??_SetDCPWM2+1,f,c
  4731  001AA8  2EE8               	decfsz	wreg,f,c
  4732  001AAA  D7FB               	goto	u25
  4733  001AAC  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4734  001AB0  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4735  001AB4  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4736  001AB8  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4737  001ABC  90D8               	bcf	status,0,c
  4738  001ABE  3211               	rrcf	??_SetDCPWM2,f,c
  4739  001AC0  90D8               	bcf	status,0,c
  4740  001AC2  3211               	rrcf	??_SetDCPWM2,f,c
  4741  001AC4  0E30               	movlw	48
  4742  001AC6  1611               	andwf	??_SetDCPWM2,f,c
  4743  001AC8  50BA               	movf	4026,w,c	;volatile
  4744  001ACA  0BCF               	andlw	207
  4745  001ACC  1011               	iorwf	??_SetDCPWM2,w,c
  4746  001ACE  6EBA               	movwf	4026,c	;volatile
  4747  001AD0  0012               	return	
  4748  001AD2                     __end_of_SetDCPWM2:
  4749                           	opt stack 0
  4750                           stkptr	equ	0xFFC
  4751                           tblptru	equ	0xFF8
  4752                           tblptrh	equ	0xFF7
  4753                           tblptrl	equ	0xFF6
  4754                           tablat	equ	0xFF5
  4755                           prodh	equ	0xFF4
  4756                           prodl	equ	0xFF3
  4757                           intcon	equ	0xFF2
  4758                           postinc0	equ	0xFEE
  4759                           wreg	equ	0xFE8
  4760                           status	equ	0xFD8
  4761                           
  4762 ;; *************** function _SetDCPWM1 *****************
  4763 ;; Defined at:
  4764 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1setdc.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4769 ;; Return value:  Size  Location     Type
  4770 ;;		None               void
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        6 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_initialization
  4789 ;;		_set_motor_speed
  4790 ;;		_motors_brake_all
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text46
  4795  001AD2                     __ptext46:
  4796                           	opt stack 0
  4797  001AD2                     _SetDCPWM1:
  4798                           	opt stack 25
  4799                           
  4800                           ;incstack = 0
  4801  001AD2  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  4802  001AD6  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  4803  001ADA  0E06               	movlw	6
  4804  001ADC                     u15:
  4805  001ADC  90D8               	bcf	status,0,c
  4806  001ADE  3611               	rlcf	??_SetDCPWM1,f,c
  4807  001AE0  3612               	rlcf	??_SetDCPWM1+1,f,c
  4808  001AE2  2EE8               	decfsz	wreg,f,c
  4809  001AE4  D7FB               	goto	u15
  4810  001AE6  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  4811  001AEA  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  4812  001AEE  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  4813  001AF2  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  4814  001AF6  90D8               	bcf	status,0,c
  4815  001AF8  3211               	rrcf	??_SetDCPWM1,f,c
  4816  001AFA  90D8               	bcf	status,0,c
  4817  001AFC  3211               	rrcf	??_SetDCPWM1,f,c
  4818  001AFE  0E30               	movlw	48
  4819  001B00  1611               	andwf	??_SetDCPWM1,f,c
  4820  001B02  50BD               	movf	4029,w,c	;volatile
  4821  001B04  0BCF               	andlw	207
  4822  001B06  1011               	iorwf	??_SetDCPWM1,w,c
  4823  001B08  6EBD               	movwf	4029,c	;volatile
  4824  001B0A  0012               	return	
  4825  001B0C                     __end_of_SetDCPWM1:
  4826                           	opt stack 0
  4827                           stkptr	equ	0xFFC
  4828                           tblptru	equ	0xFF8
  4829                           tblptrh	equ	0xFF7
  4830                           tblptrl	equ	0xFF6
  4831                           tablat	equ	0xFF5
  4832                           prodh	equ	0xFF4
  4833                           prodl	equ	0xFF3
  4834                           intcon	equ	0xFF2
  4835                           postinc0	equ	0xFEE
  4836                           wreg	equ	0xFE8
  4837                           status	equ	0xFD8
  4838                           
  4839 ;; *************** function _OpenUSART *****************
  4840 ;; Defined at:
  4841 ;;		line 73 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/USART/uopen.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  config          1    wreg     unsigned char 
  4844 ;;  spbrg           2   14[COMRAM] unsigned int 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  config          1   19[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;		None               void
  4849 ;; Registers used:
  4850 ;;		wreg, status,2
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:        6 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_initialization
  4867 ;;		_configureUSART
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text47
  4872  001890                     __ptext47:
  4873                           	opt stack 0
  4874  001890                     _OpenUSART:
  4875                           	opt stack 28
  4876                           
  4877                           ;incstack = 0
  4878                           ;OpenUSART@config stored from wreg
  4879  001890  6E14               	movwf	OpenUSART@config,c
  4880  001892  0E00               	movlw	0
  4881  001894  6EAC               	movwf	4012,c	;volatile
  4882  001896  0E00               	movlw	0
  4883  001898  6EAB               	movwf	4011,c	;volatile
  4884  00189A  B014               	btfsc	OpenUSART@config,0,c
  4885  00189C  88AC               	bsf	4012,4,c	;volatile
  4886  00189E  A214               	btfss	OpenUSART@config,1,c
  4887  0018A0  D002               	goto	l1668
  4888  0018A2  8CAC               	bsf	4012,6,c	;volatile
  4889  0018A4  8CAB               	bsf	4011,6,c	;volatile
  4890  0018A6                     l1668:
  4891  0018A6  B414               	btfsc	OpenUSART@config,2,c
  4892  0018A8  8EAC               	bsf	4012,7,c	;volatile
  4893  0018AA  A614               	btfss	OpenUSART@config,3,c
  4894  0018AC  D002               	goto	l687
  4895  0018AE  88AB               	bsf	4011,4,c	;volatile
  4896  0018B0  D001               	goto	l1676
  4897  0018B2                     l687:
  4898  0018B2  8AAB               	bsf	4011,5,c	;volatile
  4899  0018B4                     l1676:
  4900  0018B4  B814               	btfsc	OpenUSART@config,4,c
  4901  0018B6  84AC               	bsf	4012,2,c	;volatile
  4902  0018B8  989E               	bcf	3998,4,c	;volatile
  4903  0018BA  BA14               	btfsc	OpenUSART@config,5,c
  4904  0018BC  86AB               	bsf	4011,3,c	;volatile
  4905  0018BE  AC14               	btfss	OpenUSART@config,6,c
  4906  0018C0  D002               	goto	l691
  4907  0018C2  8A9D               	bsf	3997,5,c	;volatile
  4908  0018C4  D001               	goto	l692
  4909  0018C6                     l691:
  4910  0018C6  9A9D               	bcf	3997,5,c	;volatile
  4911  0018C8                     l692:
  4912  0018C8  9A9E               	bcf	3998,5,c	;volatile
  4913  0018CA  AE14               	btfss	OpenUSART@config,7,c
  4914  0018CC  D002               	goto	l693
  4915  0018CE  889D               	bsf	3997,4,c	;volatile
  4916  0018D0  D001               	goto	l694
  4917  0018D2                     l693:
  4918  0018D2  989D               	bcf	3997,4,c	;volatile
  4919  0018D4                     l694:
  4920  0018D4  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4921  0018D8  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4922  0018DC  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  4923  0018E0  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  4924  0018E2  5012               	movf	??_OpenUSART+1,w,c
  4925  0018E4  6EB0               	movwf	4016,c	;volatile
  4926  0018E6  8AAC               	bsf	4012,5,c	;volatile
  4927  0018E8  8EAB               	bsf	4011,7,c	;volatile
  4928  0018EA  9C94               	bcf	3988,6,c	;volatile
  4929  0018EC  8E94               	bsf	3988,7,c	;volatile
  4930  0018EE  B8AC               	btfsc	4012,4,c	;volatile
  4931  0018F0  BEAC               	btfsc	4012,7,c	;volatile
  4932  0018F2  D001               	goto	l696
  4933  0018F4  8C94               	bsf	3988,6,c	;volatile
  4934  0018F6                     l696:
  4935  0018F6  0012               	return	
  4936  0018F8                     __end_of_OpenUSART:
  4937                           	opt stack 0
  4938                           stkptr	equ	0xFFC
  4939                           tblptru	equ	0xFF8
  4940                           tblptrh	equ	0xFF7
  4941                           tblptrl	equ	0xFF6
  4942                           tablat	equ	0xFF5
  4943                           prodh	equ	0xFF4
  4944                           prodl	equ	0xFF3
  4945                           intcon	equ	0xFF2
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _OpenTimer2 *****************
  4951 ;; Defined at:
  4952 ;;		line 17 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t2open.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  config          1    wreg     unsigned char 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  config          1   14[COMRAM] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;		None               void
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;Total ram usage:        1 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_initialization
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text48
  4981  001DA2                     __ptext48:
  4982                           	opt stack 0
  4983  001DA2                     _OpenTimer2:
  4984                           	opt stack 28
  4985                           
  4986                           ;incstack = 0
  4987                           ;OpenTimer2@config stored from wreg
  4988  001DA2  6E0F               	movwf	OpenTimer2@config,c
  4989  001DA4  500F               	movf	OpenTimer2@config,w,c
  4990  001DA6  0BFB               	andlw	251
  4991  001DA8  6ECA               	movwf	4042,c	;volatile
  4992  001DAA  0E00               	movlw	0
  4993  001DAC  6ECC               	movwf	4044,c	;volatile
  4994  001DAE  929E               	bcf	3998,1,c	;volatile
  4995  001DB0  AE0F               	btfss	OpenTimer2@config,7,c
  4996  001DB2  D002               	goto	l661
  4997  001DB4  829D               	bsf	3997,1,c	;volatile
  4998  001DB6  D001               	goto	l662
  4999  001DB8                     l661:
  5000  001DB8  929D               	bcf	3997,1,c	;volatile
  5001  001DBA                     l662:
  5002  001DBA  84CA               	bsf	4042,2,c	;volatile
  5003  001DBC  0012               	return	
  5004  001DBE                     __end_of_OpenTimer2:
  5005                           	opt stack 0
  5006                           stkptr	equ	0xFFC
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           intcon	equ	0xFF2
  5014                           postinc0	equ	0xFEE
  5015                           wreg	equ	0xFE8
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _OpenPWM2 *****************
  5019 ;; Defined at:
  5020 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2open.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  period          1    wreg     unsigned char 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  period          1   15[COMRAM] unsigned char 
  5025 ;;  ccp2mx          1   16[COMRAM] unsigned char 
  5026 ;;  pmmode          1    0        unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;		None               void
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;Total ram usage:        3 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    1
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_initialization
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text49
  5051  001B0C                     __ptext49:
  5052                           	opt stack 0
  5053  001B0C                     _OpenPWM2:
  5054                           	opt stack 28
  5055                           
  5056                           ;incstack = 0
  5057                           ;OpenPWM2@period stored from wreg
  5058  001B0C  6E10               	movwf	OpenPWM2@period,c
  5059  001B0E  0E0C               	movlw	12
  5060  001B10  6EBA               	movwf	4026,c	;volatile
  5061  001B12  0E05               	movlw	5
  5062  001B14  6EF6               	movwf	tblptrl,c
  5063  001B16                     	if	1	;There is more than 1 active tblptr byte
  5064  001B16  0E00               	movlw	0
  5065  001B18  6EF7               	movwf	tblptrh,c
  5066  001B1A                     	endif
  5067  001B1A                     	if	1	;There are 3 active tblptr bytes
  5068  001B1A  0E30               	movlw	48
  5069  001B1C  6EF8               	movwf	tblptru,c
  5070  001B1E                     	endif
  5071  001B1E  0008               	tblrd		*
  5072  001B20  CFF5 F00F          	movff	tablat,??_OpenPWM2
  5073  001B24  A00F               	btfss	??_OpenPWM2,0,c
  5074  001B26  D002               	goto	l1774
  5075  001B28  6811               	setf	OpenPWM2@ccp2mx,c
  5076  001B2A  D002               	goto	l609
  5077  001B2C                     l1774:
  5078  001B2C  0E00               	movlw	0
  5079  001B2E  6E11               	movwf	OpenPWM2@ccp2mx,c
  5080  001B30                     l609:
  5081  001B30  5011               	movf	OpenPWM2@ccp2mx,w,c
  5082  001B32  B4D8               	btfsc	status,2,c
  5083  001B34  D002               	goto	l610
  5084  001B36  9294               	bcf	3988,1,c	;volatile
  5085  001B38  D001               	goto	l611
  5086  001B3A                     l610:
  5087  001B3A  9693               	bcf	3987,3,c	;volatile
  5088  001B3C                     l611:
  5089  001B3C  94CA               	bcf	4042,2,c	;volatile
  5090  001B3E  C010  FFCB         	movff	OpenPWM2@period,4043	;volatile
  5091  001B42  84CA               	bsf	4042,2,c	;volatile
  5092  001B44  0012               	return	
  5093  001B46                     __end_of_OpenPWM2:
  5094                           	opt stack 0
  5095                           stkptr	equ	0xFFC
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           postinc0	equ	0xFEE
  5104                           wreg	equ	0xFE8
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _OpenPWM1 *****************
  5108 ;; Defined at:
  5109 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1open.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  period          1    wreg     unsigned char 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  period          1   14[COMRAM] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;Total ram usage:        1 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_initialization
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text50
  5138  001E62                     __ptext50:
  5139                           	opt stack 0
  5140  001E62                     _OpenPWM1:
  5141                           	opt stack 28
  5142                           
  5143                           ;incstack = 0
  5144                           ;OpenPWM1@period stored from wreg
  5145  001E62  6E0F               	movwf	OpenPWM1@period,c
  5146  001E64  0E0C               	movlw	12
  5147  001E66  12BD               	iorwf	4029,f,c	;volatile
  5148  001E68  9494               	bcf	3988,2,c	;volatile
  5149  001E6A  94CA               	bcf	4042,2,c	;volatile
  5150  001E6C  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  5151  001E70  84CA               	bsf	4042,2,c	;volatile
  5152  001E72  0012               	return	
  5153  001E74                     __end_of_OpenPWM1:
  5154                           	opt stack 0
  5155                           stkptr	equ	0xFFC
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           prodh	equ	0xFF4
  5161                           prodl	equ	0xFF3
  5162                           intcon	equ	0xFF2
  5163                           postinc0	equ	0xFEE
  5164                           wreg	equ	0xFE8
  5165                           status	equ	0xFD8
  5166                           
  5167 ;; *************** function _OpenADC *****************
  5168 ;; Defined at:
  5169 ;;		line 68 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  config          1    wreg     unsigned char 
  5172 ;;  config2         1   14[COMRAM] unsigned char 
  5173 ;;  portconfig      1   15[COMRAM] unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  config          1   18[COMRAM] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;		None               void
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;Total ram usage:        5 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    1
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_initialization
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text51
  5200  001956                     __ptext51:
  5201                           	opt stack 0
  5202  001956                     _OpenADC:
  5203                           	opt stack 28
  5204                           
  5205                           ;incstack = 0
  5206                           ;OpenADC@config stored from wreg
  5207  001956  6E13               	movwf	OpenADC@config,c
  5208  001958  0E00               	movlw	0
  5209  00195A  6EC2               	movwf	4034,c	;volatile
  5210  00195C  0E00               	movlw	0
  5211  00195E  6EC0               	movwf	4032,c	;volatile
  5212  001960  90D8               	bcf	status,0,c
  5213  001962  300F               	rrcf	OpenADC@config2,w,c
  5214  001964  0B3C               	andlw	60
  5215  001966  6EC2               	movwf	4034,c	;volatile
  5216  001968  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  5217  00196C  3A11               	swapf	??_OpenADC,f,c
  5218  00196E  0EF0               	movlw	240
  5219  001970  1611               	andwf	??_OpenADC,f,c
  5220  001972  0E30               	movlw	48
  5221  001974  1611               	andwf	??_OpenADC,f,c
  5222  001976  5010               	movf	OpenADC@portconfig,w,c
  5223  001978  0B0F               	andlw	15
  5224  00197A  1011               	iorwf	??_OpenADC,w,c
  5225  00197C  6EC1               	movwf	4033,c	;volatile
  5226  00197E  C013  F011         	movff	OpenADC@config,??_OpenADC
  5227  001982  90D8               	bcf	status,0,c
  5228  001984  3611               	rlcf	??_OpenADC,f,c
  5229  001986  90D8               	bcf	status,0,c
  5230  001988  3611               	rlcf	??_OpenADC,f,c
  5231  00198A  0E38               	movlw	56
  5232  00198C  1611               	andwf	??_OpenADC,f,c
  5233  00198E  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  5234  001992  3A12               	swapf	??_OpenADC+1,f,c
  5235  001994  0E0F               	movlw	15
  5236  001996  1612               	andwf	??_OpenADC+1,f,c
  5237  001998  0E07               	movlw	7
  5238  00199A  1612               	andwf	??_OpenADC+1,f,c
  5239  00199C  5013               	movf	OpenADC@config,w,c
  5240  00199E  0B80               	andlw	128
  5241  0019A0  1012               	iorwf	??_OpenADC+1,w,c
  5242  0019A2  1011               	iorwf	??_OpenADC,w,c
  5243  0019A4  6EC0               	movwf	4032,c	;volatile
  5244  0019A6  AE0F               	btfss	OpenADC@config2,7,c
  5245  0019A8  D003               	goto	l561
  5246  0019AA  9C9E               	bcf	3998,6,c	;volatile
  5247  0019AC  8C9D               	bsf	3997,6,c	;volatile
  5248  0019AE  8CF2               	bsf	intcon,6,c	;volatile
  5249  0019B0                     l561:
  5250  0019B0  80C2               	bsf	4034,0,c	;volatile
  5251  0019B2  0012               	return	
  5252  0019B4                     __end_of_OpenADC:
  5253                           	opt stack 0
  5254                           stkptr	equ	0xFFC
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function _OpenTimer0 *****************
  5267 ;; Defined at:
  5268 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0open.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  config          1    wreg     unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  config          1   14[COMRAM] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;Total ram usage:        1 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    1
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_main
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text52
  5297  001D0C                     __ptext52:
  5298                           	opt stack 0
  5299  001D0C                     _OpenTimer0:
  5300                           	opt stack 29
  5301                           
  5302                           ;incstack = 0
  5303                           ;OpenTimer0@config stored from wreg
  5304  001D0C  6E0F               	movwf	OpenTimer0@config,c
  5305  001D0E  500F               	movf	OpenTimer0@config,w,c
  5306  001D10  0B7F               	andlw	127
  5307  001D12  6ED5               	movwf	4053,c	;volatile
  5308  001D14  0E00               	movlw	0
  5309  001D16  6ED7               	movwf	4055,c	;volatile
  5310  001D18  0E00               	movlw	0
  5311  001D1A  6ED6               	movwf	4054,c	;volatile
  5312  001D1C  94F2               	bcf	intcon,2,c	;volatile
  5313  001D1E  AE0F               	btfss	OpenTimer0@config,7,c
  5314  001D20  D002               	goto	l632
  5315  001D22  8AF2               	bsf	intcon,5,c	;volatile
  5316  001D24  D001               	goto	l633
  5317  001D26                     l632:
  5318  001D26  9AF2               	bcf	intcon,5,c	;volatile
  5319  001D28                     l633:
  5320  001D28  8ED5               	bsf	4053,7,c	;volatile
  5321  001D2A  0012               	return	
  5322  001D2C                     __end_of_OpenTimer0:
  5323                           	opt stack 0
  5324                           stkptr	equ	0xFFC
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon	equ	0xFF2
  5332                           postinc0	equ	0xFEE
  5333                           wreg	equ	0xFE8
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function _LVtrap *****************
  5337 ;; Defined at:
  5338 ;;		line 447 in file "../sumovore.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;		None               void
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    3
  5359 ;; This function calls:
  5360 ;;		_gtrap
  5361 ;;		_openPORTD
  5362 ;;		_printf
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text53
  5369  001D2C                     __ptext53:
  5370                           	opt stack 0
  5371  001D2C                     _LVtrap:
  5372                           	opt stack 27
  5373                           
  5374                           ;sumovore.c: 449: printf("\\<LVD>");
  5375                           
  5376                           ;incstack = 0
  5377  001D2C  0E10               	movlw	high STR_7
  5378  001D2E  6E11               	movwf	printf@f+1,c
  5379  001D30  0E6B               	movlw	low STR_7
  5380  001D32  6E10               	movwf	printf@f,c
  5381  001D34  ECA3  F00D         	call	_printf	;wreg free
  5382                           
  5383                           ;sumovore.c: 450: openPORTD();
  5384  001D38  EC78  F00F         	call	_openPORTD	;wreg free
  5385                           
  5386                           ;sumovore.c: 451: PORTDbits.RD0=!1;
  5387  001D3C  9083               	bcf	3971,0,c	;volatile
  5388                           
  5389                           ;sumovore.c: 452: PORTDbits.RD1=!0;
  5390  001D3E  8283               	bsf	3971,1,c	;volatile
  5391                           
  5392                           ;sumovore.c: 453: PORTDbits.RD2=!0;
  5393  001D40  8483               	bsf	3971,2,c	;volatile
  5394                           
  5395                           ;sumovore.c: 454: PORTDbits.RD3=!1;
  5396  001D42  9683               	bcf	3971,3,c	;volatile
  5397                           
  5398                           ;sumovore.c: 455: PORTDbits.RD4=!0;
  5399  001D44  8883               	bsf	3971,4,c	;volatile
  5400                           
  5401                           ;sumovore.c: 456: gtrap();
  5402  001D46  ECDA  F00C         	call	_gtrap	;wreg free
  5403  001D4A  0012               	return	
  5404  001D4C                     __end_of_LVtrap:
  5405                           	opt stack 0
  5406                           stkptr	equ	0xFFC
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           postinc0	equ	0xFEE
  5415                           wreg	equ	0xFE8
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _printf *****************
  5419 ;; Defined at:
  5420 ;;		line 464 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  f               2   15[COMRAM] PTR const unsigned char 
  5423 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  5424 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  _val            5    0        struct .
  5427 ;;  ap              2   17[COMRAM] PTR void [1]
  5428 ;;		 -> ?_printf(2), 
  5429 ;;  c               1   19[COMRAM] char 
  5430 ;;  flag            1    0        unsigned char 
  5431 ;;  prec            1    0        char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  2   15[COMRAM] int 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;Total ram usage:        5 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    2
  5448 ;; This function calls:
  5449 ;;		_putch
  5450 ;; This function is called by:
  5451 ;;		_main
  5452 ;;		_PORtask
  5453 ;;		_BORtask
  5454 ;;		_WDTtask
  5455 ;;		_STKFULtask
  5456 ;;		_RESETtask
  5457 ;;		_LVtrap
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text54
  5462  001B46                     __ptext54:
  5463                           	opt stack 0
  5464  001B46                     _printf:
  5465                           	opt stack 28
  5466                           
  5467                           ;doprnt.c: 466: va_list ap;
  5468                           ;doprnt.c: 499: signed char c;
  5469                           ;doprnt.c: 506: signed char prec;
  5470                           ;doprnt.c: 508: unsigned char flag;
  5471                           ;doprnt.c: 527: union {
  5472                           ;doprnt.c: 528: unsigned int _val;
  5473                           ;doprnt.c: 529: struct {
  5474                           ;doprnt.c: 530: const char * _cp;
  5475                           ;doprnt.c: 531: unsigned _len;
  5476                           ;doprnt.c: 532: } _str;
  5477                           ;doprnt.c: 533: } _val;
  5478                           ;doprnt.c: 542: *ap = __va_start();
  5479                           
  5480                           ;incstack = 0
  5481  001B46  0E00               	movlw	high (?_printf+2)
  5482  001B48  6E13               	movwf	printf@ap+1,c
  5483  001B4A  0E12               	movlw	low (?_printf+2)
  5484  001B4C  6E12               	movwf	printf@ap,c
  5485                           
  5486                           ;doprnt.c: 545: while(c = *f++) {
  5487  001B4E  D003               	goto	l1378
  5488  001B50                     l1376:
  5489                           
  5490                           ;doprnt.c: 549: {
  5491                           ;doprnt.c: 550: (putch(c) );
  5492  001B50  5014               	movf	printf@c,w,c
  5493  001B52  EC54  F00F         	call	_putch
  5494  001B56                     l1378:
  5495  001B56  C010  FFF6         	movff	printf@f,tblptrl
  5496  001B5A  C011  FFF7         	movff	printf@f+1,tblptrh
  5497  001B5E  4A10               	infsnz	printf@f,f,c
  5498  001B60  2A11               	incf	printf@f+1,f,c
  5499  001B62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5500  001B62  6AF8               	clrf	tblptru,c
  5501  001B64                     	endif
  5502  001B64                     	if	0	;tblptru may be non-zero
  5503  001B64                     	endif
  5504  001B64  0008               	tblrd		*
  5505  001B66  CFF5 F014          	movff	tablat,printf@c
  5506  001B6A  6614               	tstfsz	printf@c& (0+255),c
  5507  001B6C  D7F1               	goto	l1376
  5508                           
  5509                           ;doprnt.c: 1478: }
  5510                           ;doprnt.c: 1542: }
  5511                           ;doprnt.c: 1549: return 0;
  5512                           ;	Return value of _printf is never used
  5513  001B6E  0012               	return	
  5514  001B70                     __end_of_printf:
  5515                           	opt stack 0
  5516                           stkptr	equ	0xFFC
  5517                           tblptru	equ	0xFF8
  5518                           tblptrh	equ	0xFF7
  5519                           tblptrl	equ	0xFF6
  5520                           tablat	equ	0xFF5
  5521                           prodh	equ	0xFF4
  5522                           prodl	equ	0xFF3
  5523                           intcon	equ	0xFF2
  5524                           postinc0	equ	0xFEE
  5525                           wreg	equ	0xFE8
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _putch *****************
  5529 ;; Defined at:
  5530 ;;		line 51 in file "../../Common/configureUSART.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  data            1    wreg     unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  data            1   14[COMRAM] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;		None               void
  5537 ;; Registers used:
  5538 ;;		wreg
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		Nothing
  5553 ;; This function is called by:
  5554 ;;		_printf
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text55
  5559  001EA8                     __ptext55:
  5560                           	opt stack 0
  5561  001EA8                     _putch:
  5562                           	opt stack 28
  5563                           
  5564                           ;incstack = 0
  5565                           ;putch@data stored from wreg
  5566  001EA8  6E0F               	movwf	putch@data,c
  5567  001EAA                     l521:
  5568  001EAA  A89E               	btfss	3998,4,c	;volatile
  5569  001EAC  D7FE               	goto	l521
  5570                           
  5571                           ;configureUSART.c: 54: TXREG = data;
  5572  001EAE  C00F  FFAD         	movff	putch@data,4013	;volatile
  5573  001EB2  0012               	return	
  5574  001EB4                     __end_of_putch:
  5575                           	opt stack 0
  5576                           stkptr	equ	0xFFC
  5577                           tblptru	equ	0xFF8
  5578                           tblptrh	equ	0xFF7
  5579                           tblptrl	equ	0xFF6
  5580                           tablat	equ	0xFF5
  5581                           prodh	equ	0xFF4
  5582                           prodl	equ	0xFF3
  5583                           intcon	equ	0xFF2
  5584                           postinc0	equ	0xFEE
  5585                           wreg	equ	0xFE8
  5586                           status	equ	0xFD8
  5587                           
  5588 ;; *************** function _openPORTD *****************
  5589 ;; Defined at:
  5590 ;;		line 167 in file "../sumovore.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg, status,2
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;Total ram usage:        0 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_initialization
  5615 ;;		_LVtrap
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text56
  5620  001EF0                     __ptext56:
  5621                           	opt stack 0
  5622  001EF0                     _openPORTD:
  5623                           	opt stack 28
  5624                           
  5625                           ;sumovore.c: 169: TRISD = 0b01100000;
  5626                           
  5627                           ;incstack = 0
  5628  001EF0  0E60               	movlw	96
  5629  001EF2  6E95               	movwf	3989,c	;volatile
  5630  001EF4  0012               	return	
  5631  001EF6                     __end_of_openPORTD:
  5632                           	opt stack 0
  5633                           stkptr	equ	0xFFC
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           prodh	equ	0xFF4
  5639                           prodl	equ	0xFF3
  5640                           intcon	equ	0xFF2
  5641                           postinc0	equ	0xFEE
  5642                           wreg	equ	0xFE8
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _gtrap *****************
  5646 ;; Defined at:
  5647 ;;		line 462 in file "../sumovore.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  count           4   14[COMRAM] unsigned long 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;		None               void
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:        4 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_BORtask
  5672 ;;		_WDTtask
  5673 ;;		_STKFULtask
  5674 ;;		_RESETtask
  5675 ;;		_LVtrap
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text57
  5680  0019B4                     __ptext57:
  5681                           	opt stack 0
  5682  0019B4                     _gtrap:
  5683                           	opt stack 26
  5684                           
  5685                           ;sumovore.c: 464: unsigned long count=0;
  5686                           
  5687                           ;incstack = 0
  5688  0019B4  0E00               	movlw	0
  5689  0019B6  6E0F               	movwf	gtrap@count,c
  5690  0019B8  0E00               	movlw	0
  5691  0019BA  6E10               	movwf	gtrap@count+1,c
  5692  0019BC  0E00               	movlw	0
  5693  0019BE  6E11               	movwf	gtrap@count+2,c
  5694  0019C0  0E00               	movlw	0
  5695  0019C2  6E12               	movwf	gtrap@count+3,c
  5696  0019C4                     l239:
  5697  0019C4  0004               	clrwdt		;# 
  5698                           
  5699                           ;sumovore.c: 469: if (count==30000u)
  5700  0019C6  5010               	movf	gtrap@count+1,w,c
  5701  0019C8  0A75               	xorlw	117
  5702  0019CA  0E30               	movlw	48
  5703  0019CC  B4D8               	btfsc	status,2,c
  5704  0019CE  180F               	xorwf	gtrap@count,w,c
  5705  0019D0  1011               	iorwf	gtrap@count+2,w,c
  5706  0019D2  1012               	iorwf	gtrap@count+3,w,c
  5707  0019D4  A4D8               	btfss	status,2,c
  5708  0019D6  D00B               	goto	l1402
  5709                           
  5710                           ;sumovore.c: 470: {
  5711                           ;sumovore.c: 471: count=0;
  5712  0019D8  0E00               	movlw	0
  5713  0019DA  6E0F               	movwf	gtrap@count,c
  5714  0019DC  0E00               	movlw	0
  5715  0019DE  6E10               	movwf	gtrap@count+1,c
  5716  0019E0  0E00               	movlw	0
  5717  0019E2  6E11               	movwf	gtrap@count+2,c
  5718  0019E4  0E00               	movlw	0
  5719  0019E6  6E12               	movwf	gtrap@count+3,c
  5720                           
  5721                           ;sumovore.c: 472: PORTDbits.RD0=!1;
  5722  0019E8  9083               	bcf	3971,0,c	;volatile
  5723                           
  5724                           ;sumovore.c: 473: PORTDbits.RD1=!0;
  5725  0019EA  8283               	bsf	3971,1,c	;volatile
  5726                           
  5727                           ;sumovore.c: 474: }
  5728  0019EC  D00B               	goto	l1406
  5729  0019EE                     l1402:
  5730                           
  5731                           ;sumovore.c: 475: else if (count==15000u)
  5732  0019EE  5010               	movf	gtrap@count+1,w,c
  5733  0019F0  0A3A               	xorlw	58
  5734  0019F2  0E98               	movlw	152
  5735  0019F4  B4D8               	btfsc	status,2,c
  5736  0019F6  180F               	xorwf	gtrap@count,w,c
  5737  0019F8  1011               	iorwf	gtrap@count+2,w,c
  5738  0019FA  1012               	iorwf	gtrap@count+3,w,c
  5739  0019FC  A4D8               	btfss	status,2,c
  5740  0019FE  D002               	goto	l1406
  5741                           
  5742                           ;sumovore.c: 476: {
  5743                           ;sumovore.c: 477: PORTDbits.RD0=!0;
  5744  001A00  8083               	bsf	3971,0,c	;volatile
  5745                           
  5746                           ;sumovore.c: 478: PORTDbits.RD1=!1;
  5747  001A02  9283               	bcf	3971,1,c	;volatile
  5748  001A04                     l1406:
  5749                           
  5750                           ;sumovore.c: 479: }
  5751                           ;sumovore.c: 480: count++;
  5752  001A04  0E01               	movlw	1
  5753  001A06  260F               	addwf	gtrap@count,f,c
  5754  001A08  0E00               	movlw	0
  5755  001A0A  2210               	addwfc	gtrap@count+1,f,c
  5756  001A0C  2211               	addwfc	gtrap@count+2,f,c
  5757  001A0E  2212               	addwfc	gtrap@count+3,f,c
  5758  001A10  D7D9               	goto	l239
  5759  001A12                     __end_of_gtrap:
  5760                           	opt stack 0
  5761                           stkptr	equ	0xFFC
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           intcon	equ	0xFF2
  5769                           postinc0	equ	0xFEE
  5770                           wreg	equ	0xFE8
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function _high_isr *****************
  5774 ;; Defined at:
  5775 ;;		line 24 in file "../interrupts.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;		None               void
  5782 ;; Registers used:
  5783 ;;		wreg, status,2
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;Total ram usage:       14 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		Interrupt level 2
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	intcode
  5803  000008                     __pintcode:
  5804                           	opt stack 0
  5805  000008                     _high_isr:
  5806                           	opt stack 24
  5807                           
  5808                           ;incstack = 0
  5809  000008  CFFA F001          	movff	pclath,??_high_isr
  5810  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5811  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5812  000014  ED09  F00C         	call	int_func,f	;refresh shadow registers
  5813                           stkptr	equ	0xFFC
  5814                           pclatu	equ	0xFFB
  5815                           pclath	equ	0xFFA
  5816                           tblptru	equ	0xFF8
  5817                           tblptrh	equ	0xFF7
  5818                           tblptrl	equ	0xFF6
  5819                           tablat	equ	0xFF5
  5820                           prodh	equ	0xFF4
  5821                           prodl	equ	0xFF3
  5822                           intcon	equ	0xFF2
  5823                           postinc0	equ	0xFEE
  5824                           fsr0l	equ	0xFE9
  5825                           wreg	equ	0xFE8
  5826                           status	equ	0xFD8
  5827                           
  5828                           	psect	intcode_body
  5829  001812                     __pintcode_body:
  5830                           	opt stack 24
  5831  001812                     int_func:
  5832                           	opt stack 24
  5833  001812  0006               	pop		; remove dummy address from shadow register refresh
  5834  001814  CFEA F004          	movff	fsr0h,??_high_isr+3
  5835  001818  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5836  00181C  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5837  001820  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5838  001824  CFDA F008          	movff	fsr2h,??_high_isr+7
  5839  001828  CFF3 F009          	movff	prodl,??_high_isr+8
  5840  00182C  CFF4 F00A          	movff	prodh,??_high_isr+9
  5841  001830  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5842  001834  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  5843  001838  CFF8 F00D          	movff	tblptru,??_high_isr+12
  5844  00183C  CFF5 F00E          	movff	tablat,??_high_isr+13
  5845                           
  5846                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  5847  001840  94A1               	bcf	4001,2,c	;volatile
  5848                           
  5849                           ;interrupts.c: 27: TRISA = 0xff;
  5850  001842  6892               	setf	3986,c	;volatile
  5851                           
  5852                           ;interrupts.c: 28: TRISB = 0xff;
  5853  001844  6893               	setf	3987,c	;volatile
  5854                           
  5855                           ;interrupts.c: 29: TRISC = 0xff;
  5856  001846  6894               	setf	3988,c	;volatile
  5857                           
  5858                           ;interrupts.c: 30: TRISD = 0xff;
  5859  001848  6895               	setf	3989,c	;volatile
  5860                           
  5861                           ;interrupts.c: 31: TRISE = 0x03;
  5862  00184A  0E03               	movlw	3
  5863  00184C  6E96               	movwf	3990,c	;volatile
  5864                           
  5865                           ;interrupts.c: 32: lvd_flag =1;
  5866  00184E  0E01               	movlw	1
  5867  001850  6E2B               	movwf	_lvd_flag,c
  5868                           
  5869                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  5870  001852  94A0               	bcf	4000,2,c	;volatile
  5871                           
  5872                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  5873  001854  98D2               	bcf	4050,4,c	;volatile
  5874  001856  C00E  FFF5         	movff	??_high_isr+13,tablat
  5875  00185A  C00D  FFF8         	movff	??_high_isr+12,tblptru
  5876  00185E  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  5877  001862  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  5878  001866  C00A  FFF4         	movff	??_high_isr+9,prodh
  5879  00186A  C009  FFF3         	movff	??_high_isr+8,prodl
  5880  00186E  C008  FFDA         	movff	??_high_isr+7,fsr2h
  5881  001872  C007  FFD9         	movff	??_high_isr+6,fsr2l
  5882  001876  C006  FFE2         	movff	??_high_isr+5,fsr1h
  5883  00187A  C005  FFE1         	movff	??_high_isr+4,fsr1l
  5884  00187E  C004  FFEA         	movff	??_high_isr+3,fsr0h
  5885  001882  C003  FFE9         	movff	??_high_isr+2,fsr0l
  5886  001886  C002  FFFB         	movff	??_high_isr+1,pclatu
  5887  00188A  C001  FFFA         	movff	??_high_isr,pclath
  5888  00188E  0011               	retfie		f
  5889  001890                     __end_of_high_isr:
  5890                           	opt stack 0
  5891                           stkptr	equ	0xFFC
  5892                           pclatu	equ	0xFFB
  5893                           pclath	equ	0xFFA
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodh	equ	0xFF4
  5899                           prodl	equ	0xFF3
  5900                           intcon	equ	0xFF2
  5901                           postinc0	equ	0xFEE
  5902                           fsr0h	equ	0xFEA
  5903                           fsr0l	equ	0xFE9
  5904                           wreg	equ	0xFE8
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           stkptr	equ	0xFFC
  5911                           pclatu	equ	0xFFB
  5912                           pclath	equ	0xFFA
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodh	equ	0xFF4
  5918                           prodl	equ	0xFF3
  5919                           intcon	equ	0xFF2
  5920                           postinc0	equ	0xFEE
  5921                           fsr0h	equ	0xFEA
  5922                           fsr0l	equ	0xFE9
  5923                           wreg	equ	0xFE8
  5924                           fsr1h	equ	0xFE2
  5925                           fsr1l	equ	0xFE1
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930                           	psect	rparam
  5931  0000                     stkptr	equ	0xFFC
  5932                           pclatu	equ	0xFFB
  5933                           pclath	equ	0xFFA
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           postinc0	equ	0xFEE
  5942                           fsr0h	equ	0xFEA
  5943                           fsr0l	equ	0xFE9
  5944                           wreg	equ	0xFE8
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           fsr2h	equ	0xFDA
  5948                           fsr2l	equ	0xFD9
  5949                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    14
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      43
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1443$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _motor_control->_set_directive
    _start_tmr->_WriteTimer0
    _check_state->_check_sensors
    _check_sensors->_adc
    _adc->_ReadADC
    _adc->_SetChanADC
    _change_track->_set_directive
    _turn_right->_set_motor_speed
    _turn_left->_set_motor_speed
    _straight_fwd->_set_motor_speed
    _spin_right->_set_motor_speed
    _spin_left->_set_motor_speed
    _pirouette_right->_set_motor_speed
    _pirouette_left->_set_motor_speed
    _full_stp->_set_motor_speed
    _set_motor_speed->_SetDCPWM1
    _set_motor_speed->_SetDCPWM2
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _LVtrap->_printf
    _printf->_putch

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45407
                             _LVtrap
                         _OpenTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                      _motor_control
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _motor_control                                        0     0      0   41260
                         _ReadTimer0
                       _change_track
                        _check_state
                            _clr_tmr
                           _full_stp
                      _set_directive
                          _start_tmr
 ---------------------------------------------------------------------------------
 (2) _start_tmr                                            0     0      0      98
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (3) _WriteTimer0                                          4     2      2      98
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clr_tmr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_state                                          0     0      0      30
                      _check_sensors
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_sensors                                        1     1      0      30
                                             19 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (4) _adc                                                  3     1      2      30
                                             16 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _change_track                                         0     0      0   19424
                            _clr_mem
                      _set_directive
 ---------------------------------------------------------------------------------
 (2) _set_directive                                        2     0      2   19424
                                             29 COMRAM     2     0      2
                           _full_stp
                     _pirouette_left
                    _pirouette_right
                          _spin_left
                         _spin_right
                       _straight_fwd
                          _turn_left
                         _turn_right
 ---------------------------------------------------------------------------------
 (3) _turn_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _turn_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _straight_fwd                                         0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_right                                      0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_left                                       0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _full_stp                                             0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (4) _set_motor_speed                                      9     6      3    2254
                                             20 COMRAM     9     6      3
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (3) _clr_mem                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      30
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3225
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2245
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     461
                                             20 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     446
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM2                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM1                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     256
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      30
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     211
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     446
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12    10      2     416
                                             15 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _motor_control
     _ReadTimer0
     _change_track
       _clr_mem
       _set_directive
         _full_stp
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _straight_fwd
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
     _check_state
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _set_leds
     _clr_tmr
     _full_stp
       _set_motor_speed
         _SetDCPWM1
         _SetDCPWM2
     _set_directive
       _full_stp
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _straight_fwd
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
     _start_tmr
       _WriteTimer0
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      2B       1       33.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      34        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Apr  4 19:49:35 2018

                         _STKPTRbits 000FFC                                   u15 1ADC  
                                 u25 1AA2                                   u70 14AC  
                                 u90 14D8                                   u76 14AE  
                                 u96 14DA                          __CFG_BORV$0 000000  
                   ??_pirouette_left 001E                                  l212 16EE  
                                l213 1696                                  l205 1A88  
                                l303 1658                                  l209 1A96  
                                l410 141C                                  l323 193C  
                                l316 190E                                  l181 14CE  
                                l326 194C                                  l239 19C4  
                                l319 191E                                  l521 1EAA  
                                l329 1954                                  l610 1B3A  
                                l178 14A2                                  l611 1B3C  
                                l446 1B96                                  l703 1E80  
                                l632 1D26                                  l712 1E2A  
                                l633 1D28                                  l561 19B0  
                                l609 1B30                                  l721 1E16  
                                l539 1EA6                                  l661 1DB8  
                                l662 1DBA                                  l398 134A  
                                l691 18C6                                  l692 18C8  
                                l693 18D2                                  l694 18D4  
                                l687 18B2                                  l696 18F6  
                                u100 1EA4                                  u200 159C  
                                u210 179C                                  u220 17B2  
                                u206 159E                                  u230 17CA  
                                u160 14FE                                  u240 17E4  
                                u216 179E                                  u170 1524  
                                u250 1800                                  u226 17B4  
                                u180 154E                                  u236 17CC  
                                u190 1576                                  u166 1500  
                                u246 17E6                                  _PR2 000FCB  
                                u176 1526                                  u256 1802  
                                u186 1550                                  u196 1578  
               __size_of_WriteTimer0 0012                                  _adc 1CC8  
               __end_of_change_track 1956                                  wreg 000FE8  
                  ??_pirouette_right 001E                      ReadTimer0@timer 0011  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               ?_adc 0011                                 l2000 12B0  
                               l2022 131E                                 l2006 12CE  
                               l2040 1382                                 l2024 1326  
                               l2008 12D2                                 l1402 19EE  
                               l2050 13A8                                 l2042 1386  
                               l2034 1364                                 l2018 1308  
                               l1500 1E7E                                 l1340 148A  
                               l2052 13AC                                 l1406 1A04  
                               l1350 14BA                                 l1336 1472  
                               l1600 15C0                                 l2048 13A4  
                               l2056 13B2                                 l1452 1E28  
                               l1356 14D0                                 l1348 14A4  
                               l1612 15EA                                 l1630 162C  
                               l1606 15D4                                 l2086 1A3A  
                               l1376 1B50                                 l1544 1E14  
                               l1624 1616                                 l1384 1CD4  
                               l1378 1B56                                 l1482 16CC  
                               l1714 1A68                                 l1618 1600  
                               l1802 1926                                 l1724 1A92  
                               l1636 1642                                 l1486 16E2  
                               l1718 1A78                                 l1902 110A  
                               l1912 1138                                 l1930 118A  
                               l1922 1162                                 l1676 18B4  
                               l1668 18A6                                 l1924 116A  
                               l1908 112A                                 l1774 1B2C  
                               l1942 11BC                                 l1934 1194  
                               l1918 1158                                 l1960 11FA  
                               l1936 119C                                 l1954 11E8  
                               l1882 10A2                                 l1972 1226  
                               l1948 11C8                                 l1966 121A  
                               l1894 10DA                                 l1886 10BA  
                               l1992 1282                                 l1984 1252  
                               l1978 1246                                 l1898 10F2  
                               l1996 129A                                 l1988 126A  
                    __end_of_BORtask 1D0C                                 STR_1 100F  
                               STR_2 1078                                 STR_3 1072  
                               STR_4 1062                                 STR_5 1059  
                               STR_6 104F                                 STR_7 106B  
                               _TMR2 000FCC                         __CFG_WDTPS$8 000000  
                               _TXIF 007CF4                     ??_initialization 001D  
                               _main 1A12                __end_of_check_sensors 15AC  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               pclat 000FFA                        __CFG_BOREN$ON 000000  
                    __end_of_PORtask 1704                                 prodh 000FF4  
                               prodl 000FF3                __size_of_straight_fwd 0026  
                               start 0018                      __end_of_WDTtask 1D86  
                    __end_of_BusyADC 1EA8                      __end_of_ReadADC 1EC8  
                    __end_of_OpenADC 19B4                                ??_adc 0013  
                              ?_main 0001                                _T0CON 000FD5  
                              _T2CON 000FCA                   __size_of_RESETtask 001C  
                              _RCSTA 000FAB                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _SPBRG 000FAF  
                              _PORTD 000F83                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                    _set_motor_speed 141E                                _TXREG 000FAD  
                              _TXSTA 000FAC                      __end_of_isWDTTO 1E18  
            __end_of_openPORTCforPWM 1E90                      __end_of_clr_mem 1ED2  
                    __end_of_clr_tmr 1E9C                                _isBOR 1E74  
                              _isPOR 1E18                                _gtrap 19B4  
               __size_of_check_state 000A                         _straight_fwd 1BE4  
                              _putch 1EA8                      __end_of_openLVD 1DEE  
                         _ConvertADC 1EF6                                tablat 000FF5  
         __size_of_openPORTCforUSART 0006                                status 000FD8  
                        ?_STKFULtask 0001                       __CFG_MCLRE$OFF 000000  
                    __initialization 1E2C                         __end_of_main 1A58  
                         _ReadTimer0 1E50                     __end_of_OpenPWM1 1E74  
                   __end_of_OpenPWM2 1B46                               ??_main 0020  
                      __activetblptr 000003                           _SetChanADC 1DEE  
                          ??_BORtask 0015                               ?_isBOR 0001  
                             ?_isPOR 0001                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_gtrap 0001                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                               ?_putch 0001  
                          ??_PORtask 0015                            ??_WDTtask 0015  
                         _OpenTimer0 1D0C                           _OpenTimer2 1DA2  
                             _TMR0IF 007F92                               _SPBRGH 000FB0  
                 __size_of_SetDCPWM1 003A                   __size_of_SetDCPWM2 003A  
                          ??_BusyADC 000F                            ??_ReadADC 0011  
                             _LVtrap 1D2C                    __end_of_RESETtask 1DA2  
                          ??_OpenADC 0011                         ?_reset_codes 0001  
                   __end_of_high_isr 1890                   __size_of_OpenUSART 0068  
                     __CFG_STVREN$ON 000000                     OpenTimer0@config 000F  
            __end_of_set_motor_speed 14E8                     OpenTimer2@config 000F  
                             _memory 0020                               clear_0 1E32  
                   __end_of_full_stp 1CC8                __size_of_change_track 005E  
                          ??_isWDTTO 000F                               _printf 1B46  
                          ??_clr_mem 000F                            ??_clr_tmr 000F  
                   __end_of_set_leds 1812                            ??_openLVD 000F  
                __size_of_STKFULtask 001E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     ?_openPORTCforPWM 0001  
              __end_of_set_directive 165A                          ?_ConvertADC 0001  
                         __accesstop 0080              __end_of__initialization 1E38  
        set_motor_speed@dir_modifier 001B                           adc@channel 0013  
                       _change_track 18F8                __end_of_set_osc_32MHz 1B98  
                     __pcstackCOMRAM 0001                          ?_ReadTimer0 000F  
                      __end_of_isBOR 1E82                        __end_of_isPOR 1E2C  
                    _pirouette_right 1C56                        __end_of_gtrap 1A12  
                      __end_of_putch 1EB4                    __end_of_SetDCPWM1 1B0C  
                  __end_of_SetDCPWM2 1AD2                        ??_StatusReset 000F  
                        ?_SetChanADC 0001                        ?_lvd_flag_set 0001  
                            ??_isBOR 000F                              ??_isPOR 000F  
                  __end_of_OpenUSART 18F8                              ??_gtrap 000F  
                            ??_putch 000F                          ?_OpenTimer0 0001  
                        ?_OpenTimer2 0001                            ?_OpenPWM1 0001  
                          ?_OpenPWM2 0001                              ?_LVtrap 0001  
                 __size_of_openPORTA 0006                   __size_of_openPORTB 0006  
                 __size_of_openPORTD 0006                   __size_of_openPORTE 0006  
              __end_of_motor_control 141E                              _CCP1CON 000FBD  
                            _CCP2CON 000FBA                     WriteTimer0@timer 0011  
                   ?_set_motor_speed 0015                        ??_WriteTimer0 0011  
                __size_of_ConvertADC 0004                              ?_printf 0010  
                            _BORtask 1CEC                       ??_lvd_flag_set 000F  
                 __size_of_spin_left 0026           set_motor_speed@motor_speed 0015  
                          ?_high_isr 0001                  __end_of_StatusReset 1ED8  
                 __size_of_start_tmr 0018                  __size_of_ReadTimer0 0012  
                            _PORtask 165A                              _WDTtask 1D6A  
                          ?_full_stp 0001                              _BusyADC 1E9C  
                            _ReadADC 1EBE                           ??_OpenPWM1 000F  
                         ??_OpenPWM2 000F                         ??_STKFULtask 0015  
                            _SeeLine 002A                   __size_of_turn_left 0026  
            __end_of_pirouette_right 1C7C                              _OpenADC 1956  
                    __size_of_LVtrap 0020                              __Hparam 0000  
                __size_of_SetChanADC 0016                              __Lparam 0000  
                          ?_set_leds 0001                 __size_of_reset_codes 0040  
                       __psmallconst 1000                              __pcinit 1E2C  
                            _isWDTTO 1E04                              __ramtop 1000  
                __size_of_OpenTimer0 0020                  __size_of_OpenTimer2 001C  
                            __ptext0 1A12                              __ptext1 1080  
                            __ptext2 1DBE                              __ptext3 1E3E  
                            __ptext4 1E90                              __ptext5 1EB4  
                            __ptext6 1794                              __ptext7 14E8  
                            __ptext8 1CC8                              __ptext9 1DEE  
                            _clr_mem 1EC8                              _clr_tmr 1E90  
                    __size_of_printf 002A                            _T0CONbits 000FD5  
                       __size_of_adc 0024                            _T2CONbits 000FCA  
             __size_of_check_sensors 00C4                        ??_check_state 0015  
                            _openLVD 1DD6                  __end_of_WriteTimer0 1E50  
                 __end_of_STKFULtask 1D6A                    __end_of_openPORTA 1EF0  
                  __end_of_openPORTB 1EEA                    __end_of_openPORTD 1EF6  
                  __end_of_openPORTE 1EDE              __size_of_pirouette_left 0026  
                     OpenADC@config2 000F                           ??_high_isr 0001  
                     __pintcode_body 1812                 end_of_initialization 1E38  
                            int_func 1812                           ??_full_stp 001E  
                         ??_set_leds 000F                           _move_state 0022  
                          _RCSTAbits 000FAB                              printf@c 0014  
                            printf@f 0010                    __end_of_spin_left 1C56  
                          _RESETtask 1D86                              postinc0 000FEE  
            __size_of_initialization 0090                    __end_of_start_tmr 1DD6  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
                          _PORTEbits 000F84                       set_osc_32MHz@i 000F  
                        _StatusReset 1ED2                    __end_of_turn_left 1BE4  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                         _spin_right 1C0A                         ??_ConvertADC 000F  
                __end_of_check_state 1EBE                            _TXSTAbits 000FAC  
                      _check_sensors 14E8                     ?_pirouette_right 0001  
                     __end_of_LVtrap 1D4C                 __end_of_lvd_flag_set 1EFE  
                       ??_ReadTimer0 0011                           ?_RESETtask 0001  
                        _BAUDCONbits 000FB8                          _WriteTimer0 1E3E  
                         _turn_right 1B98                   __end_of_ConvertADC 1EFA  
                       ??_SetChanADC 000F                       __end_of_printf 1B70  
                start_initialization 1E2C                            _SetDCPWM1 1AD2  
                          _SetDCPWM2 1A98                      SetDCPWM1@DCycle 0013  
                        __end_of_adc 1CEC                      SetDCPWM2@DCycle 0013  
                       ??_OpenTimer0 000F                         ??_OpenTimer2 000F  
                 __end_of_ReadTimer0 1E62                            _OpenUSART 1890  
           __size_of_openPORTCforPWM 000E                       ?_check_sensors 0001  
                   __CFG_OSC$INTIO67 000000                             ??_LVtrap 0015  
                 __end_of_SetChanADC 1E04                    __size_of_OpenPWM1 0012  
                  __size_of_OpenPWM2 003A               __size_of_set_directive 00AE  
                           ??_printf 0012                           gtrap@count 000F  
                 __end_of_OpenTimer0 1D2C                   __end_of_OpenTimer2 1DBE  
                        __pbssCOMRAM 0020                             ?_BORtask 0001  
                        _check_state 1EB4                           ?_SetDCPWM1 000F  
                         ?_SetDCPWM2 000F                          ?_spin_right 0001  
                      PORtask@count1 0015                        PORtask@count2 0019  
                __end_of__stringdata 107E                       _pirouette_left 1C7C  
             __size_of_set_osc_32MHz 0028                        ?_straight_fwd 0001  
           set_motor_speed@the_motor 001A                             ?_PORtask 0001  
                           ?_WDTtask 0001                           ?_OpenUSART 000F  
                  __size_of_high_isr 1888                             ?_BusyADC 0001  
                           ?_ReadADC 000F                    OpenADC@portconfig 0010  
                           ?_OpenADC 000F                    __size_of_full_stp 0026  
                          __pintcode 0008                          ??_RESETtask 0015  
                     _initialization 1704                    __size_of_set_leds 007E  
                           ?_isWDTTO 0001                          ?_turn_right 0001  
                           ?_clr_mem 0001                             ?_clr_tmr 0001  
                        __smallconst 1000                    WriteTimer0@timer0 000F  
             __end_of_pirouette_left 1CA2                             ?_openLVD 0001  
           __size_of_set_motor_speed 00CA                       ??_straight_fwd 001E  
                     __size_of_isBOR 000E                       __size_of_isPOR 0014  
                     __size_of_gtrap 005E                       __size_of_putch 000C  
             __size_of_motor_control 039E                      ??_check_sensors 0014  
                      _set_directive 15AC                            _openPORTA 1EEA  
                          _openPORTB 1EE4                            _openPORTD 1EF0  
                          _openPORTE 1ED8                        OpenADC@config 0013  
              __size_of_lvd_flag_set 0004                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
                      ??_reset_codes 001D                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1               __end_of_initialization 1794  
                           _RCONbits 000FD0                    ??_openPORTCforPWM 000F  
                      _set_osc_32MHz 1B70                  __size_of_spin_right 0026  
__end_ofset_motor_speed@motor_speeds 100F          set_motor_speed@motor_speeds 1001  
                        _HLVDCONbits 000FD2                            _threshold 0026  
                          _spin_left 1C30                           _ADCON0bits 000FC2  
                        __stringdata 100F                            _tmr_state 0028  
                          _start_tmr 1DBE                         ?_StatusReset 0001  
                    ?_pirouette_left 0001                          ??_SetDCPWM1 0011  
                        ??_SetDCPWM2 0011                     __size_of_BORtask 0020  
                       _lvd_flag_set 1EFA                            _turn_left 1BBE  
                     ?_set_directive 001E                     __size_of_PORtask 00AA  
                        ??_OpenUSART 0011                   SetDCPWM1@dutycycle 000F  
                         ?_openPORTA 0001                           ?_openPORTB 0001  
                         ?_openPORTD 0001                           ?_openPORTE 0001  
                   __size_of_WDTtask 001C                      OpenUSART@config 0014  
                __size_of_turn_right 0026                             _OpenPWM1 1E62  
                           _OpenPWM2 1B0C                     __size_of_BusyADC 000C  
                   __size_of_ReadADC 000A                             __Hrparam 0000  
                      ?_change_track 0001                     __size_of_OpenADC 005E  
                    ?_initialization 0001                             __Lrparam 0000  
                 SetDCPWM2@dutycycle 000F                       ?_set_osc_32MHz 0001  
                __end_of_reset_codes 1A98                        _motor_control 1080  
                       ?_WriteTimer0 000F                           ?_spin_left 0001  
                     OpenPWM2@ccp2mx 0011                     __size_of_isWDTTO 0014  
                         ?_start_tmr 0001                     __size_of_clr_mem 000A  
      set_motor_speed@speed_modifier 0016                     __size_of_clr_tmr 000C  
                     OpenPWM1@period 000F                       OpenPWM2@period 0010  
                   __size_of_openLVD 0018                             __ptext10 1EBE  
                           __ptext11 1EF6                             __ptext20 1C56  
                           __ptext12 1E9C                             __ptext21 1C7C  
                           __ptext13 18F8                             __ptext30 1E04  
                           __ptext22 1CA2                             __ptext14 15AC  
                           __ptext31 1E18                             __ptext23 141E  
                           __ptext15 1B98                             __ptext40 1EDE  
                           __ptext32 1E74                             __ptext24 1EC8  
                           __ptext16 1BBE                             __ptext41 1E82  
                           __ptext33 1D6A                             __ptext25 1E50  
                           __ptext17 1BE4                             __ptext50 1E62  
                           __ptext42 1EE4                             __ptext34 1D4C  
                           __ptext26 1EFA                             __ptext18 1C0A  
                           __ptext51 1956                             __ptext43 1EEA  
                           __ptext35 1D86                             __ptext27 1704  
                           __ptext19 1C30                             __ptext52 1D0C  
                           __ptext44 1DD6                             __ptext36 165A  
                           __ptext28 1B70                             __ptext53 1D2C  
                           __ptext45 1A98                             __ptext37 1CEC  
                           __ptext29 1A58                             __ptext54 1B46  
                           __ptext46 1AD2                             __ptext38 1ED2  
                           __ptext55 1EA8                             __ptext47 1890  
                           __ptext39 1ED8                             __ptext56 1EF0  
                           __ptext48 1DA2                             __ptext57 19B4  
                           __ptext49 1B0C                           ?_turn_left 0001  
                           _high_isr 0008            set_motor_speed@duty_cycle 001C  
                  ??_set_motor_speed 0018                        __size_of_main 0046  
                           _full_stp 1CA2                       ??_change_track 0020  
                           _lvd_flag 002B                             _side_mem 0024  
                           _set_leds 1794                 __end_of_straight_fwd 1C0A  
                     ?_motor_control 0001             __size_of_pirouette_right 0026  
                          putch@data 000F                          _OSCTUNEbits 000F9B  
                         _INTCONbits 000FF2                         ?_check_state 0001  
                     OpenUSART@spbrg 000F                         ??_spin_right 001E  
                    ??_set_directive 0020               set_directive@directive 001E  
                           intlevel2 0000                          ??_openPORTA 000F  
                        ??_openPORTB 000F                          ??_openPORTD 000F  
                        ??_openPORTE 000F                    _openPORTCforUSART 1EDE  
                  SetChanADC@channel 0010                      ??_set_osc_32MHz 000F  
                        _reset_codes 1A58                           _OSCCONbits 000FD3  
                 ?_openPORTCforUSART 0001                             printf@ap 0012  
                 __end_of_spin_right 1C30                  ??_openPORTCforUSART 000F  
                        ??_spin_left 001E                         ??_turn_right 001E  
                        ??_start_tmr 0013                 __size_of_StatusReset 0006  
                        ??_turn_left 001E                      _openPORTCforPWM 1E82  
          __end_of_openPORTCforUSART 1EE4                   __end_of_turn_right 1BBE  
                         _STKFULtask 1D4C                      ??_motor_control 0020  
