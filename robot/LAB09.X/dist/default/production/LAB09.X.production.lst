

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Apr  5 17:23:50 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	text56,global,reloc=2,class=CODE,delta=1
    66                           	psect	text57,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	opt stack 0
    75  001000  00                 	db	0
    76  001001                     set_motor_speed@motor_speeds:
    77                           	opt stack 0
    78  001001  FCE0               	dw	64736
    79  001003  FD2B               	dw	64811
    80  001005  FD76               	dw	64886
    81  001007  0000               	dw	0
    82  001009  028A               	dw	650
    83  00100B  02D5               	dw	725
    84  00100D  0320               	dw	800
    85  00100F                     __end_ofset_motor_speed@motor_speeds:
    86                           	opt stack 0
    87  0000                     _ADCON0	set	4034
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADRESL	set	4035
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _CCP1CON	set	4029
    95  0000                     _CCP2CON	set	4026
    96  0000                     _CCPR1L	set	4030
    97  0000                     _CCPR2L	set	4027
    98  0000                     _HLVDCONbits	set	4050
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR2bits	set	4002
   101  0000                     _OSCCONbits	set	4051
   102  0000                     _OSCTUNEbits	set	3995
   103  0000                     _PIE1bits	set	3997
   104  0000                     _PIE2bits	set	4000
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _PORTCbits	set	3970
   108  0000                     _PORTD	set	3971
   109  0000                     _PORTDbits	set	3971
   110  0000                     _PORTEbits	set	3972
   111  0000                     _PR2	set	4043
   112  0000                     _RCONbits	set	4048
   113  0000                     _RCSTA	set	4011
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _SPBRG	set	4015
   116  0000                     _SPBRGH	set	4016
   117  0000                     _STKPTRbits	set	4092
   118  0000                     _T0CON	set	4053
   119  0000                     _T0CONbits	set	4053
   120  0000                     _T2CON	set	4042
   121  0000                     _T2CONbits	set	4042
   122  0000                     _TMR0H	set	4055
   123  0000                     _TMR0L	set	4054
   124  0000                     _TMR2	set	4044
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISCbits	set	3988
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISE	set	3990
   132  0000                     _TXREG	set	4013
   133  0000                     _TXSTA	set	4012
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _TMR0IF	set	32658
   136  0000                     _TXIF	set	31988
   137  00100F                     __stringdata:
   138                           	opt stack 0
   139  00100F                     STR_1:
   140  00100F  0A                 	db	10
   141  001010  0D                 	db	13
   142  001011  4B                 	db	75	;'K'
   143  001012  77                 	db	119	;'w'
   144  001013  61                 	db	97	;'a'
   145  001014  6E                 	db	110	;'n'
   146  001015  74                 	db	116	;'t'
   147  001016  6C                 	db	108	;'l'
   148  001017  65                 	db	101	;'e'
   149  001018  6E                 	db	110	;'n'
   150  001019  20                 	db	32
   151  00101A  41                 	db	65	;'A'
   152  00101B  50                 	db	80	;'P'
   153  00101C  53                 	db	83	;'S'
   154  00101D  43                 	db	67	;'C'
   155  00101E  31                 	db	49	;'1'
   156  00101F  32                 	db	50	;'2'
   157  001020  39                 	db	57	;'9'
   158  001021  39                 	db	57	;'9'
   159  001022  20                 	db	32
   160  001023  73                 	db	115	;'s'
   161  001024  69                 	db	105	;'i'
   162  001025  6D                 	db	109	;'m'
   163  001026  70                 	db	112	;'p'
   164  001027  6C                 	db	108	;'l'
   165  001028  65                 	db	101	;'e'
   166  001029  20                 	db	32
   167  00102A  63                 	db	99	;'c'
   168  00102B  75                 	db	117	;'u'
   169  00102C  72                 	db	114	;'r'
   170  00102D  76                 	db	118	;'v'
   171  00102E  65                 	db	101	;'e'
   172  00102F  20                 	db	32
   173  001030  66                 	db	102	;'f'
   174  001031  6F                 	db	111	;'o'
   175  001032  6C                 	db	108	;'l'
   176  001033  6C                 	db	108	;'l'
   177  001034  6F                 	db	111	;'o'
   178  001035  77                 	db	119	;'w'
   179  001036  65                 	db	101	;'e'
   180  001037  72                 	db	114	;'r'
   181  001038  20                 	db	32
   182  001039  2D                 	db	45
   183  00103A  2D                 	db	45
   184  00103B  20                 	db	32
   185  00103C  77                 	db	119	;'w'
   186  00103D  69                 	db	105	;'i'
   187  00103E  74                 	db	116	;'t'
   188  00103F  68                 	db	104	;'h'
   189  001040  20                 	db	32
   190  001041  65                 	db	101	;'e'
   191  001042  72                 	db	114	;'r'
   192  001043  72                 	db	114	;'r'
   193  001044  6F                 	db	111	;'o'
   194  001045  72                 	db	114	;'r'
   195  001046  20                 	db	32
   196  001047  63                 	db	99	;'c'
   197  001048  6F                 	db	111	;'o'
   198  001049  64                 	db	100	;'d'
   199  00104A  65                 	db	101	;'e'
   200  00104B  73                 	db	115	;'s'
   201  00104C  0A                 	db	10
   202  00104D  0D                 	db	13
   203  00104E  00                 	db	0
   204  00104F                     STR_6:
   205  00104F  20                 	db	32
   206  001050  3C                 	db	60	;'<'
   207  001051  72                 	db	114	;'r'
   208  001052  65                 	db	101	;'e'
   209  001053  73                 	db	115	;'s'
   210  001054  65                 	db	101	;'e'
   211  001055  74                 	db	116	;'t'
   212  001056  3E                 	db	62	;'>'
   213  001057  20                 	db	32
   214  001058  00                 	db	0
   215  001059                     STR_5:
   216  001059  3C                 	db	60	;'<'
   217  00105A  53                 	db	83	;'S'
   218  00105B  54                 	db	84	;'T'
   219  00105C  4B                 	db	75	;'K'
   220  00105D  46                 	db	70	;'F'
   221  00105E  55                 	db	85	;'U'
   222  00105F  4C                 	db	76	;'L'
   223  001060  3E                 	db	62	;'>'
   224  001061  00                 	db	0
   225  001062                     STR_4:
   226  001062  3C                 	db	60	;'<'
   227  001063  57                 	db	87	;'W'
   228  001064  44                 	db	68	;'D'
   229  001065  54                 	db	84	;'T'
   230  001066  20                 	db	32
   231  001067  54                 	db	84	;'T'
   232  001068  4F                 	db	79	;'O'
   233  001069  3E                 	db	62	;'>'
   234  00106A  00                 	db	0
   235  00106B                     STR_7:
   236  00106B  5C                 	db	92	;'\'
   237  00106C  3C                 	db	60	;'<'
   238  00106D  4C                 	db	76	;'L'
   239  00106E  56                 	db	86	;'V'
   240  00106F  44                 	db	68	;'D'
   241  001070  3E                 	db	62	;'>'
   242  001071  00                 	db	0
   243  001072                     STR_3:
   244  001072  3C                 	db	60	;'<'
   245  001073  42                 	db	66	;'B'
   246  001074  4F                 	db	79	;'O'
   247  001075  52                 	db	82	;'R'
   248  001076  3E                 	db	62	;'>'
   249  001077  00                 	db	0
   250  001078                     STR_2:
   251  001078  3C                 	db	60	;'<'
   252  001079  50                 	db	80	;'P'
   253  00107A  4F                 	db	79	;'O'
   254  00107B  52                 	db	82	;'R'
   255  00107C  3E                 	db	62	;'>'
   256  00107D  00                 	db	0
   257  00107E                     __end_of__stringdata:
   258                           	opt stack 0
   259                           
   260                           ; #config settings
   261  00107E  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  001EF2                     __pcinit:
   265                           	opt stack 0
   266  001EF2                     start_initialization:
   267                           	opt stack 0
   268  001EF2                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Clear objects allocated to COMRAM (14 bytes)
   272  001EF2  EE00  F020         	lfsr	0,__pbssCOMRAM
   273  001EF6  0E0E               	movlw	14
   274  001EF8                     clear_0:
   275  001EF8  6AEE               	clrf	postinc0,c
   276  001EFA  06E8               	decf	wreg,f,c
   277  001EFC  E1FD               	bnz	clear_0
   278  001EFE                     end_of_initialization:
   279                           	opt stack 0
   280  001EFE                     __end_of__initialization:
   281                           	opt stack 0
   282  001EFE  0100               	movlb	0
   283  001F00  EF68  F00D         	goto	_main	;jump to C main() function
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	bssCOMRAM
   288  000020                     __pbssCOMRAM:
   289                           	opt stack 0
   290  000020                     _count:
   291                           	opt stack 0
   292  000020                     	ds	2
   293  000022                     _memory:
   294                           	opt stack 0
   295  000022                     	ds	2
   296  000024                     _move_state:
   297                           	opt stack 0
   298  000024                     	ds	2
   299  000026                     _side_mem:
   300                           	opt stack 0
   301  000026                     	ds	2
   302  000028                     _threshold:
   303                           	opt stack 0
   304  000028                     	ds	2
   305  00002A                     _tmr_state:
   306                           	opt stack 0
   307  00002A                     	ds	2
   308  00002C                     _SeeLine:
   309                           	opt stack 0
   310  00002C                     	ds	1
   311  00002D                     _lvd_flag:
   312                           	opt stack 0
   313  00002D                     	ds	1
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           
   317                           	psect	cstackCOMRAM
   318  000001                     __pcstackCOMRAM:
   319                           	opt stack 0
   320  000001                     ??_high_isr:
   321  000001                     
   322                           ; 2 bytes @ 0x0
   323  000001                     	ds	14
   324  00000F                     ??_set_leds:
   325  00000F                     ??_OpenPWM2:
   326  00000F                     ??_SetChanADC:
   327  00000F                     ?_ReadADC:
   328                           	opt stack 0
   329  00000F                     ?_ReadTimer0:
   330                           	opt stack 0
   331  00000F                     putch@data:
   332                           	opt stack 0
   333  00000F                     OpenADC@config2:
   334                           	opt stack 0
   335  00000F                     OpenPWM1@period:
   336                           	opt stack 0
   337  00000F                     OpenTimer0@config:
   338                           	opt stack 0
   339  00000F                     OpenTimer2@config:
   340                           	opt stack 0
   341  00000F                     set_osc_32MHz@i:
   342                           	opt stack 0
   343  00000F                     SetDCPWM1@dutycycle:
   344                           	opt stack 0
   345  00000F                     SetDCPWM2@dutycycle:
   346                           	opt stack 0
   347  00000F                     WriteTimer0@timer0:
   348                           	opt stack 0
   349  00000F                     OpenUSART@spbrg:
   350                           	opt stack 0
   351  00000F                     gtrap@count:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0xE
   355  00000F                     	ds	1
   356  000010                     ?_printf:
   357                           	opt stack 0
   358  000010                     OpenADC@portconfig:
   359                           	opt stack 0
   360  000010                     SetChanADC@channel:
   361                           	opt stack 0
   362  000010                     OpenPWM2@period:
   363                           	opt stack 0
   364  000010                     printf@f:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xF
   368  000010                     	ds	1
   369  000011                     ??_OpenUSART:
   370  000011                     ??_OpenADC:
   371  000011                     ??_SetDCPWM1:
   372  000011                     ??_SetDCPWM2:
   373  000011                     ?_adc:
   374                           	opt stack 0
   375  000011                     OpenPWM2@ccp2mx:
   376                           	opt stack 0
   377  000011                     ReadTimer0@timer:
   378                           	opt stack 0
   379  000011                     WriteTimer0@timer:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  000011                     	ds	1
   384  000012                     printf@ap:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x11
   388  000012                     	ds	1
   389  000013                     adc@channel:
   390                           	opt stack 0
   391  000013                     OpenADC@config:
   392                           	opt stack 0
   393  000013                     SetDCPWM1@DCycle:
   394                           	opt stack 0
   395  000013                     SetDCPWM2@DCycle:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x12
   399  000013                     	ds	1
   400  000014                     ??_check_sensors:
   401  000014                     printf@c:
   402                           	opt stack 0
   403  000014                     OpenUSART@config:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x13
   407  000014                     	ds	1
   408  000015                     set_motor_speed@motor_speed:
   409                           	opt stack 0
   410  000015                     PORtask@count1:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x14
   414  000015                     	ds	1
   415  000016                     set_motor_speed@speed_modifier:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x15
   419  000016                     	ds	2
   420  000018                     ??_set_motor_speed:
   421                           
   422                           ; 0 bytes @ 0x17
   423  000018                     	ds	1
   424  000019                     PORtask@count2:
   425                           	opt stack 0
   426                           
   427                           ; 4 bytes @ 0x18
   428  000019                     	ds	1
   429  00001A                     set_motor_speed@the_motor:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x19
   433  00001A                     	ds	1
   434  00001B                     set_motor_speed@dir_modifier:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x1A
   438  00001B                     	ds	1
   439  00001C                     set_motor_speed@duty_cycle:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1B
   443  00001C                     	ds	1
   444  00001D                     
   445                           ; 0 bytes @ 0x1C
   446  00001D                     	ds	1
   447  00001E                     set_directive@directive:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1D
   451  00001E                     	ds	2
   452  000020                     postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           
   455                           ; 0 bytes @ 0x1F
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 16 in file "../main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels required when called:    7
   481 ;; This function calls:
   482 ;;		_LVtrap
   483 ;;		_OpenTimer0
   484 ;;		_check_sensors
   485 ;;		_initialization
   486 ;;		_lvd_flag_set
   487 ;;		_motor_control
   488 ;;		_printf
   489 ;;		_set_leds
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text0
   496  001AD0                     __ptext0:
   497                           	opt stack 0
   498  001AD0                     _main:
   499                           	opt stack 24
   500                           
   501                           ;main.c: 19: initialization();
   502                           
   503                           ;incstack = 0
   504  001AD0  ECE1  F00B         	call	_initialization	;wreg free
   505                           
   506                           ;main.c: 24: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   507  001AD4  0E10               	movlw	high STR_1
   508  001AD6  6E11               	movwf	printf@f+1,c
   509  001AD8  0E0F               	movlw	low STR_1
   510  001ADA  6E10               	movwf	printf@f,c
   511  001ADC  EC06  F00E         	call	_printf	;wreg free
   512  001AE0  0004               	clrwdt		;# 
   513                           
   514                           ;main.c: 27: threshold = 140u;
   515  001AE2  0E00               	movlw	0
   516  001AE4  6E29               	movwf	_threshold+1,c
   517  001AE6  0E8C               	movlw	140
   518  001AE8  6E28               	movwf	_threshold,c
   519                           
   520                           ;main.c: 30: OpenTimer0(0b01111111 & 0b10000111 & 0b11111110);
   521  001AEA  0E06               	movlw	6
   522  001AEC  ECE9  F00E         	call	_OpenTimer0
   523                           
   524                           ;main.c: 32: side_mem=2;
   525  001AF0  0E00               	movlw	0
   526  001AF2  6E27               	movwf	_side_mem+1,c
   527  001AF4  0E02               	movlw	2
   528  001AF6  6E26               	movwf	_side_mem,c
   529                           
   530                           ;main.c: 33: count = 0;
   531  001AF8  0E00               	movlw	0
   532  001AFA  6E21               	movwf	_count+1,c
   533  001AFC  0E00               	movlw	0
   534  001AFE  6E20               	movwf	_count,c
   535  001B00                     l2143:
   536                           
   537                           ;main.c: 35: {
   538                           ;main.c: 36: check_sensors();
   539  001B00  ECD3  F00A         	call	_check_sensors	;wreg free
   540                           
   541                           ;main.c: 37: set_leds();
   542  001B04  EC29  F00C         	call	_set_leds	;wreg free
   543                           
   544                           ;main.c: 42: motor_control();
   545  001B08  EC40  F008         	call	_motor_control	;wreg free
   546  001B0C  0004               	clrwdt		;# 
   547                           
   548                           ;main.c: 44: if(lvd_flag_set()) LVtrap();
   549  001B0E  ECE0  F00F         	call	_lvd_flag_set	;wreg free
   550  001B12  0900               	iorlw	0
   551  001B14  B4D8               	btfsc	status,2,c
   552  001B16  D7F4               	goto	l2143
   553  001B18  ECF9  F00E         	call	_LVtrap	;wreg free
   554  001B1C  D7F1               	goto	l2143
   555  001B1E                     __end_of_main:
   556                           	opt stack 0
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _motor_control *****************
   562 ;; Defined at:
   563 ;;		line 140 in file "../motor_control.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;		None               void
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    6
   584 ;; This function calls:
   585 ;;		_ReadTimer0
   586 ;;		_change_track
   587 ;;		_check_state
   588 ;;		_clr_tmr
   589 ;;		_full_stp
   590 ;;		_set_directive
   591 ;;		_start_tmr
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  001080                     __ptext1:
   599                           	opt stack 0
   600  001080                     _motor_control:
   601                           	opt stack 24
   602                           
   603                           ;motor_control.c: 144: if(SeeLine.B != 0b00000 && SeeLine.B != 0b11111)if(tmr_state != 0
      +                          )clr_tmr();
   604                           
   605                           ;incstack = 0
   606  001080  502C               	movf	_SeeLine,w,c
   607  001082  0B1F               	andlw	31
   608  001084  0900               	iorlw	0
   609  001086  B4D8               	btfsc	status,2,c
   610  001088  D1DE               	goto	l2107
   611  00108A  502C               	movf	_SeeLine,w,c
   612  00108C  0B1F               	andlw	31
   613  00108E  0A1F               	xorlw	31
   614  001090  B4D8               	btfsc	status,2,c
   615  001092  D1D9               	goto	l2107
   616  001094  502B               	movf	_tmr_state+1,w,c
   617  001096  102A               	iorwf	_tmr_state,w,c
   618  001098  B4D8               	btfsc	status,2,c
   619  00109A  D1D5               	goto	l2107
   620  00109C  ECAB  F00F         	call	_clr_tmr	;wreg free
   621  0010A0  D1D2               	goto	l2107
   622  0010A2                     l1897:
   623                           
   624                           ;motor_control.c: 149: if(move_state!=4)set_directive(4);
   625  0010A2  5024               	movf	_move_state,w,c
   626  0010A4  0A04               	xorlw	4
   627  0010A6  1025               	iorwf	_move_state+1,w,c
   628  0010A8  B4D8               	btfsc	status,2,c
   629  0010AA  D20B               	goto	l2109
   630  0010AC  0E00               	movlw	0
   631  0010AE  6E1F               	movwf	set_directive@directive+1,c
   632  0010B0  0E04               	movlw	4
   633  0010B2  6E1E               	movwf	set_directive@directive,c
   634  0010B4  EC35  F00B         	call	_set_directive	;wreg free
   635  0010B8  D204               	goto	l2109
   636  0010BA                     l1901:
   637                           
   638                           ;motor_control.c: 154: if(memory==0)
   639  0010BA  5023               	movf	_memory+1,w,c
   640  0010BC  1022               	iorwf	_memory,w,c
   641  0010BE  A4D8               	btfss	status,2,c
   642  0010C0  D200               	goto	l2109
   643                           
   644                           ;motor_control.c: 155: if(move_state!=4)
   645  0010C2  5024               	movf	_move_state,w,c
   646  0010C4  0A04               	xorlw	4
   647  0010C6  1025               	iorwf	_move_state+1,w,c
   648  0010C8  B4D8               	btfsc	status,2,c
   649  0010CA  D1FB               	goto	l2109
   650                           
   651                           ;motor_control.c: 156: set_directive(4);
   652  0010CC  0E00               	movlw	0
   653  0010CE  6E1F               	movwf	set_directive@directive+1,c
   654  0010D0  0E04               	movlw	4
   655  0010D2  6E1E               	movwf	set_directive@directive,c
   656  0010D4  EC35  F00B         	call	_set_directive	;wreg free
   657  0010D8  D1F4               	goto	l2109
   658  0010DA                     l1909:
   659                           
   660                           ;motor_control.c: 164: if(move_state!=4)set_directive(4);
   661  0010DA  5024               	movf	_move_state,w,c
   662  0010DC  0A04               	xorlw	4
   663  0010DE  1025               	iorwf	_move_state+1,w,c
   664  0010E0  B4D8               	btfsc	status,2,c
   665  0010E2  D1EF               	goto	l2109
   666  0010E4  0E00               	movlw	0
   667  0010E6  6E1F               	movwf	set_directive@directive+1,c
   668  0010E8  0E04               	movlw	4
   669  0010EA  6E1E               	movwf	set_directive@directive,c
   670  0010EC  EC35  F00B         	call	_set_directive	;wreg free
   671  0010F0  D1E8               	goto	l2109
   672  0010F2                     l1913:
   673                           
   674                           ;motor_control.c: 169: if(move_state!=4)set_directive(4);
   675  0010F2  5024               	movf	_move_state,w,c
   676  0010F4  0A04               	xorlw	4
   677  0010F6  1025               	iorwf	_move_state+1,w,c
   678  0010F8  B4D8               	btfsc	status,2,c
   679  0010FA  D1E3               	goto	l2109
   680  0010FC  0E00               	movlw	0
   681  0010FE  6E1F               	movwf	set_directive@directive+1,c
   682  001100  0E04               	movlw	4
   683  001102  6E1E               	movwf	set_directive@directive,c
   684  001104  EC35  F00B         	call	_set_directive	;wreg free
   685  001108  D1DC               	goto	l2109
   686  00110A                     l1917:
   687                           
   688                           ;motor_control.c: 174: if(memory==0)
   689  00110A  5023               	movf	_memory+1,w,c
   690  00110C  1022               	iorwf	_memory,w,c
   691  00110E  A4D8               	btfss	status,2,c
   692  001110  D1D8               	goto	l2109
   693                           
   694                           ;motor_control.c: 175: if(move_state!=4)
   695  001112  5024               	movf	_move_state,w,c
   696  001114  0A04               	xorlw	4
   697  001116  1025               	iorwf	_move_state+1,w,c
   698  001118  B4D8               	btfsc	status,2,c
   699  00111A  D007               	goto	l1923
   700                           
   701                           ;motor_control.c: 176: set_directive(4);
   702  00111C  0E00               	movlw	0
   703  00111E  6E1F               	movwf	set_directive@directive+1,c
   704  001120  0E04               	movlw	4
   705  001122  6E1E               	movwf	set_directive@directive,c
   706  001124  EC35  F00B         	call	_set_directive	;wreg free
   707  001128  D1CC               	goto	l2109
   708  00112A                     l1923:
   709                           
   710                           ;motor_control.c: 177: else if(memory==1)
   711  00112A  0422               	decf	_memory,w,c
   712  00112C  1023               	iorwf	_memory+1,w,c
   713  00112E  A4D8               	btfss	status,2,c
   714  001130  D1C8               	goto	l2109
   715                           
   716                           ;motor_control.c: 178: {
   717                           ;motor_control.c: 179: change_track();
   718  001132  ECDB  F00C         	call	_change_track	;wreg free
   719  001136  D1C5               	goto	l2109
   720  001138                     l1927:
   721                           
   722                           ;motor_control.c: 184: if(memory==0)
   723  001138  5023               	movf	_memory+1,w,c
   724  00113A  1022               	iorwf	_memory,w,c
   725  00113C  A4D8               	btfss	status,2,c
   726  00113E  D011               	goto	l1937
   727                           
   728                           ;motor_control.c: 185: if(move_state!=4){
   729  001140  5024               	movf	_move_state,w,c
   730  001142  0A04               	xorlw	4
   731  001144  1025               	iorwf	_move_state+1,w,c
   732  001146  B4D8               	btfsc	status,2,c
   733  001148  D007               	goto	l1933
   734                           
   735                           ;motor_control.c: 186: set_directive(4);
   736  00114A  0E00               	movlw	0
   737  00114C  6E1F               	movwf	set_directive@directive+1,c
   738  00114E  0E04               	movlw	4
   739  001150  6E1E               	movwf	set_directive@directive,c
   740  001152  EC35  F00B         	call	_set_directive	;wreg free
   741                           
   742                           ;motor_control.c: 188: }
   743  001156  D005               	goto	l1937
   744  001158                     l1933:
   745                           
   746                           ;motor_control.c: 190: else if(memory==1)
   747  001158  0422               	decf	_memory,w,c
   748  00115A  1023               	iorwf	_memory+1,w,c
   749  00115C  B4D8               	btfsc	status,2,c
   750                           
   751                           ;motor_control.c: 191: {
   752                           ;motor_control.c: 192: change_track();
   753  00115E  ECDB  F00C         	call	_change_track	;wreg free
   754  001162                     l1937:
   755                           
   756                           ;motor_control.c: 193: }
   757                           ;motor_control.c: 194: count = 0;
   758  001162  0E00               	movlw	0
   759  001164  6E21               	movwf	_count+1,c
   760  001166  0E00               	movlw	0
   761  001168  6E20               	movwf	_count,c
   762                           
   763                           ;motor_control.c: 195: side_mem = 1;
   764  00116A  0E00               	movlw	0
   765  00116C  6E27               	movwf	_side_mem+1,c
   766  00116E  0E01               	movlw	1
   767  001170  D04A               	goto	L3
   768  001172                     l1941:
   769                           
   770                           ;motor_control.c: 199: if(memory==0)
   771  001172  5023               	movf	_memory+1,w,c
   772  001174  1022               	iorwf	_memory,w,c
   773  001176  A4D8               	btfss	status,2,c
   774  001178  D011               	goto	l1951
   775                           
   776                           ;motor_control.c: 200: if(move_state!=4){
   777  00117A  5024               	movf	_move_state,w,c
   778  00117C  0A04               	xorlw	4
   779  00117E  1025               	iorwf	_move_state+1,w,c
   780  001180  B4D8               	btfsc	status,2,c
   781  001182  D007               	goto	l1947
   782                           
   783                           ;motor_control.c: 201: set_directive(4);
   784  001184  0E00               	movlw	0
   785  001186  6E1F               	movwf	set_directive@directive+1,c
   786  001188  0E04               	movlw	4
   787  00118A  6E1E               	movwf	set_directive@directive,c
   788  00118C  EC35  F00B         	call	_set_directive	;wreg free
   789                           
   790                           ;motor_control.c: 202: }
   791  001190  D005               	goto	l1951
   792  001192                     l1947:
   793                           
   794                           ;motor_control.c: 204: else if(memory==1)
   795  001192  0422               	decf	_memory,w,c
   796  001194  1023               	iorwf	_memory+1,w,c
   797  001196  B4D8               	btfsc	status,2,c
   798                           
   799                           ;motor_control.c: 205: {
   800                           ;motor_control.c: 206: change_track();
   801  001198  ECDB  F00C         	call	_change_track	;wreg free
   802  00119C                     l1951:
   803                           
   804                           ;motor_control.c: 207: }
   805                           ;motor_control.c: 209: count = 0;
   806  00119C  0E00               	movlw	0
   807  00119E  6E21               	movwf	_count+1,c
   808  0011A0  0E00               	movlw	0
   809  0011A2  6E20               	movwf	_count,c
   810                           
   811                           ;motor_control.c: 210: side_mem = 3;
   812  0011A4  0E00               	movlw	0
   813  0011A6  6E27               	movwf	_side_mem+1,c
   814  0011A8  0E03               	movlw	3
   815  0011AA  D02D               	goto	L3
   816  0011AC                     l1955:
   817                           
   818                           ;motor_control.c: 213: if(memory==0)
   819  0011AC  5023               	movf	_memory+1,w,c
   820  0011AE  1022               	iorwf	_memory,w,c
   821  0011B0  A4D8               	btfss	status,2,c
   822  0011B2  D7D7               	goto	l1937
   823                           
   824                           ;motor_control.c: 214: if(move_state!=4){
   825  0011B4  5024               	movf	_move_state,w,c
   826  0011B6  0A04               	xorlw	4
   827  0011B8  1025               	iorwf	_move_state+1,w,c
   828  0011BA  B4D8               	btfsc	status,2,c
   829  0011BC  D007               	goto	l1961
   830                           
   831                           ;motor_control.c: 215: set_directive(4);
   832  0011BE  0E00               	movlw	0
   833  0011C0  6E1F               	movwf	set_directive@directive+1,c
   834  0011C2  0E04               	movlw	4
   835  0011C4  6E1E               	movwf	set_directive@directive,c
   836  0011C6  EC35  F00B         	call	_set_directive	;wreg free
   837                           
   838                           ;motor_control.c: 217: }
   839  0011CA  D7CB               	goto	l1937
   840  0011CC                     l1961:
   841                           
   842                           ;motor_control.c: 219: else if(memory==1)
   843  0011CC  0422               	decf	_memory,w,c
   844  0011CE  1023               	iorwf	_memory+1,w,c
   845  0011D0  B4D8               	btfsc	status,2,c
   846                           
   847                           ;motor_control.c: 220: {
   848                           ;motor_control.c: 221: change_track();
   849  0011D2  ECDB  F00C         	call	_change_track	;wreg free
   850  0011D6  D7C5               	goto	l1937
   851  0011D8                     l1969:
   852                           
   853                           ;motor_control.c: 228: if(memory==0)
   854  0011D8  5023               	movf	_memory+1,w,c
   855  0011DA  1022               	iorwf	_memory,w,c
   856  0011DC  A4D8               	btfss	status,2,c
   857  0011DE  D7DE               	goto	l1951
   858                           
   859                           ;motor_control.c: 229: if(move_state!=4){
   860  0011E0  5024               	movf	_move_state,w,c
   861  0011E2  0A04               	xorlw	4
   862  0011E4  1025               	iorwf	_move_state+1,w,c
   863  0011E6  B4D8               	btfsc	status,2,c
   864  0011E8  D007               	goto	l1975
   865                           
   866                           ;motor_control.c: 230: set_directive(4);
   867  0011EA  0E00               	movlw	0
   868  0011EC  6E1F               	movwf	set_directive@directive+1,c
   869  0011EE  0E04               	movlw	4
   870  0011F0  6E1E               	movwf	set_directive@directive,c
   871  0011F2  EC35  F00B         	call	_set_directive	;wreg free
   872                           
   873                           ;motor_control.c: 231: }
   874  0011F6  D7D2               	goto	l1951
   875  0011F8                     l1975:
   876                           
   877                           ;motor_control.c: 233: else if(memory==1)
   878  0011F8  0422               	decf	_memory,w,c
   879  0011FA  1023               	iorwf	_memory+1,w,c
   880  0011FC  A4D8               	btfss	status,2,c
   881  0011FE  D7CE               	goto	l1951
   882                           
   883                           ;motor_control.c: 234: {
   884                           ;motor_control.c: 235: change_track();
   885  001200  ECDB  F00C         	call	_change_track	;wreg free
   886  001204  D7CB               	goto	l1951
   887  001206                     L3:
   888  001206  6E26               	movwf	_side_mem,c
   889                           
   890                           ;motor_control.c: 239: break;
   891  001208  D15C               	goto	l2109
   892  00120A                     l1983:
   893                           
   894                           ;motor_control.c: 241: if(memory==0)
   895  00120A  5023               	movf	_memory+1,w,c
   896  00120C  1022               	iorwf	_memory,w,c
   897  00120E  A4D8               	btfss	status,2,c
   898  001210  D7C5               	goto	l1951
   899                           
   900                           ;motor_control.c: 242: if(move_state!=4){
   901  001212  5024               	movf	_move_state,w,c
   902  001214  0A04               	xorlw	4
   903  001216  1025               	iorwf	_move_state+1,w,c
   904  001218  B4D8               	btfsc	status,2,c
   905  00121A  D007               	goto	l1989
   906                           
   907                           ;motor_control.c: 243: set_directive(4);
   908  00121C  0E00               	movlw	0
   909  00121E  6E1F               	movwf	set_directive@directive+1,c
   910  001220  0E04               	movlw	4
   911  001222  6E1E               	movwf	set_directive@directive,c
   912  001224  EC35  F00B         	call	_set_directive	;wreg free
   913                           
   914                           ;motor_control.c: 244: }
   915  001228  D7B9               	goto	l1951
   916  00122A                     l1989:
   917                           
   918                           ;motor_control.c: 245: else if(memory==1)
   919  00122A  0422               	decf	_memory,w,c
   920  00122C  1023               	iorwf	_memory+1,w,c
   921  00122E  B4D8               	btfsc	status,2,c
   922                           
   923                           ;motor_control.c: 246: {
   924                           ;motor_control.c: 247: change_track();
   925  001230  ECDB  F00C         	call	_change_track	;wreg free
   926  001234  D7B3               	goto	l1951
   927  001236                     l1997:
   928                           
   929                           ;motor_control.c: 254: if(memory==0)
   930  001236  5023               	movf	_memory+1,w,c
   931  001238  1022               	iorwf	_memory,w,c
   932  00123A  A4D8               	btfss	status,2,c
   933  00123C  D011               	goto	l2007
   934                           
   935                           ;motor_control.c: 255: if(move_state!=4){
   936  00123E  5024               	movf	_move_state,w,c
   937  001240  0A04               	xorlw	4
   938  001242  1025               	iorwf	_move_state+1,w,c
   939  001244  B4D8               	btfsc	status,2,c
   940  001246  D007               	goto	l2003
   941                           
   942                           ;motor_control.c: 256: set_directive(4);
   943  001248  0E00               	movlw	0
   944  00124A  6E1F               	movwf	set_directive@directive+1,c
   945  00124C  0E04               	movlw	4
   946  00124E  6E1E               	movwf	set_directive@directive,c
   947  001250  EC35  F00B         	call	_set_directive	;wreg free
   948                           
   949                           ;motor_control.c: 257: }
   950  001254  D005               	goto	l2007
   951  001256                     l2003:
   952                           
   953                           ;motor_control.c: 258: else if(memory==1)
   954  001256  0422               	decf	_memory,w,c
   955  001258  1023               	iorwf	_memory+1,w,c
   956  00125A  B4D8               	btfsc	status,2,c
   957                           
   958                           ;motor_control.c: 259: {
   959                           ;motor_control.c: 260: change_track();
   960  00125C  ECDB  F00C         	call	_change_track	;wreg free
   961  001260                     l2007:
   962                           
   963                           ;motor_control.c: 261: }
   964                           ;motor_control.c: 262: side_mem = 1;
   965  001260  0E00               	movlw	0
   966  001262  6E27               	movwf	_side_mem+1,c
   967  001264  0E01               	movlw	1
   968  001266  6E26               	movwf	_side_mem,c
   969  001268  D045               	goto	l2037
   970  00126A                     l2011:
   971                           
   972                           ;motor_control.c: 268: if(move_state!=5)set_directive(5);
   973  00126A  5024               	movf	_move_state,w,c
   974  00126C  0A05               	xorlw	5
   975  00126E  1025               	iorwf	_move_state+1,w,c
   976  001270  B4D8               	btfsc	status,2,c
   977  001272  D127               	goto	l2109
   978  001274  0E00               	movlw	0
   979  001276  6E1F               	movwf	set_directive@directive+1,c
   980  001278  0E05               	movlw	5
   981  00127A  6E1E               	movwf	set_directive@directive,c
   982  00127C  EC35  F00B         	call	_set_directive	;wreg free
   983  001280  D120               	goto	l2109
   984  001282                     l2015:
   985                           
   986                           ;motor_control.c: 272: if(move_state!=2)set_directive(2);
   987  001282  5024               	movf	_move_state,w,c
   988  001284  0A02               	xorlw	2
   989  001286  1025               	iorwf	_move_state+1,w,c
   990  001288  B4D8               	btfsc	status,2,c
   991  00128A  D11B               	goto	l2109
   992  00128C  0E00               	movlw	0
   993  00128E  6E1F               	movwf	set_directive@directive+1,c
   994  001290  0E02               	movlw	2
   995  001292  6E1E               	movwf	set_directive@directive,c
   996  001294  EC35  F00B         	call	_set_directive	;wreg free
   997  001298  D114               	goto	l2109
   998  00129A                     l2019:
   999                           
  1000                           ;motor_control.c: 276: if(move_state!=6)set_directive(6);
  1001  00129A  5024               	movf	_move_state,w,c
  1002  00129C  0A06               	xorlw	6
  1003  00129E  1025               	iorwf	_move_state+1,w,c
  1004  0012A0  B4D8               	btfsc	status,2,c
  1005  0012A2  D10F               	goto	l2109
  1006  0012A4  0E00               	movlw	0
  1007  0012A6  6E1F               	movwf	set_directive@directive+1,c
  1008  0012A8  0E06               	movlw	6
  1009  0012AA  6E1E               	movwf	set_directive@directive,c
  1010  0012AC  EC35  F00B         	call	_set_directive	;wreg free
  1011  0012B0  D108               	goto	l2109
  1012  0012B2                     l2023:
  1013                           
  1014                           ;motor_control.c: 280: if(move_state!=1)set_directive(1);
  1015  0012B2  0424               	decf	_move_state,w,c
  1016  0012B4  1025               	iorwf	_move_state+1,w,c
  1017  0012B6  B4D8               	btfsc	status,2,c
  1018  0012B8  D104               	goto	l2109
  1019  0012BA  0E00               	movlw	0
  1020  0012BC  6E1F               	movwf	set_directive@directive+1,c
  1021  0012BE  0E01               	movlw	1
  1022  0012C0  6E1E               	movwf	set_directive@directive,c
  1023  0012C2  EC35  F00B         	call	_set_directive	;wreg free
  1024  0012C6  D0FD               	goto	l2109
  1025  0012C8                     l2027:
  1026                           
  1027                           ;motor_control.c: 284: if(move_state!=6)set_directive(6);
  1028  0012C8  5024               	movf	_move_state,w,c
  1029  0012CA  0A06               	xorlw	6
  1030  0012CC  1025               	iorwf	_move_state+1,w,c
  1031  0012CE  B4D8               	btfsc	status,2,c
  1032  0012D0  D011               	goto	l2037
  1033  0012D2  0E00               	movlw	0
  1034  0012D4  6E1F               	movwf	set_directive@directive+1,c
  1035  0012D6  0E06               	movlw	6
  1036  0012D8  6E1E               	movwf	set_directive@directive,c
  1037  0012DA  EC35  F00B         	call	_set_directive	;wreg free
  1038  0012DE  D00A               	goto	l2037
  1039  0012E0                     l2033:
  1040                           
  1041                           ;motor_control.c: 289: if(move_state!=1)set_directive(1);
  1042  0012E0  0424               	decf	_move_state,w,c
  1043  0012E2  1025               	iorwf	_move_state+1,w,c
  1044  0012E4  B4D8               	btfsc	status,2,c
  1045  0012E6  D006               	goto	l2037
  1046  0012E8  0E00               	movlw	0
  1047  0012EA  6E1F               	movwf	set_directive@directive+1,c
  1048  0012EC  0E01               	movlw	1
  1049  0012EE  6E1E               	movwf	set_directive@directive,c
  1050  0012F0  EC35  F00B         	call	_set_directive	;wreg free
  1051  0012F4                     l2037:
  1052                           
  1053                           ;motor_control.c: 290: count = 0;
  1054  0012F4  0E00               	movlw	0
  1055  0012F6  6E21               	movwf	_count+1,c
  1056  0012F8  0E00               	movlw	0
  1057  0012FA  6E20               	movwf	_count,c
  1058                           
  1059                           ;motor_control.c: 291: break;
  1060  0012FC  D0E2               	goto	l2109
  1061  0012FE                     l2039:
  1062                           
  1063                           ;motor_control.c: 297: if(tmr_state!=1){
  1064  0012FE  042A               	decf	_tmr_state,w,c
  1065  001300  102B               	iorwf	_tmr_state+1,w,c
  1066  001302  B4D8               	btfsc	status,2,c
  1067  001304  D00D               	goto	l2047
  1068                           
  1069                           ;motor_control.c: 298: if(move_state!=4)set_directive(4);
  1070  001306  5024               	movf	_move_state,w,c
  1071  001308  0A04               	xorlw	4
  1072  00130A  1025               	iorwf	_move_state+1,w,c
  1073  00130C  B4D8               	btfsc	status,2,c
  1074  00130E  D006               	goto	l2045
  1075  001310  0E00               	movlw	0
  1076  001312  6E1F               	movwf	set_directive@directive+1,c
  1077  001314  0E04               	movlw	4
  1078  001316  6E1E               	movwf	set_directive@directive,c
  1079  001318  EC35  F00B         	call	_set_directive	;wreg free
  1080  00131C                     l2045:
  1081                           
  1082                           ;motor_control.c: 299: start_tmr();
  1083  00131C  EC42  F00F         	call	_start_tmr	;wreg free
  1084  001320                     l2047:
  1085                           
  1086                           ;motor_control.c: 300: }
  1087                           ;motor_control.c: 302: if(count<=750){
  1088  001320  5021               	movf	_count+1,w,c
  1089  001322  0A80               	xorlw	128
  1090  001324  6EF3               	movwf	prodl,c
  1091  001326  0E82               	movlw	130
  1092  001328  5CF3               	subwf	prodl,w,c
  1093  00132A  0EEF               	movlw	239
  1094  00132C  B4D8               	btfsc	status,2,c
  1095  00132E  5C20               	subwf	_count,w,c
  1096  001330  B0D8               	btfsc	status,0,c
  1097  001332  D019               	goto	l2059
  1098                           
  1099                           ;motor_control.c: 303: if(side_mem==1)set_directive(0);
  1100  001334  0426               	decf	_side_mem,w,c
  1101  001336  1027               	iorwf	_side_mem+1,w,c
  1102  001338  A4D8               	btfss	status,2,c
  1103  00133A  D006               	goto	l2053
  1104  00133C  0E00               	movlw	0
  1105  00133E  6E1F               	movwf	set_directive@directive+1,c
  1106  001340  0E00               	movlw	0
  1107  001342  6E1E               	movwf	set_directive@directive,c
  1108  001344  EC35  F00B         	call	_set_directive	;wreg free
  1109  001348                     l2053:
  1110                           
  1111                           ;motor_control.c: 304: if(side_mem==3)set_directive(7);
  1112  001348  5026               	movf	_side_mem,w,c
  1113  00134A  0A03               	xorlw	3
  1114  00134C  1027               	iorwf	_side_mem+1,w,c
  1115  00134E  A4D8               	btfss	status,2,c
  1116  001350  D006               	goto	l2057
  1117  001352  0E00               	movlw	0
  1118  001354  6E1F               	movwf	set_directive@directive+1,c
  1119  001356  0E07               	movlw	7
  1120  001358  6E1E               	movwf	set_directive@directive,c
  1121  00135A  EC35  F00B         	call	_set_directive	;wreg free
  1122  00135E                     l2057:
  1123                           
  1124                           ;motor_control.c: 305: side_mem=2;
  1125  00135E  0E00               	movlw	0
  1126  001360  6E27               	movwf	_side_mem+1,c
  1127  001362  0E02               	movlw	2
  1128  001364  6E26               	movwf	_side_mem,c
  1129  001366                     l2059:
  1130                           
  1131                           ;motor_control.c: 307: }
  1132                           ;motor_control.c: 322: if(tmr_state==1 && ReadTimer0()>35000){
  1133  001366  042A               	decf	_tmr_state,w,c
  1134  001368  102B               	iorwf	_tmr_state+1,w,c
  1135  00136A  A4D8               	btfss	status,2,c
  1136  00136C  D0AA               	goto	l2109
  1137  00136E  EC8B  F00F         	call	_ReadTimer0	;wreg free
  1138  001372  0EB9               	movlw	185
  1139  001374  5C0F               	subwf	?_ReadTimer0,w,c
  1140  001376  0E88               	movlw	136
  1141  001378  5810               	subwfb	?_ReadTimer0+1,w,c
  1142  00137A  A0D8               	btfss	status,0,c
  1143  00137C  D0A2               	goto	l2109
  1144                           
  1145                           ;motor_control.c: 324: set_directive(0);
  1146  00137E  0E00               	movlw	0
  1147  001380  6E1F               	movwf	set_directive@directive+1,c
  1148  001382  0E00               	movlw	0
  1149  001384  6E1E               	movwf	set_directive@directive,c
  1150  001386  EC35  F00B         	call	_set_directive	;wreg free
  1151  00138A                     l408:
  1152  00138A  A4F2               	btfss	intcon,2,c	;volatile
  1153  00138C  D7FE               	goto	l408
  1154  00138E  EC8B  F00F         	call	_ReadTimer0	;wreg free
  1155  001392  0E20               	movlw	32
  1156  001394  5C0F               	subwf	?_ReadTimer0,w,c
  1157  001396  0E4E               	movlw	78
  1158  001398  5810               	subwfb	?_ReadTimer0+1,w,c
  1159  00139A  A0D8               	btfss	status,0,c
  1160  00139C  D7F6               	goto	l408
  1161                           
  1162                           ;motor_control.c: 326: clr_tmr();
  1163  00139E  ECAB  F00F         	call	_clr_tmr	;wreg free
  1164  0013A2  D08F               	goto	l2109
  1165  0013A4                     l2069:
  1166                           
  1167                           ;motor_control.c: 332: if(tmr_state==1 && side_mem!=2 && ReadTimer0() < 20000){
  1168  0013A4  042A               	decf	_tmr_state,w,c
  1169  0013A6  102B               	iorwf	_tmr_state+1,w,c
  1170  0013A8  A4D8               	btfss	status,2,c
  1171  0013AA  D026               	goto	l2085
  1172  0013AC  5026               	movf	_side_mem,w,c
  1173  0013AE  0A02               	xorlw	2
  1174  0013B0  1027               	iorwf	_side_mem+1,w,c
  1175  0013B2  B4D8               	btfsc	status,2,c
  1176  0013B4  D021               	goto	l2085
  1177  0013B6  EC8B  F00F         	call	_ReadTimer0	;wreg free
  1178  0013BA  0E20               	movlw	32
  1179  0013BC  5C0F               	subwf	?_ReadTimer0,w,c
  1180  0013BE  0E4E               	movlw	78
  1181  0013C0  5810               	subwfb	?_ReadTimer0+1,w,c
  1182  0013C2  B0D8               	btfsc	status,0,c
  1183  0013C4  D019               	goto	l2085
  1184                           
  1185                           ;motor_control.c: 333: if(side_mem==1)set_directive(0);
  1186  0013C6  0426               	decf	_side_mem,w,c
  1187  0013C8  1027               	iorwf	_side_mem+1,w,c
  1188  0013CA  A4D8               	btfss	status,2,c
  1189  0013CC  D006               	goto	l2079
  1190  0013CE  0E00               	movlw	0
  1191  0013D0  6E1F               	movwf	set_directive@directive+1,c
  1192  0013D2  0E00               	movlw	0
  1193  0013D4  6E1E               	movwf	set_directive@directive,c
  1194  0013D6  EC35  F00B         	call	_set_directive	;wreg free
  1195  0013DA                     l2079:
  1196                           
  1197                           ;motor_control.c: 334: if(side_mem==3)set_directive(7);
  1198  0013DA  5026               	movf	_side_mem,w,c
  1199  0013DC  0A03               	xorlw	3
  1200  0013DE  1027               	iorwf	_side_mem+1,w,c
  1201  0013E0  A4D8               	btfss	status,2,c
  1202  0013E2  D006               	goto	l2083
  1203  0013E4  0E00               	movlw	0
  1204  0013E6  6E1F               	movwf	set_directive@directive+1,c
  1205  0013E8  0E07               	movlw	7
  1206  0013EA  6E1E               	movwf	set_directive@directive,c
  1207  0013EC  EC35  F00B         	call	_set_directive	;wreg free
  1208  0013F0                     l2083:
  1209                           
  1210                           ;motor_control.c: 335: side_mem=2;
  1211  0013F0  0E00               	movlw	0
  1212  0013F2  6E27               	movwf	_side_mem+1,c
  1213  0013F4  0E02               	movlw	2
  1214  0013F6  6E26               	movwf	_side_mem,c
  1215  0013F8                     l2085:
  1216                           
  1217                           ;motor_control.c: 374: if(tmr_state!=1){
  1218  0013F8  042A               	decf	_tmr_state,w,c
  1219  0013FA  102B               	iorwf	_tmr_state+1,w,c
  1220  0013FC  B4D8               	btfsc	status,2,c
  1221  0013FE  D00D               	goto	l2093
  1222                           
  1223                           ;motor_control.c: 375: if(move_state!=4)set_directive(4);
  1224  001400  5024               	movf	_move_state,w,c
  1225  001402  0A04               	xorlw	4
  1226  001404  1025               	iorwf	_move_state+1,w,c
  1227  001406  B4D8               	btfsc	status,2,c
  1228  001408  D006               	goto	l2091
  1229  00140A  0E00               	movlw	0
  1230  00140C  6E1F               	movwf	set_directive@directive+1,c
  1231  00140E  0E04               	movlw	4
  1232  001410  6E1E               	movwf	set_directive@directive,c
  1233  001412  EC35  F00B         	call	_set_directive	;wreg free
  1234  001416                     l2091:
  1235                           
  1236                           ;motor_control.c: 376: start_tmr();
  1237  001416  EC42  F00F         	call	_start_tmr	;wreg free
  1238  00141A                     l2093:
  1239                           
  1240                           ;motor_control.c: 377: }
  1241                           ;motor_control.c: 379: if(tmr_state==1){
  1242  00141A  042A               	decf	_tmr_state,w,c
  1243  00141C  102B               	iorwf	_tmr_state+1,w,c
  1244  00141E  A4D8               	btfss	status,2,c
  1245  001420  D00F               	goto	l2103
  1246                           
  1247                           ;motor_control.c: 380: if(ReadTimer0()>15767){
  1248  001422  EC8B  F00F         	call	_ReadTimer0	;wreg free
  1249  001426  0E98               	movlw	152
  1250  001428  5C0F               	subwf	?_ReadTimer0,w,c
  1251  00142A  0E3D               	movlw	61
  1252  00142C  5810               	subwfb	?_ReadTimer0+1,w,c
  1253  00142E  A0D8               	btfss	status,0,c
  1254  001430  D007               	goto	l2103
  1255                           
  1256                           ;motor_control.c: 381: full_stp();
  1257  001432  ECB4  F00E         	call	_full_stp	;wreg free
  1258                           
  1259                           ;motor_control.c: 383: while(SeeLine.b.Center == 1)check_state();
  1260  001436  D002               	goto	l2101
  1261  001438                     l2099:
  1262  001438  ECBD  F00F         	call	_check_state	;wreg free
  1263  00143C                     l2101:
  1264  00143C  B42C               	btfsc	_SeeLine,2,c
  1265  00143E  D7FC               	goto	l2099
  1266  001440                     l2103:
  1267                           
  1268                           ;motor_control.c: 384: }
  1269                           ;motor_control.c: 385: }
  1270                           ;motor_control.c: 386: check_state();
  1271  001440  ECBD  F00F         	call	_check_state	;wreg free
  1272                           
  1273                           ;motor_control.c: 388: break;
  1274  001444  D03E               	goto	l2109
  1275  001446                     l2107:
  1276  001446  502C               	movf	_SeeLine,w,c
  1277  001448  0B1F               	andlw	31
  1278                           
  1279                           ; Switch size 1, requested type "space"
  1280                           ; Number of cases is 20, Range of values is 0 to 31
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte           61    31 (average)
  1284                           ;	Chosen strategy is simple_byte
  1285  00144A  0A00               	xorlw	0	; case 0
  1286  00144C  B4D8               	btfsc	status,2,c
  1287  00144E  D757               	goto	l2039
  1288  001450  0A01               	xorlw	1	; case 1
  1289  001452  B4D8               	btfsc	status,2,c
  1290  001454  D722               	goto	l2019
  1291  001456  0A03               	xorlw	3	; case 2
  1292  001458  B4D8               	btfsc	status,2,c
  1293  00145A  D707               	goto	l2011
  1294  00145C  0A01               	xorlw	1	; case 3
  1295  00145E  B4D8               	btfsc	status,2,c
  1296  001460  D733               	goto	l2027
  1297  001462  0A07               	xorlw	7	; case 4
  1298  001464  B4D8               	btfsc	status,2,c
  1299  001466  D61D               	goto	l1897
  1300  001468  0A01               	xorlw	1	; case 5
  1301  00146A  B4D8               	btfsc	status,2,c
  1302  00146C  D64E               	goto	l1917
  1303  00146E  0A03               	xorlw	3	; case 6
  1304  001470  B4D8               	btfsc	status,2,c
  1305  001472  D63F               	goto	l1913
  1306  001474  0A01               	xorlw	1	; case 7
  1307  001476  B4D8               	btfsc	status,2,c
  1308  001478  D67C               	goto	l1941
  1309  00147A  0A0F               	xorlw	15	; case 8
  1310  00147C  B4D8               	btfsc	status,2,c
  1311  00147E  D701               	goto	l2015
  1312  001480  0A04               	xorlw	4	; case 12
  1313  001482  B4D8               	btfsc	status,2,c
  1314  001484  D62A               	goto	l1909
  1315  001486  0A03               	xorlw	3	; case 15
  1316  001488  B4D8               	btfsc	status,2,c
  1317  00148A  D6A6               	goto	l1969
  1318  00148C  0A1F               	xorlw	31	; case 16
  1319  00148E  B4D8               	btfsc	status,2,c
  1320  001490  D710               	goto	l2023
  1321  001492  0A01               	xorlw	1	; case 17
  1322  001494  B4D8               	btfsc	status,2,c
  1323  001496  D786               	goto	l2069
  1324  001498  0A05               	xorlw	5	; case 20
  1325  00149A  B4D8               	btfsc	status,2,c
  1326  00149C  D60E               	goto	l1901
  1327  00149E  0A03               	xorlw	3	; case 23
  1328  0014A0  B4D8               	btfsc	status,2,c
  1329  0014A2  D6B3               	goto	l1983
  1330  0014A4  0A0F               	xorlw	15	; case 24
  1331  0014A6  B4D8               	btfsc	status,2,c
  1332  0014A8  D71B               	goto	l2033
  1333  0014AA  0A04               	xorlw	4	; case 28
  1334  0014AC  B4D8               	btfsc	status,2,c
  1335  0014AE  D644               	goto	l1927
  1336  0014B0  0A01               	xorlw	1	; case 29
  1337  0014B2  B4D8               	btfsc	status,2,c
  1338  0014B4  D6C0               	goto	l1997
  1339  0014B6  0A03               	xorlw	3	; case 30
  1340  0014B8  B4D8               	btfsc	status,2,c
  1341  0014BA  D678               	goto	l1955
  1342  0014BC  0A01               	xorlw	1	; case 31
  1343  0014BE  B4D8               	btfsc	status,2,c
  1344  0014C0  D79B               	goto	l2085
  1345  0014C2                     l2109:
  1346                           
  1347                           ;motor_control.c: 393: if(count<=5000){
  1348  0014C2  5021               	movf	_count+1,w,c
  1349  0014C4  0A80               	xorlw	128
  1350  0014C6  6EF3               	movwf	prodl,c
  1351  0014C8  0E93               	movlw	147
  1352  0014CA  5CF3               	subwf	prodl,w,c
  1353  0014CC  0E89               	movlw	137
  1354  0014CE  B4D8               	btfsc	status,2,c
  1355  0014D0  5C20               	subwf	_count,w,c
  1356  0014D2  B0D8               	btfsc	status,0,c
  1357  0014D4  D002               	goto	l425
  1358                           
  1359                           ;motor_control.c: 394: count++;
  1360  0014D6  4A20               	infsnz	_count,f,c
  1361  0014D8  2A21               	incf	_count+1,f,c
  1362  0014DA                     l425:
  1363  0014DA  0012               	return	
  1364  0014DC                     __end_of_motor_control:
  1365                           	opt stack 0
  1366                           prodl	equ	0xFF3
  1367                           intcon	equ	0xFF2
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           status	equ	0xFD8
  1371                           
  1372 ;; *************** function _start_tmr *****************
  1373 ;; Defined at:
  1374 ;;		line 45 in file "../motor_control.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;		None               void
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    2
  1395 ;; This function calls:
  1396 ;;		_WriteTimer0
  1397 ;; This function is called by:
  1398 ;;		_motor_control
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text2
  1403  001E84                     __ptext2:
  1404                           	opt stack 0
  1405  001E84                     _start_tmr:
  1406                           	opt stack 27
  1407                           
  1408                           ;motor_control.c: 46: TMR0IF = 0;
  1409                           
  1410                           ;incstack = 0
  1411  001E84  94F2               	bcf	intcon,2,c	;volatile
  1412                           
  1413                           ;motor_control.c: 47: WriteTimer0(0u);
  1414  001E86  0E00               	movlw	0
  1415  001E88  6E10               	movwf	WriteTimer0@timer0+1,c
  1416  001E8A  0E00               	movlw	0
  1417  001E8C  6E0F               	movwf	WriteTimer0@timer0,c
  1418  001E8E  EC82  F00F         	call	_WriteTimer0	;wreg free
  1419                           
  1420                           ;motor_control.c: 48: tmr_state = 1;
  1421  001E92  0E00               	movlw	0
  1422  001E94  6E2B               	movwf	_tmr_state+1,c
  1423  001E96  0E01               	movlw	1
  1424  001E98  6E2A               	movwf	_tmr_state,c
  1425  001E9A  0012               	return	
  1426  001E9C                     __end_of_start_tmr:
  1427                           	opt stack 0
  1428                           prodl	equ	0xFF3
  1429                           intcon	equ	0xFF2
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function _WriteTimer0 *****************
  1435 ;; Defined at:
  1436 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  timer0          2   14[COMRAM] unsigned int 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  timer           2   16[COMRAM] struct Timers
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		None
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;Total ram usage:        4 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_start_tmr
  1461 ;;		_start_tmr1
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text3
  1466  001F04                     __ptext3:
  1467                           	opt stack 0
  1468  001F04                     _WriteTimer0:
  1469                           	opt stack 27
  1470                           
  1471                           ;incstack = 0
  1472  001F04  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1473  001F08  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1474  001F0C  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1475  001F10  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1476  001F14  0012               	return	
  1477  001F16                     __end_of_WriteTimer0:
  1478                           	opt stack 0
  1479                           prodl	equ	0xFF3
  1480                           intcon	equ	0xFF2
  1481                           postinc0	equ	0xFEE
  1482                           wreg	equ	0xFE8
  1483                           status	equ	0xFD8
  1484                           
  1485 ;; *************** function _clr_tmr *****************
  1486 ;; Defined at:
  1487 ;;		line 52 in file "../motor_control.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;		None               void
  1494 ;; Registers used:
  1495 ;;		wreg, status,2
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_motor_control
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text4
  1516  001F56                     __ptext4:
  1517                           	opt stack 0
  1518  001F56                     _clr_tmr:
  1519                           	opt stack 28
  1520                           
  1521                           ;motor_control.c: 53: TMR0IF = 0;
  1522                           
  1523                           ;incstack = 0
  1524  001F56  94F2               	bcf	intcon,2,c	;volatile
  1525                           
  1526                           ;motor_control.c: 54: tmr_state = 0;
  1527  001F58  0E00               	movlw	0
  1528  001F5A  6E2B               	movwf	_tmr_state+1,c
  1529  001F5C  0E00               	movlw	0
  1530  001F5E  6E2A               	movwf	_tmr_state,c
  1531  001F60  0012               	return	
  1532  001F62                     __end_of_clr_tmr:
  1533                           	opt stack 0
  1534                           prodl	equ	0xFF3
  1535                           intcon	equ	0xFF2
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _check_state *****************
  1541 ;; Defined at:
  1542 ;;		line 101 in file "../motor_control.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2  312[COMRAM] int 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    4
  1563 ;; This function calls:
  1564 ;;		_check_sensors
  1565 ;;		_set_leds
  1566 ;; This function is called by:
  1567 ;;		_motor_control
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text5
  1572  001F7A                     __ptext5:
  1573                           	opt stack 0
  1574  001F7A                     _check_state:
  1575                           	opt stack 25
  1576                           
  1577                           ;motor_control.c: 102: check_sensors();
  1578                           
  1579                           ;incstack = 0
  1580  001F7A  ECD3  F00A         	call	_check_sensors	;wreg free
  1581                           
  1582                           ;motor_control.c: 103: set_leds();
  1583  001F7E  EC29  F00C         	call	_set_leds	;wreg free
  1584  001F82  0012               	return	
  1585  001F84                     __end_of_check_state:
  1586                           	opt stack 0
  1587                           prodl	equ	0xFF3
  1588                           intcon	equ	0xFF2
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _set_leds *****************
  1594 ;; Defined at:
  1595 ;;		line 254 in file "../sumovore.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;		None               void
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;Total ram usage:        1 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;;		_check_state
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text6
  1625  001852                     __ptext6:
  1626                           	opt stack 0
  1627  001852                     _set_leds:
  1628                           	opt stack 29
  1629                           
  1630                           ;sumovore.c: 256: PORTDbits.RD0=!SeeLine.b.Left;
  1631                           
  1632                           ;incstack = 0
  1633  001852  B82C               	btfsc	_SeeLine,4,c
  1634  001854  D002               	goto	u210
  1635  001856  0E01               	movlw	1
  1636  001858  D001               	goto	u216
  1637  00185A                     u210:
  1638  00185A  0E00               	movlw	0
  1639  00185C                     u216:
  1640  00185C  6E0F               	movwf	??_set_leds& (0+255),c
  1641  00185E  5083               	movf	3971,w,c	;volatile
  1642  001860  180F               	xorwf	??_set_leds,w,c
  1643  001862  0BFE               	andlw	-2
  1644  001864  180F               	xorwf	??_set_leds,w,c
  1645  001866  6E83               	movwf	3971,c	;volatile
  1646                           
  1647                           ;sumovore.c: 257: PORTDbits.RD1=!SeeLine.b.CntLeft;
  1648  001868  B62C               	btfsc	_SeeLine,3,c
  1649  00186A  D002               	goto	u220
  1650  00186C  0E01               	movlw	1
  1651  00186E  D001               	goto	u226
  1652  001870                     u220:
  1653  001870  0E00               	movlw	0
  1654  001872                     u226:
  1655  001872  6E0F               	movwf	??_set_leds& (0+255),c
  1656  001874  460F               	rlncf	??_set_leds,f,c
  1657  001876  5083               	movf	3971,w,c	;volatile
  1658  001878  180F               	xorwf	??_set_leds,w,c
  1659  00187A  0BFD               	andlw	-3
  1660  00187C  180F               	xorwf	??_set_leds,w,c
  1661  00187E  6E83               	movwf	3971,c	;volatile
  1662                           
  1663                           ;sumovore.c: 258: PORTDbits.RD2=!SeeLine.b.Center;
  1664  001880  B42C               	btfsc	_SeeLine,2,c
  1665  001882  D002               	goto	u230
  1666  001884  0E01               	movlw	1
  1667  001886  D001               	goto	u236
  1668  001888                     u230:
  1669  001888  0E00               	movlw	0
  1670  00188A                     u236:
  1671  00188A  6E0F               	movwf	??_set_leds& (0+255),c
  1672  00188C  460F               	rlncf	??_set_leds,f,c
  1673  00188E  460F               	rlncf	??_set_leds,f,c
  1674  001890  5083               	movf	3971,w,c	;volatile
  1675  001892  180F               	xorwf	??_set_leds,w,c
  1676  001894  0BFB               	andlw	-5
  1677  001896  180F               	xorwf	??_set_leds,w,c
  1678  001898  6E83               	movwf	3971,c	;volatile
  1679                           
  1680                           ;sumovore.c: 259: PORTDbits.RD3=!SeeLine.b.CntRight;
  1681  00189A  B22C               	btfsc	_SeeLine,1,c
  1682  00189C  D002               	goto	u240
  1683  00189E  0E01               	movlw	1
  1684  0018A0  D001               	goto	u246
  1685  0018A2                     u240:
  1686  0018A2  0E00               	movlw	0
  1687  0018A4                     u246:
  1688  0018A4  6E0F               	movwf	??_set_leds& (0+255),c
  1689  0018A6  460F               	rlncf	??_set_leds,f,c
  1690  0018A8  460F               	rlncf	??_set_leds,f,c
  1691  0018AA  460F               	rlncf	??_set_leds,f,c
  1692  0018AC  5083               	movf	3971,w,c	;volatile
  1693  0018AE  180F               	xorwf	??_set_leds,w,c
  1694  0018B0  0BF7               	andlw	-9
  1695  0018B2  180F               	xorwf	??_set_leds,w,c
  1696  0018B4  6E83               	movwf	3971,c	;volatile
  1697                           
  1698                           ;sumovore.c: 260: PORTDbits.RD4=!SeeLine.b.Right;
  1699  0018B6  B02C               	btfsc	_SeeLine,0,c
  1700  0018B8  D002               	goto	u250
  1701  0018BA  0E01               	movlw	1
  1702  0018BC  D001               	goto	u256
  1703  0018BE                     u250:
  1704  0018BE  0E00               	movlw	0
  1705  0018C0                     u256:
  1706  0018C0  6E0F               	movwf	??_set_leds& (0+255),c
  1707  0018C2  3A0F               	swapf	??_set_leds,f,c
  1708  0018C4  5083               	movf	3971,w,c	;volatile
  1709  0018C6  180F               	xorwf	??_set_leds,w,c
  1710  0018C8  0BEF               	andlw	-17
  1711  0018CA  180F               	xorwf	??_set_leds,w,c
  1712  0018CC  6E83               	movwf	3971,c	;volatile
  1713  0018CE  0012               	return	
  1714  0018D0                     __end_of_set_leds:
  1715                           	opt stack 0
  1716                           prodl	equ	0xFF3
  1717                           intcon	equ	0xFF2
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           status	equ	0xFD8
  1721                           
  1722 ;; *************** function _check_sensors *****************
  1723 ;; Defined at:
  1724 ;;		line 240 in file "../sumovore.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;		None               void
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        1 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    3
  1745 ;; This function calls:
  1746 ;;		_adc
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;;		_check_state
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text7
  1754  0015A6                     __ptext7:
  1755                           	opt stack 0
  1756  0015A6                     _check_sensors:
  1757                           	opt stack 25
  1758                           
  1759                           ;sumovore.c: 242: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  1760                           
  1761                           ;incstack = 0
  1762  0015A6  0E87               	movlw	135
  1763  0015A8  ECC7  F00E         	call	_adc
  1764  0015AC  5011               	movf	?_adc,w,c
  1765  0015AE  5C28               	subwf	_threshold,w,c
  1766  0015B0  5012               	movf	?_adc+1,w,c
  1767  0015B2  5829               	subwfb	_threshold+1,w,c
  1768  0015B4  B0D8               	btfsc	status,0,c
  1769  0015B6  D002               	goto	u160
  1770  0015B8  0E01               	movlw	1
  1771  0015BA  D001               	goto	u166
  1772  0015BC                     u160:
  1773  0015BC  0E00               	movlw	0
  1774  0015BE                     u166:
  1775  0015BE  6E14               	movwf	??_check_sensors& (0+255),c
  1776  0015C0  3A14               	swapf	??_check_sensors,f,c
  1777  0015C2  502C               	movf	_SeeLine,w,c
  1778  0015C4  1814               	xorwf	??_check_sensors,w,c
  1779  0015C6  0BEF               	andlw	-17
  1780  0015C8  1814               	xorwf	??_check_sensors,w,c
  1781  0015CA  6E2C               	movwf	_SeeLine,c
  1782                           
  1783                           ;sumovore.c: 243: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  1784  0015CC  0E8F               	movlw	143
  1785  0015CE  ECC7  F00E         	call	_adc
  1786  0015D2  5011               	movf	?_adc,w,c
  1787  0015D4  5C28               	subwf	_threshold,w,c
  1788  0015D6  5012               	movf	?_adc+1,w,c
  1789  0015D8  5829               	subwfb	_threshold+1,w,c
  1790  0015DA  B0D8               	btfsc	status,0,c
  1791  0015DC  D002               	goto	u170
  1792  0015DE  0E01               	movlw	1
  1793  0015E0  D001               	goto	u176
  1794  0015E2                     u170:
  1795  0015E2  0E00               	movlw	0
  1796  0015E4                     u176:
  1797  0015E4  6E14               	movwf	??_check_sensors& (0+255),c
  1798  0015E6  4614               	rlncf	??_check_sensors,f,c
  1799  0015E8  4614               	rlncf	??_check_sensors,f,c
  1800  0015EA  4614               	rlncf	??_check_sensors,f,c
  1801  0015EC  502C               	movf	_SeeLine,w,c
  1802  0015EE  1814               	xorwf	??_check_sensors,w,c
  1803  0015F0  0BF7               	andlw	-9
  1804  0015F2  1814               	xorwf	??_check_sensors,w,c
  1805  0015F4  6E2C               	movwf	_SeeLine,c
  1806                           
  1807                           ;sumovore.c: 244: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  1808  0015F6  0E97               	movlw	151
  1809  0015F8  ECC7  F00E         	call	_adc
  1810  0015FC  5011               	movf	?_adc,w,c
  1811  0015FE  5C28               	subwf	_threshold,w,c
  1812  001600  5012               	movf	?_adc+1,w,c
  1813  001602  5829               	subwfb	_threshold+1,w,c
  1814  001604  B0D8               	btfsc	status,0,c
  1815  001606  D002               	goto	u180
  1816  001608  0E01               	movlw	1
  1817  00160A  D001               	goto	u186
  1818  00160C                     u180:
  1819  00160C  0E00               	movlw	0
  1820  00160E                     u186:
  1821  00160E  6E14               	movwf	??_check_sensors& (0+255),c
  1822  001610  4614               	rlncf	??_check_sensors,f,c
  1823  001612  4614               	rlncf	??_check_sensors,f,c
  1824  001614  502C               	movf	_SeeLine,w,c
  1825  001616  1814               	xorwf	??_check_sensors,w,c
  1826  001618  0BFB               	andlw	-5
  1827  00161A  1814               	xorwf	??_check_sensors,w,c
  1828  00161C  6E2C               	movwf	_SeeLine,c
  1829                           
  1830                           ;sumovore.c: 245: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  1831  00161E  0E9F               	movlw	159
  1832  001620  ECC7  F00E         	call	_adc
  1833  001624  5011               	movf	?_adc,w,c
  1834  001626  5C28               	subwf	_threshold,w,c
  1835  001628  5012               	movf	?_adc+1,w,c
  1836  00162A  5829               	subwfb	_threshold+1,w,c
  1837  00162C  B0D8               	btfsc	status,0,c
  1838  00162E  D002               	goto	u190
  1839  001630  0E01               	movlw	1
  1840  001632  D001               	goto	u196
  1841  001634                     u190:
  1842  001634  0E00               	movlw	0
  1843  001636                     u196:
  1844  001636  6E14               	movwf	??_check_sensors& (0+255),c
  1845  001638  4614               	rlncf	??_check_sensors,f,c
  1846  00163A  502C               	movf	_SeeLine,w,c
  1847  00163C  1814               	xorwf	??_check_sensors,w,c
  1848  00163E  0BFD               	andlw	-3
  1849  001640  1814               	xorwf	??_check_sensors,w,c
  1850  001642  6E2C               	movwf	_SeeLine,c
  1851                           
  1852                           ;sumovore.c: 246: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  1853  001644  0EA7               	movlw	167
  1854  001646  ECC7  F00E         	call	_adc
  1855  00164A  5011               	movf	?_adc,w,c
  1856  00164C  5C28               	subwf	_threshold,w,c
  1857  00164E  5012               	movf	?_adc+1,w,c
  1858  001650  5829               	subwfb	_threshold+1,w,c
  1859  001652  B0D8               	btfsc	status,0,c
  1860  001654  D002               	goto	u200
  1861  001656  0E01               	movlw	1
  1862  001658  D001               	goto	u206
  1863  00165A                     u200:
  1864  00165A  0E00               	movlw	0
  1865  00165C                     u206:
  1866  00165C  6E14               	movwf	??_check_sensors& (0+255),c
  1867  00165E  502C               	movf	_SeeLine,w,c
  1868  001660  1814               	xorwf	??_check_sensors,w,c
  1869  001662  0BFE               	andlw	-2
  1870  001664  1814               	xorwf	??_check_sensors,w,c
  1871  001666  6E2C               	movwf	_SeeLine,c
  1872  001668  0012               	return	
  1873  00166A                     __end_of_check_sensors:
  1874                           	opt stack 0
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function _adc *****************
  1882 ;; Defined at:
  1883 ;;		line 228 in file "../sumovore.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  channel         1    wreg     unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  channel         1   18[COMRAM] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   16[COMRAM] unsigned int 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;Total ram usage:        3 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    2
  1904 ;; This function calls:
  1905 ;;		_BusyADC
  1906 ;;		_ConvertADC
  1907 ;;		_ReadADC
  1908 ;;		_SetChanADC
  1909 ;; This function is called by:
  1910 ;;		_check_sensors
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text8
  1915  001D8E                     __ptext8:
  1916                           	opt stack 0
  1917  001D8E                     _adc:
  1918                           	opt stack 25
  1919                           
  1920                           ;incstack = 0
  1921                           ;adc@channel stored from wreg
  1922  001D8E  6E13               	movwf	adc@channel,c
  1923                           
  1924                           ;sumovore.c: 230: SetChanADC( channel );
  1925  001D90  5013               	movf	adc@channel,w,c
  1926  001D92  EC5A  F00F         	call	_SetChanADC
  1927                           
  1928                           ;sumovore.c: 231: ConvertADC();
  1929  001D96  ECDE  F00F         	call	_ConvertADC	;wreg free
  1930  001D9A                     l1399:
  1931  001D9A  ECB1  F00F         	call	_BusyADC	;wreg free
  1932  001D9E  0900               	iorlw	0
  1933  001DA0  A4D8               	btfss	status,2,c
  1934  001DA2  D7FB               	goto	l1399
  1935                           
  1936                           ;sumovore.c: 234: return ReadADC();
  1937  001DA4  ECC2  F00F         	call	_ReadADC	;wreg free
  1938  001DA8  C00F  F011         	movff	?_ReadADC,?_adc
  1939  001DAC  C010  F012         	movff	?_ReadADC+1,?_adc+1
  1940  001DB0  0012               	return	
  1941  001DB2                     __end_of_adc:
  1942                           	opt stack 0
  1943                           prodl	equ	0xFF3
  1944                           intcon	equ	0xFF2
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _SetChanADC *****************
  1950 ;; Defined at:
  1951 ;;		line 30 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcsetch.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  channel         1    wreg     unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  channel         1   15[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        2 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_adc
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text9
  1980  001EB4                     __ptext9:
  1981                           	opt stack 0
  1982  001EB4                     _SetChanADC:
  1983                           	opt stack 25
  1984                           
  1985                           ;incstack = 0
  1986                           ;SetChanADC@channel stored from wreg
  1987  001EB4  6E10               	movwf	SetChanADC@channel,c
  1988  001EB6  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  1989  001EBA  0EC3               	movlw	195
  1990  001EBC  160F               	andwf	??_SetChanADC,f,c
  1991  001EBE  90D8               	bcf	status,0,c
  1992  001EC0  3010               	rrcf	SetChanADC@channel,w,c
  1993  001EC2  0B3C               	andlw	60
  1994  001EC4  100F               	iorwf	??_SetChanADC,w,c
  1995  001EC6  6EC2               	movwf	4034,c	;volatile
  1996  001EC8  0012               	return	
  1997  001ECA                     __end_of_SetChanADC:
  1998                           	opt stack 0
  1999                           prodl	equ	0xFF3
  2000                           intcon	equ	0xFF2
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _ReadADC *****************
  2006 ;; Defined at:
  2007 ;;		line 24 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcread.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2   14[COMRAM] int 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_adc
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text10
  2036  001F84                     __ptext10:
  2037                           	opt stack 0
  2038  001F84                     _ReadADC:
  2039                           	opt stack 25
  2040                           
  2041                           ;incstack = 0
  2042  001F84  50C4               	movf	4036,w,c	;volatile
  2043  001F86  6E10               	movwf	?_ReadADC+1,c
  2044  001F88  50C3               	movf	4035,w,c	;volatile
  2045  001F8A  6E0F               	movwf	?_ReadADC,c
  2046  001F8C  0012               	return	
  2047  001F8E                     __end_of_ReadADC:
  2048                           	opt stack 0
  2049                           prodl	equ	0xFF3
  2050                           intcon	equ	0xFF2
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _ConvertADC *****************
  2056 ;; Defined at:
  2057 ;;		line 22 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		None
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_adc
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text11
  2086  001FBC                     __ptext11:
  2087                           	opt stack 0
  2088  001FBC                     _ConvertADC:
  2089                           	opt stack 25
  2090                           
  2091                           ;incstack = 0
  2092  001FBC  82C2               	bsf	4034,1,c	;volatile
  2093  001FBE  0012               	return	
  2094  001FC0                     __end_of_ConvertADC:
  2095                           	opt stack 0
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _BusyADC *****************
  2103 ;; Defined at:
  2104 ;;		line 26 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      unsigned char 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_adc
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text12
  2133  001F62                     __ptext12:
  2134                           	opt stack 0
  2135  001F62                     _BusyADC:
  2136                           	opt stack 25
  2137                           
  2138                           ;incstack = 0
  2139  001F62  A2C2               	btfss	4034,1,c	;volatile
  2140  001F64  D002               	goto	u100
  2141  001F66  0E01               	movlw	1
  2142  001F68  D001               	goto	l554
  2143  001F6A                     u100:
  2144  001F6A  0E00               	movlw	0
  2145  001F6C                     l554:
  2146  001F6C  0012               	return	
  2147  001F6E                     __end_of_BusyADC:
  2148                           	opt stack 0
  2149                           prodl	equ	0xFF3
  2150                           intcon	equ	0xFF2
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _change_track *****************
  2156 ;; Defined at:
  2157 ;;		line 116 in file "../motor_control.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    5
  2178 ;; This function calls:
  2179 ;;		_clr_mem
  2180 ;;		_set_directive
  2181 ;; This function is called by:
  2182 ;;		_motor_control
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text13
  2187  0019B6                     __ptext13:
  2188                           	opt stack 0
  2189  0019B6                     _change_track:
  2190                           	opt stack 24
  2191                           
  2192                           ;motor_control.c: 117: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2193                           
  2194                           ;incstack = 0
  2195  0019B6  B82C               	btfsc	_SeeLine,4,c
  2196  0019B8  B62C               	btfsc	_SeeLine,3,c
  2197  0019BA  D014               	goto	l1817
  2198  0019BC  A42C               	btfss	_SeeLine,2,c
  2199  0019BE  D012               	goto	l1817
  2200                           
  2201                           ;motor_control.c: 119: set_directive(1);
  2202  0019C0  0E00               	movlw	0
  2203  0019C2  6E1F               	movwf	set_directive@directive+1,c
  2204  0019C4  0E01               	movlw	1
  2205  0019C6  6E1E               	movwf	set_directive@directive,c
  2206  0019C8  EC35  F00B         	call	_set_directive	;wreg free
  2207  0019CC                     l323:
  2208  0019CC  B42C               	btfsc	_SeeLine,2,c
  2209  0019CE  D7FE               	goto	l323
  2210                           
  2211                           ;motor_control.c: 121: set_directive(1);
  2212  0019D0  0E00               	movlw	0
  2213  0019D2  6E1F               	movwf	set_directive@directive+1,c
  2214  0019D4  0E01               	movlw	1
  2215  0019D6  6E1E               	movwf	set_directive@directive,c
  2216  0019D8  EC35  F00B         	call	_set_directive	;wreg free
  2217  0019DC                     l326:
  2218  0019DC  A42C               	btfss	_SeeLine,2,c
  2219  0019DE  D7FE               	goto	l326
  2220                           
  2221                           ;motor_control.c: 123: clr_mem();
  2222  0019E0  ECC7  F00F         	call	_clr_mem	;wreg free
  2223  0019E4                     l1817:
  2224                           
  2225                           ;motor_control.c: 124: }
  2226                           ;motor_control.c: 125: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2227  0019E4  B82C               	btfsc	_SeeLine,4,c
  2228  0019E6  B62C               	btfsc	_SeeLine,3,c
  2229  0019E8  D014               	goto	l336
  2230  0019EA  A42C               	btfss	_SeeLine,2,c
  2231  0019EC  D012               	goto	l336
  2232                           
  2233                           ;motor_control.c: 127: set_directive(6);
  2234  0019EE  0E00               	movlw	0
  2235  0019F0  6E1F               	movwf	set_directive@directive+1,c
  2236  0019F2  0E06               	movlw	6
  2237  0019F4  6E1E               	movwf	set_directive@directive,c
  2238  0019F6  EC35  F00B         	call	_set_directive	;wreg free
  2239  0019FA                     l330:
  2240  0019FA  B42C               	btfsc	_SeeLine,2,c
  2241  0019FC  D7FE               	goto	l330
  2242                           
  2243                           ;motor_control.c: 129: set_directive(6);
  2244  0019FE  0E00               	movlw	0
  2245  001A00  6E1F               	movwf	set_directive@directive+1,c
  2246  001A02  0E06               	movlw	6
  2247  001A04  6E1E               	movwf	set_directive@directive,c
  2248  001A06  EC35  F00B         	call	_set_directive	;wreg free
  2249  001A0A                     l333:
  2250  001A0A  A42C               	btfss	_SeeLine,2,c
  2251  001A0C  D7FE               	goto	l333
  2252                           
  2253                           ;motor_control.c: 131: clr_mem();
  2254  001A0E  ECC7  F00F         	call	_clr_mem	;wreg free
  2255  001A12                     l336:
  2256  001A12  0012               	return	
  2257  001A14                     __end_of_change_track:
  2258                           	opt stack 0
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _set_directive *****************
  2266 ;; Defined at:
  2267 ;;		line 63 in file "../motor_control.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  directive       2   29[COMRAM] int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;Total ram usage:        2 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    4
  2288 ;; This function calls:
  2289 ;;		_full_stp
  2290 ;;		_pirouette_left
  2291 ;;		_pirouette_right
  2292 ;;		_spin_left
  2293 ;;		_spin_right
  2294 ;;		_straight_fwd
  2295 ;;		_turn_left
  2296 ;;		_turn_right
  2297 ;; This function is called by:
  2298 ;;		_change_track
  2299 ;;		_motor_control
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text14
  2304  00166A                     __ptext14:
  2305                           	opt stack 0
  2306  00166A                     _set_directive:
  2307                           	opt stack 25
  2308                           
  2309                           ;motor_control.c: 66: if(directive==0){
  2310                           
  2311                           ;incstack = 0
  2312  00166A  501F               	movf	set_directive@directive+1,w,c
  2313  00166C  101E               	iorwf	set_directive@directive,w,c
  2314  00166E  A4D8               	btfss	status,2,c
  2315  001670  D006               	goto	l1615
  2316                           
  2317                           ;motor_control.c: 67: pirouette_left();
  2318  001672  ECA1  F00E         	call	_pirouette_left	;wreg free
  2319                           
  2320                           ;motor_control.c: 68: move_state=0;
  2321  001676  0E00               	movlw	0
  2322  001678  6E25               	movwf	_move_state+1,c
  2323  00167A  0E00               	movlw	0
  2324  00167C  6E24               	movwf	_move_state,c
  2325  00167E                     l1615:
  2326                           
  2327                           ;motor_control.c: 69: }
  2328                           ;motor_control.c: 70: if(directive==1){
  2329  00167E  041E               	decf	set_directive@directive,w,c
  2330  001680  101F               	iorwf	set_directive@directive+1,w,c
  2331  001682  A4D8               	btfss	status,2,c
  2332  001684  D006               	goto	l1621
  2333                           
  2334                           ;motor_control.c: 71: spin_left();
  2335  001686  EC7B  F00E         	call	_spin_left	;wreg free
  2336                           
  2337                           ;motor_control.c: 72: move_state=1;
  2338  00168A  0E00               	movlw	0
  2339  00168C  6E25               	movwf	_move_state+1,c
  2340  00168E  0E01               	movlw	1
  2341  001690  6E24               	movwf	_move_state,c
  2342  001692                     l1621:
  2343                           
  2344                           ;motor_control.c: 73: }
  2345                           ;motor_control.c: 74: if(directive==2){
  2346  001692  501E               	movf	set_directive@directive,w,c
  2347  001694  0A02               	xorlw	2
  2348  001696  101F               	iorwf	set_directive@directive+1,w,c
  2349  001698  A4D8               	btfss	status,2,c
  2350  00169A  D006               	goto	l1627
  2351                           
  2352                           ;motor_control.c: 75: turn_left();
  2353  00169C  EC42  F00E         	call	_turn_left	;wreg free
  2354                           
  2355                           ;motor_control.c: 76: move_state=2;
  2356  0016A0  0E00               	movlw	0
  2357  0016A2  6E25               	movwf	_move_state+1,c
  2358  0016A4  0E02               	movlw	2
  2359  0016A6  6E24               	movwf	_move_state,c
  2360  0016A8                     l1627:
  2361                           
  2362                           ;motor_control.c: 77: }
  2363                           ;motor_control.c: 78: if(directive==3){
  2364  0016A8  501E               	movf	set_directive@directive,w,c
  2365  0016AA  0A03               	xorlw	3
  2366  0016AC  101F               	iorwf	set_directive@directive+1,w,c
  2367  0016AE  A4D8               	btfss	status,2,c
  2368  0016B0  D006               	goto	l1633
  2369                           
  2370                           ;motor_control.c: 79: full_stp();
  2371  0016B2  ECB4  F00E         	call	_full_stp	;wreg free
  2372                           
  2373                           ;motor_control.c: 80: move_state=3;
  2374  0016B6  0E00               	movlw	0
  2375  0016B8  6E25               	movwf	_move_state+1,c
  2376  0016BA  0E03               	movlw	3
  2377  0016BC  6E24               	movwf	_move_state,c
  2378  0016BE                     l1633:
  2379                           
  2380                           ;motor_control.c: 81: }
  2381                           ;motor_control.c: 82: if(directive==4){
  2382  0016BE  501E               	movf	set_directive@directive,w,c
  2383  0016C0  0A04               	xorlw	4
  2384  0016C2  101F               	iorwf	set_directive@directive+1,w,c
  2385  0016C4  A4D8               	btfss	status,2,c
  2386  0016C6  D006               	goto	l1639
  2387                           
  2388                           ;motor_control.c: 83: straight_fwd();
  2389  0016C8  EC55  F00E         	call	_straight_fwd	;wreg free
  2390                           
  2391                           ;motor_control.c: 84: move_state=4;
  2392  0016CC  0E00               	movlw	0
  2393  0016CE  6E25               	movwf	_move_state+1,c
  2394  0016D0  0E04               	movlw	4
  2395  0016D2  6E24               	movwf	_move_state,c
  2396  0016D4                     l1639:
  2397                           
  2398                           ;motor_control.c: 85: }
  2399                           ;motor_control.c: 86: if(directive==5){
  2400  0016D4  501E               	movf	set_directive@directive,w,c
  2401  0016D6  0A05               	xorlw	5
  2402  0016D8  101F               	iorwf	set_directive@directive+1,w,c
  2403  0016DA  A4D8               	btfss	status,2,c
  2404  0016DC  D006               	goto	l1645
  2405                           
  2406                           ;motor_control.c: 87: turn_right();
  2407  0016DE  EC2F  F00E         	call	_turn_right	;wreg free
  2408                           
  2409                           ;motor_control.c: 88: move_state=5;
  2410  0016E2  0E00               	movlw	0
  2411  0016E4  6E25               	movwf	_move_state+1,c
  2412  0016E6  0E05               	movlw	5
  2413  0016E8  6E24               	movwf	_move_state,c
  2414  0016EA                     l1645:
  2415                           
  2416                           ;motor_control.c: 89: }
  2417                           ;motor_control.c: 90: if(directive==6){
  2418  0016EA  501E               	movf	set_directive@directive,w,c
  2419  0016EC  0A06               	xorlw	6
  2420  0016EE  101F               	iorwf	set_directive@directive+1,w,c
  2421  0016F0  A4D8               	btfss	status,2,c
  2422  0016F2  D006               	goto	l1651
  2423                           
  2424                           ;motor_control.c: 91: spin_right();
  2425  0016F4  EC68  F00E         	call	_spin_right	;wreg free
  2426                           
  2427                           ;motor_control.c: 92: move_state=6;
  2428  0016F8  0E00               	movlw	0
  2429  0016FA  6E25               	movwf	_move_state+1,c
  2430  0016FC  0E06               	movlw	6
  2431  0016FE  6E24               	movwf	_move_state,c
  2432  001700                     l1651:
  2433                           
  2434                           ;motor_control.c: 93: }
  2435                           ;motor_control.c: 94: if(directive==7){
  2436  001700  501E               	movf	set_directive@directive,w,c
  2437  001702  0A07               	xorlw	7
  2438  001704  101F               	iorwf	set_directive@directive+1,w,c
  2439  001706  A4D8               	btfss	status,2,c
  2440  001708  D006               	goto	l310
  2441                           
  2442                           ;motor_control.c: 95: pirouette_right();
  2443  00170A  EC8E  F00E         	call	_pirouette_right	;wreg free
  2444                           
  2445                           ;motor_control.c: 96: move_state=7;
  2446  00170E  0E00               	movlw	0
  2447  001710  6E25               	movwf	_move_state+1,c
  2448  001712  0E07               	movlw	7
  2449  001714  6E24               	movwf	_move_state,c
  2450  001716                     l310:
  2451  001716  0012               	return	
  2452  001718                     __end_of_set_directive:
  2453                           	opt stack 0
  2454                           prodl	equ	0xFF3
  2455                           intcon	equ	0xFF2
  2456                           postinc0	equ	0xFEE
  2457                           wreg	equ	0xFE8
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _turn_right *****************
  2461 ;; Defined at:
  2462 ;;		line 429 in file "../motor_control.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;		None               void
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    3
  2483 ;; This function calls:
  2484 ;;		_set_motor_speed
  2485 ;; This function is called by:
  2486 ;;		_set_directive
  2487 ;;		_follow_simple_curves
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text15
  2492  001C5E                     __ptext15:
  2493                           	opt stack 0
  2494  001C5E                     _turn_right:
  2495                           	opt stack 25
  2496                           
  2497                           ;motor_control.c: 431: set_motor_speed(left, slow, 0);
  2498                           
  2499                           ;incstack = 0
  2500  001C5E  0E04               	movlw	4
  2501  001C60  6E15               	movwf	set_motor_speed@motor_speed,c
  2502  001C62  0E00               	movlw	0
  2503  001C64  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2504  001C66  0E00               	movlw	0
  2505  001C68  6E16               	movwf	set_motor_speed@speed_modifier,c
  2506  001C6A  0E00               	movlw	0
  2507  001C6C  EC6E  F00A         	call	_set_motor_speed
  2508                           
  2509                           ;motor_control.c: 432: set_motor_speed(right, stop, 0);
  2510  001C70  0E03               	movlw	3
  2511  001C72  6E15               	movwf	set_motor_speed@motor_speed,c
  2512  001C74  0E00               	movlw	0
  2513  001C76  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2514  001C78  0E00               	movlw	0
  2515  001C7A  6E16               	movwf	set_motor_speed@speed_modifier,c
  2516  001C7C  0E01               	movlw	1
  2517  001C7E  EC6E  F00A         	call	_set_motor_speed
  2518  001C82  0012               	return	
  2519  001C84                     __end_of_turn_right:
  2520                           	opt stack 0
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _turn_left *****************
  2528 ;; Defined at:
  2529 ;;		line 414 in file "../motor_control.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    3
  2550 ;; This function calls:
  2551 ;;		_set_motor_speed
  2552 ;; This function is called by:
  2553 ;;		_set_directive
  2554 ;;		_follow_simple_curves
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text16
  2559  001C84                     __ptext16:
  2560                           	opt stack 0
  2561  001C84                     _turn_left:
  2562                           	opt stack 25
  2563                           
  2564                           ;motor_control.c: 416: set_motor_speed(left, stop, 0);
  2565                           
  2566                           ;incstack = 0
  2567  001C84  0E03               	movlw	3
  2568  001C86  6E15               	movwf	set_motor_speed@motor_speed,c
  2569  001C88  0E00               	movlw	0
  2570  001C8A  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2571  001C8C  0E00               	movlw	0
  2572  001C8E  6E16               	movwf	set_motor_speed@speed_modifier,c
  2573  001C90  0E00               	movlw	0
  2574  001C92  EC6E  F00A         	call	_set_motor_speed
  2575                           
  2576                           ;motor_control.c: 417: set_motor_speed(right, slow, 0);
  2577  001C96  0E04               	movlw	4
  2578  001C98  6E15               	movwf	set_motor_speed@motor_speed,c
  2579  001C9A  0E00               	movlw	0
  2580  001C9C  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2581  001C9E  0E00               	movlw	0
  2582  001CA0  6E16               	movwf	set_motor_speed@speed_modifier,c
  2583  001CA2  0E01               	movlw	1
  2584  001CA4  EC6E  F00A         	call	_set_motor_speed
  2585  001CA8  0012               	return	
  2586  001CAA                     __end_of_turn_left:
  2587                           	opt stack 0
  2588                           prodl	equ	0xFF3
  2589                           intcon	equ	0xFF2
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function _straight_fwd *****************
  2595 ;; Defined at:
  2596 ;;		line 419 in file "../motor_control.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    3
  2617 ;; This function calls:
  2618 ;;		_set_motor_speed
  2619 ;; This function is called by:
  2620 ;;		_set_directive
  2621 ;;		_follow_simple_curves
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text17
  2626  001CAA                     __ptext17:
  2627                           	opt stack 0
  2628  001CAA                     _straight_fwd:
  2629                           	opt stack 25
  2630                           
  2631                           ;motor_control.c: 421: set_motor_speed(left, slow, 60);
  2632                           
  2633                           ;incstack = 0
  2634  001CAA  0E04               	movlw	4
  2635  001CAC  6E15               	movwf	set_motor_speed@motor_speed,c
  2636  001CAE  0E00               	movlw	0
  2637  001CB0  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2638  001CB2  0E3C               	movlw	60
  2639  001CB4  6E16               	movwf	set_motor_speed@speed_modifier,c
  2640  001CB6  0E00               	movlw	0
  2641  001CB8  EC6E  F00A         	call	_set_motor_speed
  2642                           
  2643                           ;motor_control.c: 422: set_motor_speed(right, slow, 0);
  2644  001CBC  0E04               	movlw	4
  2645  001CBE  6E15               	movwf	set_motor_speed@motor_speed,c
  2646  001CC0  0E00               	movlw	0
  2647  001CC2  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2648  001CC4  0E00               	movlw	0
  2649  001CC6  6E16               	movwf	set_motor_speed@speed_modifier,c
  2650  001CC8  0E01               	movlw	1
  2651  001CCA  EC6E  F00A         	call	_set_motor_speed
  2652  001CCE  0012               	return	
  2653  001CD0                     __end_of_straight_fwd:
  2654                           	opt stack 0
  2655                           prodl	equ	0xFF3
  2656                           intcon	equ	0xFF2
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _spin_right *****************
  2662 ;; Defined at:
  2663 ;;		line 424 in file "../motor_control.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    3
  2684 ;; This function calls:
  2685 ;;		_set_motor_speed
  2686 ;; This function is called by:
  2687 ;;		_set_directive
  2688 ;;		_follow_simple_curves
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text18
  2693  001CD0                     __ptext18:
  2694                           	opt stack 0
  2695  001CD0                     _spin_right:
  2696                           	opt stack 25
  2697                           
  2698                           ;motor_control.c: 426: set_motor_speed(left, slow, 0);
  2699                           
  2700                           ;incstack = 0
  2701  001CD0  0E04               	movlw	4
  2702  001CD2  6E15               	movwf	set_motor_speed@motor_speed,c
  2703  001CD4  0E00               	movlw	0
  2704  001CD6  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2705  001CD8  0E00               	movlw	0
  2706  001CDA  6E16               	movwf	set_motor_speed@speed_modifier,c
  2707  001CDC  0E00               	movlw	0
  2708  001CDE  EC6E  F00A         	call	_set_motor_speed
  2709                           
  2710                           ;motor_control.c: 427: set_motor_speed(right, rev_slow, 0);
  2711  001CE2  0E02               	movlw	2
  2712  001CE4  6E15               	movwf	set_motor_speed@motor_speed,c
  2713  001CE6  0E00               	movlw	0
  2714  001CE8  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2715  001CEA  0E00               	movlw	0
  2716  001CEC  6E16               	movwf	set_motor_speed@speed_modifier,c
  2717  001CEE  0E01               	movlw	1
  2718  001CF0  EC6E  F00A         	call	_set_motor_speed
  2719  001CF4  0012               	return	
  2720  001CF6                     __end_of_spin_right:
  2721                           	opt stack 0
  2722                           prodl	equ	0xFF3
  2723                           intcon	equ	0xFF2
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _spin_left *****************
  2729 ;; Defined at:
  2730 ;;		line 408 in file "../motor_control.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    3
  2751 ;; This function calls:
  2752 ;;		_set_motor_speed
  2753 ;; This function is called by:
  2754 ;;		_set_directive
  2755 ;;		_follow_simple_curves
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text19
  2760  001CF6                     __ptext19:
  2761                           	opt stack 0
  2762  001CF6                     _spin_left:
  2763                           	opt stack 25
  2764                           
  2765                           ;motor_control.c: 410: set_motor_speed(left, rev_slow, 0);
  2766                           
  2767                           ;incstack = 0
  2768  001CF6  0E02               	movlw	2
  2769  001CF8  6E15               	movwf	set_motor_speed@motor_speed,c
  2770  001CFA  0E00               	movlw	0
  2771  001CFC  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2772  001CFE  0E00               	movlw	0
  2773  001D00  6E16               	movwf	set_motor_speed@speed_modifier,c
  2774  001D02  0E00               	movlw	0
  2775  001D04  EC6E  F00A         	call	_set_motor_speed
  2776                           
  2777                           ;motor_control.c: 411: set_motor_speed(right, slow, 0);
  2778  001D08  0E04               	movlw	4
  2779  001D0A  6E15               	movwf	set_motor_speed@motor_speed,c
  2780  001D0C  0E00               	movlw	0
  2781  001D0E  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2782  001D10  0E00               	movlw	0
  2783  001D12  6E16               	movwf	set_motor_speed@speed_modifier,c
  2784  001D14  0E01               	movlw	1
  2785  001D16  EC6E  F00A         	call	_set_motor_speed
  2786  001D1A  0012               	return	
  2787  001D1C                     __end_of_spin_left:
  2788                           	opt stack 0
  2789                           prodl	equ	0xFF3
  2790                           intcon	equ	0xFF2
  2791                           postinc0	equ	0xFEE
  2792                           wreg	equ	0xFE8
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _pirouette_right *****************
  2796 ;; Defined at:
  2797 ;;		line 40 in file "../motor_control.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    3
  2818 ;; This function calls:
  2819 ;;		_set_motor_speed
  2820 ;; This function is called by:
  2821 ;;		_set_directive
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text20
  2826  001D1C                     __ptext20:
  2827                           	opt stack 0
  2828  001D1C                     _pirouette_right:
  2829                           	opt stack 25
  2830                           
  2831                           ;motor_control.c: 41: set_motor_speed(left, slow, 0);
  2832                           
  2833                           ;incstack = 0
  2834  001D1C  0E04               	movlw	4
  2835  001D1E  6E15               	movwf	set_motor_speed@motor_speed,c
  2836  001D20  0E00               	movlw	0
  2837  001D22  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2838  001D24  0E00               	movlw	0
  2839  001D26  6E16               	movwf	set_motor_speed@speed_modifier,c
  2840  001D28  0E00               	movlw	0
  2841  001D2A  EC6E  F00A         	call	_set_motor_speed
  2842                           
  2843                           ;motor_control.c: 42: set_motor_speed(right, rev_slow, 0);
  2844  001D2E  0E02               	movlw	2
  2845  001D30  6E15               	movwf	set_motor_speed@motor_speed,c
  2846  001D32  0E00               	movlw	0
  2847  001D34  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2848  001D36  0E00               	movlw	0
  2849  001D38  6E16               	movwf	set_motor_speed@speed_modifier,c
  2850  001D3A  0E01               	movlw	1
  2851  001D3C  EC6E  F00A         	call	_set_motor_speed
  2852  001D40  0012               	return	
  2853  001D42                     __end_of_pirouette_right:
  2854                           	opt stack 0
  2855                           prodl	equ	0xFF3
  2856                           intcon	equ	0xFF2
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _pirouette_left *****************
  2862 ;; Defined at:
  2863 ;;		line 36 in file "../motor_control.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    3
  2884 ;; This function calls:
  2885 ;;		_set_motor_speed
  2886 ;; This function is called by:
  2887 ;;		_set_directive
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text21
  2892  001D42                     __ptext21:
  2893                           	opt stack 0
  2894  001D42                     _pirouette_left:
  2895                           	opt stack 25
  2896                           
  2897                           ;motor_control.c: 37: set_motor_speed(left, rev_slow, 0);
  2898                           
  2899                           ;incstack = 0
  2900  001D42  0E02               	movlw	2
  2901  001D44  6E15               	movwf	set_motor_speed@motor_speed,c
  2902  001D46  0E00               	movlw	0
  2903  001D48  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2904  001D4A  0E00               	movlw	0
  2905  001D4C  6E16               	movwf	set_motor_speed@speed_modifier,c
  2906  001D4E  0E00               	movlw	0
  2907  001D50  EC6E  F00A         	call	_set_motor_speed
  2908                           
  2909                           ;motor_control.c: 38: set_motor_speed(right, slow, 0);
  2910  001D54  0E04               	movlw	4
  2911  001D56  6E15               	movwf	set_motor_speed@motor_speed,c
  2912  001D58  0E00               	movlw	0
  2913  001D5A  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2914  001D5C  0E00               	movlw	0
  2915  001D5E  6E16               	movwf	set_motor_speed@speed_modifier,c
  2916  001D60  0E01               	movlw	1
  2917  001D62  EC6E  F00A         	call	_set_motor_speed
  2918  001D66  0012               	return	
  2919  001D68                     __end_of_pirouette_left:
  2920                           	opt stack 0
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function _full_stp *****************
  2928 ;; Defined at:
  2929 ;;		line 31 in file "../motor_control.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    3
  2950 ;; This function calls:
  2951 ;;		_set_motor_speed
  2952 ;; This function is called by:
  2953 ;;		_set_directive
  2954 ;;		_motor_control
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text22
  2959  001D68                     __ptext22:
  2960                           	opt stack 0
  2961  001D68                     _full_stp:
  2962                           	opt stack 25
  2963                           
  2964                           ;motor_control.c: 32: set_motor_speed(left, stop, 0);
  2965                           
  2966                           ;incstack = 0
  2967  001D68  0E03               	movlw	3
  2968  001D6A  6E15               	movwf	set_motor_speed@motor_speed,c
  2969  001D6C  0E00               	movlw	0
  2970  001D6E  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2971  001D70  0E00               	movlw	0
  2972  001D72  6E16               	movwf	set_motor_speed@speed_modifier,c
  2973  001D74  0E00               	movlw	0
  2974  001D76  EC6E  F00A         	call	_set_motor_speed
  2975                           
  2976                           ;motor_control.c: 33: set_motor_speed(right, stop, 0);
  2977  001D7A  0E03               	movlw	3
  2978  001D7C  6E15               	movwf	set_motor_speed@motor_speed,c
  2979  001D7E  0E00               	movlw	0
  2980  001D80  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2981  001D82  0E00               	movlw	0
  2982  001D84  6E16               	movwf	set_motor_speed@speed_modifier,c
  2983  001D86  0E01               	movlw	1
  2984  001D88  EC6E  F00A         	call	_set_motor_speed
  2985  001D8C  0012               	return	
  2986  001D8E                     __end_of_full_stp:
  2987                           	opt stack 0
  2988                           prodl	equ	0xFF3
  2989                           intcon	equ	0xFF2
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           status	equ	0xFD8
  2993                           
  2994 ;; *************** function _set_motor_speed *****************
  2995 ;; Defined at:
  2996 ;;		line 187 in file "../sumovore.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  the_motor       1    wreg     enum E4168
  2999 ;;  motor_speed     1   20[COMRAM] enum E4160
  3000 ;;  speed_modifi    2   21[COMRAM] int 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  the_motor       1   25[COMRAM] enum E4168
  3003 ;;  duty_cycle      2   27[COMRAM] int 
  3004 ;;  dir_modifier    1   26[COMRAM] enum E4224
  3005 ;; Return value:  Size  Location     Type
  3006 ;;		None               void
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3014 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;Total ram usage:        9 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    2
  3021 ;; This function calls:
  3022 ;;		_SetDCPWM1
  3023 ;;		_SetDCPWM2
  3024 ;; This function is called by:
  3025 ;;		_full_stp
  3026 ;;		_pirouette_left
  3027 ;;		_pirouette_right
  3028 ;;		_spin_left
  3029 ;;		_turn_left
  3030 ;;		_straight_fwd
  3031 ;;		_spin_right
  3032 ;;		_turn_right
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text23
  3037  0014DC                     __ptext23:
  3038                           	opt stack 0
  3039  0014DC                     _set_motor_speed:
  3040                           	opt stack 25
  3041                           
  3042                           ;incstack = 0
  3043                           ;set_motor_speed@the_motor stored from wreg
  3044  0014DC  6E1A               	movwf	set_motor_speed@the_motor,c
  3045                           
  3046                           ;sumovore.c: 189: const static int motor_speeds[] = { -800, -725, -650, 0, 650, 725, 800
      +                          };
  3047                           ;sumovore.c: 190: int duty_cycle;
  3048                           ;sumovore.c: 191: enum e_direction {reverse,forward} dir_modifier= forward;
  3049  0014DE  0E01               	movlw	1
  3050  0014E0  6E1B               	movwf	set_motor_speed@dir_modifier,c
  3051                           
  3052                           ;sumovore.c: 193: duty_cycle = motor_speeds[ motor_speed ] + speed_modifier;
  3053  0014E2  5015               	movf	set_motor_speed@motor_speed,w,c
  3054  0014E4  0D02               	mullw	2
  3055  0014E6  0E01               	movlw	low set_motor_speed@motor_speeds
  3056  0014E8  24F3               	addwf	prodl,w,c
  3057  0014EA  6EF6               	movwf	tblptrl,c
  3058  0014EC  0E10               	movlw	high set_motor_speed@motor_speeds
  3059  0014EE  20F4               	addwfc	prodh,w,c
  3060  0014F0  6EF7               	movwf	tblptrh,c
  3061  0014F2                     	if	1	;There are 3 active tblptr bytes
  3062  0014F2  6AF8               	clrf	tblptru,c
  3063  0014F4  0E00               	movlw	low (__mediumconst shr (0+16))
  3064  0014F6  22F8               	addwfc	tblptru,f,c
  3065  0014F8                     	endif
  3066  0014F8  0009               	tblrd		*+
  3067  0014FA  CFF5 F018          	movff	tablat,??_set_motor_speed
  3068  0014FE  0009               	tblrd		*+
  3069  001500  CFF5 F019          	movff	tablat,??_set_motor_speed+1
  3070  001504  5016               	movf	set_motor_speed@speed_modifier,w,c
  3071  001506  2418               	addwf	??_set_motor_speed,w,c
  3072  001508  6E1C               	movwf	set_motor_speed@duty_cycle,c
  3073  00150A  5017               	movf	set_motor_speed@speed_modifier+1,w,c
  3074  00150C  2019               	addwfc	??_set_motor_speed+1,w,c
  3075  00150E  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  3076                           
  3077                           ;sumovore.c: 194: if ( duty_cycle < 0 )
  3078  001510  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  3079  001512  0A80               	xorlw	128
  3080  001514  6EF3               	movwf	prodl,c
  3081  001516  0E80               	movlw	128
  3082  001518  5CF3               	subwf	prodl,w,c
  3083  00151A  0E00               	movlw	0
  3084  00151C  B4D8               	btfsc	status,2,c
  3085  00151E  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  3086  001520  B0D8               	btfsc	status,0,c
  3087  001522  D006               	goto	l1351
  3088                           
  3089                           ;sumovore.c: 195: {
  3090                           ;sumovore.c: 196: dir_modifier = reverse;
  3091  001524  0E00               	movlw	0
  3092  001526  6E1B               	movwf	set_motor_speed@dir_modifier,c
  3093                           
  3094                           ;sumovore.c: 197: duty_cycle = -1 * duty_cycle;
  3095  001528  6C1C               	negf	set_motor_speed@duty_cycle,c
  3096  00152A  1E1D               	comf	set_motor_speed@duty_cycle+1,f,c
  3097  00152C  B0D8               	btfsc	status,0,c
  3098  00152E  2A1D               	incf	set_motor_speed@duty_cycle+1,f,c
  3099  001530                     l1351:
  3100                           
  3101                           ;sumovore.c: 198: }
  3102                           ;sumovore.c: 199: if ( duty_cycle > 800 ) duty_cycle = 800;
  3103  001530  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  3104  001532  0A80               	xorlw	128
  3105  001534  0F7D               	addlw	-131
  3106  001536  0E21               	movlw	33
  3107  001538  B4D8               	btfsc	status,2,c
  3108  00153A  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  3109  00153C  A0D8               	btfss	status,0,c
  3110  00153E  D004               	goto	l1355
  3111  001540  0E03               	movlw	3
  3112  001542  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  3113  001544  0E20               	movlw	32
  3114  001546  6E1C               	movwf	set_motor_speed@duty_cycle,c
  3115  001548                     l1355:
  3116                           
  3117                           ;sumovore.c: 201: if (the_motor == left)
  3118  001548  661A               	tstfsz	set_motor_speed@the_motor,c
  3119  00154A  D016               	goto	l1365
  3120                           
  3121                           ;sumovore.c: 202: {
  3122                           ;sumovore.c: 203: SetDCPWM2((unsigned int) duty_cycle );
  3123  00154C  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM2@dutycycle
  3124  001550  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM2@dutycycle+1
  3125  001554  ECAF  F00D         	call	_SetDCPWM2	;wreg free
  3126                           
  3127                           ;sumovore.c: 204: if ( dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  3128  001558  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3129  00155A  D002               	goto	l180
  3130  00155C  9082               	bcf	3970,0,c	;volatile
  3131  00155E  D001               	goto	l1363
  3132  001560                     l180:
  3133                           
  3134                           ;sumovore.c: 205: else PORTCbits.RC0 = 0b1;
  3135  001560  8082               	bsf	3970,0,c	;volatile
  3136  001562                     l1363:
  3137                           
  3138                           ;sumovore.c: 206: PORTEbits.RE1 = !PORTCbits.RC0;
  3139  001562  B082               	btfsc	3970,0,c	;volatile
  3140  001564  D002               	goto	u70
  3141  001566  0E01               	movlw	1
  3142  001568  D001               	goto	u76
  3143  00156A                     u70:
  3144  00156A  0E00               	movlw	0
  3145  00156C                     u76:
  3146  00156C  6E18               	movwf	??_set_motor_speed& (0+255),c
  3147  00156E  4618               	rlncf	??_set_motor_speed,f,c
  3148  001570  5084               	movf	3972,w,c	;volatile
  3149  001572  1818               	xorwf	??_set_motor_speed,w,c
  3150  001574  0BFD               	andlw	-3
  3151  001576  D014               	goto	L4
  3152  001578                     l1365:
  3153                           
  3154                           ;sumovore.c: 208: else
  3155                           ;sumovore.c: 209: {
  3156                           ;sumovore.c: 210: SetDCPWM1((unsigned int) duty_cycle );
  3157  001578  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM1@dutycycle
  3158  00157C  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM1@dutycycle+1
  3159  001580  ECCC  F00D         	call	_SetDCPWM1	;wreg free
  3160                           
  3161                           ;sumovore.c: 211: if ( dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  3162  001584  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3163  001586  D002               	goto	l183
  3164  001588  9A82               	bcf	3970,5,c	;volatile
  3165  00158A  D001               	goto	l1371
  3166  00158C                     l183:
  3167                           
  3168                           ;sumovore.c: 212: else PORTCbits.RC5 = 0b1;
  3169  00158C  8A82               	bsf	3970,5,c	;volatile
  3170  00158E                     l1371:
  3171                           
  3172                           ;sumovore.c: 213: PORTEbits.RE0 = !PORTCbits.RC5;
  3173  00158E  BA82               	btfsc	3970,5,c	;volatile
  3174  001590  D002               	goto	u90
  3175  001592  0E01               	movlw	1
  3176  001594  D001               	goto	u96
  3177  001596                     u90:
  3178  001596  0E00               	movlw	0
  3179  001598                     u96:
  3180  001598  6E18               	movwf	??_set_motor_speed& (0+255),c
  3181  00159A  5084               	movf	3972,w,c	;volatile
  3182  00159C  1818               	xorwf	??_set_motor_speed,w,c
  3183  00159E  0BFE               	andlw	-2
  3184  0015A0                     L4:
  3185  0015A0  1818               	xorwf	??_set_motor_speed,w,c
  3186  0015A2  6E84               	movwf	3972,c	;volatile
  3187  0015A4  0012               	return	
  3188  0015A6                     __end_of_set_motor_speed:
  3189                           	opt stack 0
  3190                           tblptru	equ	0xFF8
  3191                           tblptrh	equ	0xFF7
  3192                           tblptrl	equ	0xFF6
  3193                           tablat	equ	0xFF5
  3194                           prodh	equ	0xFF4
  3195                           prodl	equ	0xFF3
  3196                           intcon	equ	0xFF2
  3197                           postinc0	equ	0xFEE
  3198                           wreg	equ	0xFE8
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _clr_mem *****************
  3202 ;; Defined at:
  3203 ;;		line 105 in file "../motor_control.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg, status,2
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    1
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_change_track
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text24
  3232  001F8E                     __ptext24:
  3233                           	opt stack 0
  3234  001F8E                     _clr_mem:
  3235                           	opt stack 27
  3236                           
  3237                           ;motor_control.c: 106: memory = 0;
  3238                           
  3239                           ;incstack = 0
  3240  001F8E  0E00               	movlw	0
  3241  001F90  6E23               	movwf	_memory+1,c
  3242  001F92  0E00               	movlw	0
  3243  001F94  6E22               	movwf	_memory,c
  3244  001F96  0012               	return	
  3245  001F98                     __end_of_clr_mem:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function _ReadTimer0 *****************
  3259 ;; Defined at:
  3260 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0read.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  timer           2   16[COMRAM] struct Timers
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2   14[COMRAM] unsigned int 
  3267 ;; Registers used:
  3268 ;;		None
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:        4 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_motor_control
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text25
  3289  001F16                     __ptext25:
  3290                           	opt stack 0
  3291  001F16                     _ReadTimer0:
  3292                           	opt stack 28
  3293                           
  3294                           ;incstack = 0
  3295  001F16  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  3296  001F1A  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  3297  001F1E  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  3298  001F22  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  3299  001F26  0012               	return	
  3300  001F28                     __end_of_ReadTimer0:
  3301                           	opt stack 0
  3302                           tblptru	equ	0xFF8
  3303                           tblptrh	equ	0xFF7
  3304                           tblptrl	equ	0xFF6
  3305                           tablat	equ	0xFF5
  3306                           prodh	equ	0xFF4
  3307                           prodl	equ	0xFF3
  3308                           intcon	equ	0xFF2
  3309                           postinc0	equ	0xFEE
  3310                           wreg	equ	0xFE8
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _lvd_flag_set *****************
  3314 ;; Defined at:
  3315 ;;		line 47 in file "../interrupts.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      unsigned char 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;Total ram usage:        0 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text26
  3344  001FC0                     __ptext26:
  3345                           	opt stack 0
  3346  001FC0                     _lvd_flag_set:
  3347                           	opt stack 29
  3348                           
  3349                           ;interrupts.c: 49: return lvd_flag;
  3350                           
  3351                           ;incstack = 0
  3352  001FC0  502D               	movf	_lvd_flag,w,c
  3353  001FC2  0012               	return	
  3354  001FC4                     __end_of_lvd_flag_set:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _initialization *****************
  3368 ;; Defined at:
  3369 ;;		line 65 in file "../sumovore.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    5
  3390 ;; This function calls:
  3391 ;;		_OpenADC
  3392 ;;		_OpenPWM1
  3393 ;;		_OpenPWM2
  3394 ;;		_OpenTimer2
  3395 ;;		_OpenUSART
  3396 ;;		_SetDCPWM1
  3397 ;;		_SetDCPWM2
  3398 ;;		_openLVD
  3399 ;;		_openPORTA
  3400 ;;		_openPORTB
  3401 ;;		_openPORTCforPWM
  3402 ;;		_openPORTCforUSART
  3403 ;;		_openPORTD
  3404 ;;		_openPORTE
  3405 ;;		_reset_codes
  3406 ;;		_set_osc_32MHz
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text27
  3413  0017C2                     __ptext27:
  3414                           	opt stack 0
  3415  0017C2                     _initialization:
  3416                           	opt stack 25
  3417                           
  3418                           ;sumovore.c: 67: SeeLine.B = 0;
  3419                           
  3420                           ;incstack = 0
  3421  0017C2  902C               	bcf	_SeeLine,0,c
  3422  0017C4  922C               	bcf	_SeeLine,1,c
  3423  0017C6  942C               	bcf	_SeeLine,2,c
  3424  0017C8  962C               	bcf	_SeeLine,3,c
  3425  0017CA  982C               	bcf	_SeeLine,4,c
  3426                           
  3427                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  3428  0017CC  8ED0               	bsf	4048,7,c	;volatile
  3429                           
  3430                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  3431  0017CE  9EF2               	bcf	intcon,7,c	;volatile
  3432                           
  3433                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  3434  0017D0  9CF2               	bcf	intcon,6,c	;volatile
  3435                           
  3436                           ;sumovore.c: 72: set_osc_32MHz();
  3437  0017D2  EC1B  F00E         	call	_set_osc_32MHz	;wreg free
  3438                           
  3439                           ;sumovore.c: 73: openPORTCforUSART();
  3440  0017D6  ECD2  F00F         	call	_openPORTCforUSART	;wreg free
  3441                           
  3442                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111, 16 );
  3443  0017DA  0E00               	movlw	0
  3444  0017DC  6E10               	movwf	OpenUSART@spbrg+1,c
  3445  0017DE  0E10               	movlw	16
  3446  0017E0  6E0F               	movwf	OpenUSART@spbrg,c
  3447  0017E2  0E3C               	movlw	60
  3448  0017E4  ECA7  F00C         	call	_OpenUSART
  3449                           
  3450                           ;sumovore.c: 81: openPORTD();
  3451  0017E8  ECDB  F00F         	call	_openPORTD	;wreg free
  3452                           
  3453                           ;sumovore.c: 82: PORTD = 0;
  3454  0017EC  0E00               	movlw	0
  3455  0017EE  6E83               	movwf	3971,c	;volatile
  3456                           
  3457                           ;sumovore.c: 84: reset_codes();
  3458  0017F0  EC8F  F00D         	call	_reset_codes	;wreg free
  3459                           
  3460                           ;sumovore.c: 86: openPORTCforPWM();
  3461  0017F4  ECA4  F00F         	call	_openPORTCforPWM	;wreg free
  3462                           
  3463                           ;sumovore.c: 88: openPORTA();
  3464  0017F8  ECD8  F00F         	call	_openPORTA	;wreg free
  3465                           
  3466                           ;sumovore.c: 89: openPORTB();
  3467  0017FC  ECD5  F00F         	call	_openPORTB	;wreg free
  3468                           
  3469                           ;sumovore.c: 90: openPORTE();
  3470  001800  ECCF  F00F         	call	_openPORTE	;wreg free
  3471                           
  3472                           ;sumovore.c: 93: openLVD();
  3473  001804  EC4E  F00F         	call	_openLVD	;wreg free
  3474                           
  3475                           ;sumovore.c: 97: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  3476  001808  0E0C               	movlw	12
  3477  00180A  6E0F               	movwf	OpenADC@config2,c
  3478  00180C  0E0A               	movlw	10
  3479  00180E  6E10               	movwf	OpenADC@portconfig,c
  3480  001810  0EA7               	movlw	167
  3481  001812  EC0A  F00D         	call	_OpenADC
  3482                           
  3483                           ;sumovore.c: 100: PORTCbits.RC5 = 0b0;
  3484  001816  9A82               	bcf	3970,5,c	;volatile
  3485                           
  3486                           ;sumovore.c: 101: PORTEbits.RE0 = 0b0;
  3487  001818  9084               	bcf	3972,0,c	;volatile
  3488                           
  3489                           ;sumovore.c: 102: PORTCbits.RC0 = 0b0;
  3490  00181A  9082               	bcf	3970,0,c	;volatile
  3491                           
  3492                           ;sumovore.c: 103: PORTEbits.RE1 = 0b0;
  3493  00181C  9284               	bcf	3972,1,c	;volatile
  3494                           
  3495                           ;sumovore.c: 108: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  3496  00181E  0E06               	movlw	6
  3497  001820  EC34  F00F         	call	_OpenTimer2
  3498                           
  3499                           ;sumovore.c: 109: OpenPWM1(199);
  3500  001824  0EC7               	movlw	199
  3501  001826  EC94  F00F         	call	_OpenPWM1
  3502                           
  3503                           ;sumovore.c: 111: OpenPWM2(199);
  3504  00182A  0EC7               	movlw	199
  3505  00182C  ECE9  F00D         	call	_OpenPWM2
  3506                           
  3507                           ;sumovore.c: 112: SetDCPWM1(0);
  3508  001830  0E00               	movlw	0
  3509  001832  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  3510  001834  0E00               	movlw	0
  3511  001836  6E0F               	movwf	SetDCPWM1@dutycycle,c
  3512  001838  ECCC  F00D         	call	_SetDCPWM1	;wreg free
  3513                           
  3514                           ;sumovore.c: 115: SetDCPWM2(0);
  3515  00183C  0E00               	movlw	0
  3516  00183E  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  3517  001840  0E00               	movlw	0
  3518  001842  6E0F               	movwf	SetDCPWM2@dutycycle,c
  3519  001844  ECAF  F00D         	call	_SetDCPWM2	;wreg free
  3520                           
  3521                           ;sumovore.c: 116: threshold = 120u;
  3522  001848  0E00               	movlw	0
  3523  00184A  6E29               	movwf	_threshold+1,c
  3524  00184C  0E78               	movlw	120
  3525  00184E  6E28               	movwf	_threshold,c
  3526  001850  0012               	return	
  3527  001852                     __end_of_initialization:
  3528                           	opt stack 0
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           prodh	equ	0xFF4
  3534                           prodl	equ	0xFF3
  3535                           intcon	equ	0xFF2
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _set_osc_32MHz *****************
  3541 ;; Defined at:
  3542 ;;		line 18 in file "../../Common/osc.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  i               2   14[COMRAM] int 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;Total ram usage:        2 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_initialization
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text28
  3571  001C36                     __ptext28:
  3572                           	opt stack 0
  3573  001C36                     _set_osc_32MHz:
  3574                           	opt stack 28
  3575                           
  3576                           ;osc.c: 20: int i;
  3577                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  3578                           
  3579                           ;incstack = 0
  3580  001C36  8CD3               	bsf	4051,6,c	;volatile
  3581                           
  3582                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  3583  001C38  8AD3               	bsf	4051,5,c	;volatile
  3584                           
  3585                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  3586  001C3A  88D3               	bsf	4051,4,c	;volatile
  3587                           
  3588                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  3589  001C3C  8C9B               	bsf	3995,6,c	;volatile
  3590                           
  3591                           ;osc.c: 28: for(i=0;i<500;i++);
  3592  001C3E  0E00               	movlw	0
  3593  001C40  6E10               	movwf	set_osc_32MHz@i+1,c
  3594  001C42  0E00               	movlw	0
  3595  001C44  6E0F               	movwf	set_osc_32MHz@i,c
  3596  001C46  5010               	movf	set_osc_32MHz@i+1,w,c
  3597  001C48  0A80               	xorlw	128
  3598  001C4A  0F7F               	addlw	-129
  3599  001C4C  0EF4               	movlw	244
  3600  001C4E  B4D8               	btfsc	status,2,c
  3601  001C50  5C0F               	subwf	set_osc_32MHz@i,w,c
  3602  001C52  B0D8               	btfsc	status,0,c
  3603  001C54  D003               	goto	l461
  3604  001C56  4A0F               	infsnz	set_osc_32MHz@i,f,c
  3605  001C58  2A10               	incf	set_osc_32MHz@i+1,f,c
  3606  001C5A  D7F5               	goto	L5
  3607  001C5C                     l461:
  3608  001C5C  0012               	return	
  3609  001C5E                     __end_of_set_osc_32MHz:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           intcon	equ	0xFF2
  3618                           postinc0	equ	0xFEE
  3619                           wreg	equ	0xFE8
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _reset_codes *****************
  3623 ;; Defined at:
  3624 ;;		line 280 in file "../sumovore.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    4
  3645 ;; This function calls:
  3646 ;;		_BORtask
  3647 ;;		_PORtask
  3648 ;;		_RESETtask
  3649 ;;		_STKFULtask
  3650 ;;		_WDTtask
  3651 ;;		_isBOR
  3652 ;;		_isPOR
  3653 ;;		_isWDTTO
  3654 ;; This function is called by:
  3655 ;;		_initialization
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text29
  3660  001B1E                     __ptext29:
  3661                           	opt stack 0
  3662  001B1E                     _reset_codes:
  3663                           	opt stack 25
  3664                           
  3665                           ;sumovore.c: 282: if( isPOR() ) PORtask();
  3666                           
  3667                           ;incstack = 0
  3668  001B1E  EC6F  F00F         	call	_isPOR	;wreg free
  3669  001B22  0900               	iorlw	0
  3670  001B24  B4D8               	btfsc	status,2,c
  3671  001B26  D003               	goto	l1729
  3672  001B28  EC8C  F00B         	call	_PORtask	;wreg free
  3673  001B2C  D017               	goto	l211
  3674  001B2E                     l1729:
  3675                           
  3676                           ;sumovore.c: 285: else if (isBOR() ) BORtask();
  3677  001B2E  EC9D  F00F         	call	_isBOR	;wreg free
  3678  001B32  0900               	iorlw	0
  3679  001B34  B4D8               	btfsc	status,2,c
  3680  001B36  D003               	goto	l1733
  3681  001B38  ECD9  F00E         	call	_BORtask	;wreg free
  3682  001B3C  D00F               	goto	l211
  3683  001B3E                     l1733:
  3684                           
  3685                           ;sumovore.c: 287: else if(isWDTTO() ) WDTtask();
  3686  001B3E  EC65  F00F         	call	_isWDTTO	;wreg free
  3687  001B42  0900               	iorlw	0
  3688  001B44  B4D8               	btfsc	status,2,c
  3689  001B46  D003               	goto	l207
  3690  001B48  EC18  F00F         	call	_WDTtask	;wreg free
  3691  001B4C  D007               	goto	l211
  3692  001B4E                     l207:
  3693                           
  3694                           ;sumovore.c: 291: else if(STKPTRbits.STKFUL) STKFULtask();
  3695  001B4E  AEFC               	btfss	stkptr,7,c	;volatile
  3696  001B50  D003               	goto	l1739
  3697  001B52  EC09  F00F         	call	_STKFULtask	;wreg free
  3698  001B56  D002               	goto	l211
  3699  001B58                     l1739:
  3700                           
  3701                           ;sumovore.c: 295: else RESETtask();
  3702  001B58  EC26  F00F         	call	_RESETtask	;wreg free
  3703  001B5C                     l211:
  3704  001B5C  0012               	return	
  3705  001B5E                     __end_of_reset_codes:
  3706                           	opt stack 0
  3707                           stkptr	equ	0xFFC
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           postinc0	equ	0xFEE
  3716                           wreg	equ	0xFE8
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _isWDTTO *****************
  3720 ;; Defined at:
  3721 ;;		line 15 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/iswdtto.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      unsigned char 
  3728 ;; Registers used:
  3729 ;;		wreg
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_reset_codes
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text30
  3750  001ECA                     __ptext30:
  3751                           	opt stack 0
  3752  001ECA                     _isWDTTO:
  3753                           	opt stack 27
  3754                           
  3755                           ;incstack = 0
  3756  001ECA  B2D0               	btfsc	4048,1,c	;volatile
  3757  001ECC  A4D0               	btfss	4048,2,c	;volatile
  3758  001ECE  D005               	goto	l1559
  3759  001ED0  B0D0               	btfsc	4048,0,c	;volatile
  3760  001ED2  B6D0               	btfsc	4048,3,c	;volatile
  3761  001ED4  D002               	goto	l1559
  3762  001ED6  0E01               	movlw	1
  3763  001ED8  D001               	goto	l736
  3764  001EDA                     l1559:
  3765  001EDA  0E00               	movlw	0
  3766  001EDC                     l736:
  3767  001EDC  0012               	return	
  3768  001EDE                     __end_of_isWDTTO:
  3769                           	opt stack 0
  3770                           stkptr	equ	0xFFC
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           prodh	equ	0xFF4
  3776                           prodl	equ	0xFF3
  3777                           intcon	equ	0xFF2
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _isPOR *****************
  3783 ;; Defined at:
  3784 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/ispor.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      unsigned char 
  3791 ;; Registers used:
  3792 ;;		wreg
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_reset_codes
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text31
  3813  001EDE                     __ptext31:
  3814                           	opt stack 0
  3815  001EDE                     _isPOR:
  3816                           	opt stack 27
  3817                           
  3818                           ;incstack = 0
  3819  001EDE  A2D0               	btfss	4048,1,c	;volatile
  3820  001EE0  A4D0               	btfss	4048,2,c	;volatile
  3821  001EE2  D005               	goto	l1467
  3822  001EE4  A0D0               	btfss	4048,0,c	;volatile
  3823  001EE6  A6D0               	btfss	4048,3,c	;volatile
  3824  001EE8  D002               	goto	l1467
  3825  001EEA  0E01               	movlw	1
  3826  001EEC  D001               	goto	l727
  3827  001EEE                     l1467:
  3828  001EEE  0E00               	movlw	0
  3829  001EF0                     l727:
  3830  001EF0  0012               	return	
  3831  001EF2                     __end_of_isPOR:
  3832                           	opt stack 0
  3833                           stkptr	equ	0xFFC
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function _isBOR *****************
  3846 ;; Defined at:
  3847 ;;		line 12 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/isbor.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_reset_codes
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text32
  3876  001F3A                     __ptext32:
  3877                           	opt stack 0
  3878  001F3A                     _isBOR:
  3879                           	opt stack 27
  3880                           
  3881                           ;incstack = 0
  3882  001F3A  A0D0               	btfss	4048,0,c	;volatile
  3883  001F3C  A2D0               	btfss	4048,1,c	;volatile
  3884  001F3E  D002               	goto	l1515
  3885  001F40  0E01               	movlw	1
  3886  001F42  D001               	goto	l718
  3887  001F44                     l1515:
  3888  001F44  0E00               	movlw	0
  3889  001F46                     l718:
  3890  001F46  0012               	return	
  3891  001F48                     __end_of_isBOR:
  3892                           	opt stack 0
  3893                           stkptr	equ	0xFFC
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _WDTtask *****************
  3906 ;; Defined at:
  3907 ;;		line 368 in file "../sumovore.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    3
  3928 ;; This function calls:
  3929 ;;		_gtrap
  3930 ;;		_printf
  3931 ;; This function is called by:
  3932 ;;		_reset_codes
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text33
  3937  001E30                     __ptext33:
  3938                           	opt stack 0
  3939  001E30                     _WDTtask:
  3940                           	opt stack 25
  3941                           
  3942                           ;sumovore.c: 370: printf("<WDT TO>");
  3943                           
  3944                           ;incstack = 0
  3945  001E30  0E10               	movlw	high STR_4
  3946  001E32  6E11               	movwf	printf@f+1,c
  3947  001E34  0E62               	movlw	low STR_4
  3948  001E36  6E10               	movwf	printf@f,c
  3949  001E38  EC06  F00E         	call	_printf	;wreg free
  3950                           
  3951                           ;sumovore.c: 371: PORTDbits.RD0=!1;
  3952  001E3C  9083               	bcf	3971,0,c	;volatile
  3953                           
  3954                           ;sumovore.c: 372: PORTDbits.RD1=!0;
  3955  001E3E  8283               	bsf	3971,1,c	;volatile
  3956                           
  3957                           ;sumovore.c: 373: PORTDbits.RD2=!1;
  3958  001E40  9483               	bcf	3971,2,c	;volatile
  3959                           
  3960                           ;sumovore.c: 374: PORTDbits.RD3=!0;
  3961  001E42  8683               	bsf	3971,3,c	;volatile
  3962                           
  3963                           ;sumovore.c: 375: PORTDbits.RD4=!0;
  3964  001E44  8883               	bsf	3971,4,c	;volatile
  3965                           
  3966                           ;sumovore.c: 376: gtrap();
  3967  001E46  EC39  F00D         	call	_gtrap	;wreg free
  3968  001E4A  0012               	return	
  3969  001E4C                     __end_of_WDTtask:
  3970                           	opt stack 0
  3971                           stkptr	equ	0xFFC
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           prodh	equ	0xFF4
  3977                           prodl	equ	0xFF3
  3978                           intcon	equ	0xFF2
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _STKFULtask *****************
  3984 ;; Defined at:
  3985 ;;		line 387 in file "../sumovore.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;		None               void
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    3
  4006 ;; This function calls:
  4007 ;;		_gtrap
  4008 ;;		_printf
  4009 ;; This function is called by:
  4010 ;;		_reset_codes
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text34
  4015  001E12                     __ptext34:
  4016                           	opt stack 0
  4017  001E12                     _STKFULtask:
  4018                           	opt stack 25
  4019                           
  4020                           ;sumovore.c: 390: STKPTRbits.STKFUL = 0;
  4021                           
  4022                           ;incstack = 0
  4023  001E12  9EFC               	bcf	stkptr,7,c	;volatile
  4024                           
  4025                           ;sumovore.c: 391: printf("<STKFUL>");
  4026  001E14  0E10               	movlw	high STR_5
  4027  001E16  6E11               	movwf	printf@f+1,c
  4028  001E18  0E59               	movlw	low STR_5
  4029  001E1A  6E10               	movwf	printf@f,c
  4030  001E1C  EC06  F00E         	call	_printf	;wreg free
  4031                           
  4032                           ;sumovore.c: 392: PORTDbits.RD0=!1;
  4033  001E20  9083               	bcf	3971,0,c	;volatile
  4034                           
  4035                           ;sumovore.c: 393: PORTDbits.RD1=!0;
  4036  001E22  8283               	bsf	3971,1,c	;volatile
  4037                           
  4038                           ;sumovore.c: 394: PORTDbits.RD2=!1;
  4039  001E24  9483               	bcf	3971,2,c	;volatile
  4040                           
  4041                           ;sumovore.c: 395: PORTDbits.RD3=!0;
  4042  001E26  8683               	bsf	3971,3,c	;volatile
  4043                           
  4044                           ;sumovore.c: 396: PORTDbits.RD4=!1;
  4045  001E28  9883               	bcf	3971,4,c	;volatile
  4046                           
  4047                           ;sumovore.c: 397: gtrap();
  4048  001E2A  EC39  F00D         	call	_gtrap	;wreg free
  4049  001E2E  0012               	return	
  4050  001E30                     __end_of_STKFULtask:
  4051                           	opt stack 0
  4052                           stkptr	equ	0xFFC
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           prodh	equ	0xFF4
  4058                           prodl	equ	0xFF3
  4059                           intcon	equ	0xFF2
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _RESETtask *****************
  4065 ;; Defined at:
  4066 ;;		line 403 in file "../sumovore.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;		None               void
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    3
  4087 ;; This function calls:
  4088 ;;		_gtrap
  4089 ;;		_printf
  4090 ;; This function is called by:
  4091 ;;		_reset_codes
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text35
  4096  001E4C                     __ptext35:
  4097                           	opt stack 0
  4098  001E4C                     _RESETtask:
  4099                           	opt stack 25
  4100                           
  4101                           ;sumovore.c: 406: printf(" <reset> ");
  4102                           
  4103                           ;incstack = 0
  4104  001E4C  0E10               	movlw	high STR_6
  4105  001E4E  6E11               	movwf	printf@f+1,c
  4106  001E50  0E4F               	movlw	low STR_6
  4107  001E52  6E10               	movwf	printf@f,c
  4108  001E54  EC06  F00E         	call	_printf	;wreg free
  4109                           
  4110                           ;sumovore.c: 407: PORTDbits.RD0=!1;
  4111  001E58  9083               	bcf	3971,0,c	;volatile
  4112                           
  4113                           ;sumovore.c: 408: PORTDbits.RD1=!0;
  4114  001E5A  8283               	bsf	3971,1,c	;volatile
  4115                           
  4116                           ;sumovore.c: 409: PORTDbits.RD2=!1;
  4117  001E5C  9483               	bcf	3971,2,c	;volatile
  4118                           
  4119                           ;sumovore.c: 410: PORTDbits.RD3=!1;
  4120  001E5E  9683               	bcf	3971,3,c	;volatile
  4121                           
  4122                           ;sumovore.c: 411: PORTDbits.RD4=!1;
  4123  001E60  9883               	bcf	3971,4,c	;volatile
  4124                           
  4125                           ;sumovore.c: 412: gtrap();
  4126  001E62  EC39  F00D         	call	_gtrap	;wreg free
  4127  001E66  0012               	return	
  4128  001E68                     __end_of_RESETtask:
  4129                           	opt stack 0
  4130                           stkptr	equ	0xFFC
  4131                           tblptru	equ	0xFF8
  4132                           tblptrh	equ	0xFF7
  4133                           tblptrl	equ	0xFF6
  4134                           tablat	equ	0xFF5
  4135                           prodh	equ	0xFF4
  4136                           prodl	equ	0xFF3
  4137                           intcon	equ	0xFF2
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _PORtask *****************
  4143 ;; Defined at:
  4144 ;;		line 305 in file "../sumovore.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  count2          4   24[COMRAM] unsigned long 
  4149 ;;  count1          4   20[COMRAM] unsigned long 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;		None               void
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;Total ram usage:        8 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    3
  4166 ;; This function calls:
  4167 ;;		_StatusReset
  4168 ;;		_printf
  4169 ;; This function is called by:
  4170 ;;		_reset_codes
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text36
  4175  001718                     __ptext36:
  4176                           	opt stack 0
  4177  001718                     _PORtask:
  4178                           	opt stack 25
  4179                           
  4180                           ;sumovore.c: 307: unsigned long count1=0, count2=0;
  4181                           
  4182                           ;incstack = 0
  4183  001718  0E00               	movlw	0
  4184  00171A  6E15               	movwf	PORtask@count1,c
  4185  00171C  0E00               	movlw	0
  4186  00171E  6E16               	movwf	PORtask@count1+1,c
  4187  001720  0E00               	movlw	0
  4188  001722  6E17               	movwf	PORtask@count1+2,c
  4189  001724  0E00               	movlw	0
  4190  001726  6E18               	movwf	PORtask@count1+3,c
  4191  001728  0E00               	movlw	0
  4192  00172A  6E19               	movwf	PORtask@count2,c
  4193  00172C  0E00               	movlw	0
  4194  00172E  6E1A               	movwf	PORtask@count2+1,c
  4195  001730  0E00               	movlw	0
  4196  001732  6E1B               	movwf	PORtask@count2+2,c
  4197  001734  0E00               	movlw	0
  4198  001736  6E1C               	movwf	PORtask@count2+3,c
  4199                           
  4200                           ;sumovore.c: 308: StatusReset();
  4201  001738  ECCC  F00F         	call	_StatusReset	;wreg free
  4202                           
  4203                           ;sumovore.c: 310: printf("<POR>");
  4204  00173C  0E10               	movlw	high STR_2
  4205  00173E  6E11               	movwf	printf@f+1,c
  4206  001740  0E78               	movlw	low STR_2
  4207  001742  6E10               	movwf	printf@f,c
  4208  001744  EC06  F00E         	call	_printf	;wreg free
  4209                           
  4210                           ;sumovore.c: 311: PORTDbits.RD0=!1;
  4211  001748  9083               	bcf	3971,0,c	;volatile
  4212                           
  4213                           ;sumovore.c: 312: PORTDbits.RD1=!0;
  4214  00174A  8283               	bsf	3971,1,c	;volatile
  4215                           
  4216                           ;sumovore.c: 313: PORTDbits.RD2=!0;
  4217  00174C  8483               	bsf	3971,2,c	;volatile
  4218                           
  4219                           ;sumovore.c: 314: PORTDbits.RD3=!0;
  4220  00174E  8683               	bsf	3971,3,c	;volatile
  4221                           
  4222                           ;sumovore.c: 315: PORTDbits.RD4=!0;
  4223  001750  8883               	bsf	3971,4,c	;volatile
  4224                           
  4225                           ;sumovore.c: 316: while(count1<10u)
  4226  001752  D02C               	goto	l214
  4227  001754                     l215:
  4228  001754  0004               	clrwdt		;# 
  4229                           
  4230                           ;sumovore.c: 319: if (count2==30000u)
  4231  001756  501A               	movf	PORtask@count2+1,w,c
  4232  001758  0A75               	xorlw	117
  4233  00175A  0E30               	movlw	48
  4234  00175C  B4D8               	btfsc	status,2,c
  4235  00175E  1819               	xorwf	PORtask@count2,w,c
  4236  001760  101B               	iorwf	PORtask@count2+2,w,c
  4237  001762  101C               	iorwf	PORtask@count2+3,w,c
  4238  001764  A4D8               	btfss	status,2,c
  4239  001766  D011               	goto	l1497
  4240                           
  4241                           ;sumovore.c: 320: {
  4242                           ;sumovore.c: 321: count2=0;
  4243  001768  0E00               	movlw	0
  4244  00176A  6E19               	movwf	PORtask@count2,c
  4245  00176C  0E00               	movlw	0
  4246  00176E  6E1A               	movwf	PORtask@count2+1,c
  4247  001770  0E00               	movlw	0
  4248  001772  6E1B               	movwf	PORtask@count2+2,c
  4249  001774  0E00               	movlw	0
  4250  001776  6E1C               	movwf	PORtask@count2+3,c
  4251                           
  4252                           ;sumovore.c: 322: count1++;
  4253  001778  0E01               	movlw	1
  4254  00177A  2615               	addwf	PORtask@count1,f,c
  4255  00177C  0E00               	movlw	0
  4256  00177E  2216               	addwfc	PORtask@count1+1,f,c
  4257  001780  2217               	addwfc	PORtask@count1+2,f,c
  4258  001782  2218               	addwfc	PORtask@count1+3,f,c
  4259                           
  4260                           ;sumovore.c: 323: PORTDbits.RD0=!1;
  4261  001784  9083               	bcf	3971,0,c	;volatile
  4262                           
  4263                           ;sumovore.c: 324: PORTDbits.RD1=!0;
  4264  001786  8283               	bsf	3971,1,c	;volatile
  4265                           
  4266                           ;sumovore.c: 325: }
  4267  001788  D00B               	goto	l1501
  4268  00178A                     l1497:
  4269                           
  4270                           ;sumovore.c: 326: else if (count2==15000u)
  4271  00178A  501A               	movf	PORtask@count2+1,w,c
  4272  00178C  0A3A               	xorlw	58
  4273  00178E  0E98               	movlw	152
  4274  001790  B4D8               	btfsc	status,2,c
  4275  001792  1819               	xorwf	PORtask@count2,w,c
  4276  001794  101B               	iorwf	PORtask@count2+2,w,c
  4277  001796  101C               	iorwf	PORtask@count2+3,w,c
  4278  001798  A4D8               	btfss	status,2,c
  4279  00179A  D002               	goto	l1501
  4280                           
  4281                           ;sumovore.c: 327: {
  4282                           ;sumovore.c: 328: PORTDbits.RD0=!0;
  4283  00179C  8083               	bsf	3971,0,c	;volatile
  4284                           
  4285                           ;sumovore.c: 329: PORTDbits.RD1=!1;
  4286  00179E  9283               	bcf	3971,1,c	;volatile
  4287  0017A0                     l1501:
  4288                           
  4289                           ;sumovore.c: 330: }
  4290                           ;sumovore.c: 331: count2++;
  4291  0017A0  0E01               	movlw	1
  4292  0017A2  2619               	addwf	PORtask@count2,f,c
  4293  0017A4  0E00               	movlw	0
  4294  0017A6  221A               	addwfc	PORtask@count2+1,f,c
  4295  0017A8  221B               	addwfc	PORtask@count2+2,f,c
  4296  0017AA  221C               	addwfc	PORtask@count2+3,f,c
  4297  0017AC                     l214:
  4298  0017AC  0E0A               	movlw	10
  4299  0017AE  5C15               	subwf	PORtask@count1,w,c
  4300  0017B0  0E00               	movlw	0
  4301  0017B2  5816               	subwfb	PORtask@count1+1,w,c
  4302  0017B4  0E00               	movlw	0
  4303  0017B6  5817               	subwfb	PORtask@count1+2,w,c
  4304  0017B8  0E00               	movlw	0
  4305  0017BA  5818               	subwfb	PORtask@count1+3,w,c
  4306  0017BC  B0D8               	btfsc	status,0,c
  4307  0017BE  0012               	return	
  4308  0017C0  D7C9               	goto	l215
  4309  0017C2                     __end_of_PORtask:
  4310                           	opt stack 0
  4311                           stkptr	equ	0xFFC
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           postinc0	equ	0xFEE
  4320                           wreg	equ	0xFE8
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _BORtask *****************
  4324 ;; Defined at:
  4325 ;;		line 347 in file "../sumovore.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;		None               void
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    3
  4346 ;; This function calls:
  4347 ;;		_StatusReset
  4348 ;;		_gtrap
  4349 ;;		_printf
  4350 ;; This function is called by:
  4351 ;;		_reset_codes
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text37
  4356  001DB2                     __ptext37:
  4357                           	opt stack 0
  4358  001DB2                     _BORtask:
  4359                           	opt stack 25
  4360                           
  4361                           ;sumovore.c: 349: StatusReset();
  4362                           
  4363                           ;incstack = 0
  4364  001DB2  ECCC  F00F         	call	_StatusReset	;wreg free
  4365                           
  4366                           ;sumovore.c: 351: printf("<BOR>");
  4367  001DB6  0E10               	movlw	high STR_3
  4368  001DB8  6E11               	movwf	printf@f+1,c
  4369  001DBA  0E72               	movlw	low STR_3
  4370  001DBC  6E10               	movwf	printf@f,c
  4371  001DBE  EC06  F00E         	call	_printf	;wreg free
  4372                           
  4373                           ;sumovore.c: 352: PORTDbits.RD0=!0;
  4374  001DC2  8083               	bsf	3971,0,c	;volatile
  4375                           
  4376                           ;sumovore.c: 353: PORTDbits.RD1=!0;
  4377  001DC4  8283               	bsf	3971,1,c	;volatile
  4378                           
  4379                           ;sumovore.c: 354: PORTDbits.RD2=!0;
  4380  001DC6  8483               	bsf	3971,2,c	;volatile
  4381                           
  4382                           ;sumovore.c: 355: PORTDbits.RD3=!0;
  4383  001DC8  8683               	bsf	3971,3,c	;volatile
  4384                           
  4385                           ;sumovore.c: 356: PORTDbits.RD4=!1;
  4386  001DCA  9883               	bcf	3971,4,c	;volatile
  4387                           
  4388                           ;sumovore.c: 357: gtrap();
  4389  001DCC  EC39  F00D         	call	_gtrap	;wreg free
  4390  001DD0  0012               	return	
  4391  001DD2                     __end_of_BORtask:
  4392                           	opt stack 0
  4393                           stkptr	equ	0xFFC
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           prodh	equ	0xFF4
  4399                           prodl	equ	0xFF3
  4400                           intcon	equ	0xFF2
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           status	equ	0xFD8
  4404                           
  4405 ;; *************** function _StatusReset *****************
  4406 ;; Defined at:
  4407 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/statrst.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;		None               void
  4414 ;; Registers used:
  4415 ;;		None
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_PORtask
  4432 ;;		_BORtask
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text38
  4437  001F98                     __ptext38:
  4438                           	opt stack 0
  4439  001F98                     _StatusReset:
  4440                           	opt stack 26
  4441                           
  4442                           ;incstack = 0
  4443  001F98  82D0               	bsf	4048,1,c	;volatile
  4444  001F9A  80D0               	bsf	4048,0,c	;volatile
  4445  001F9C  0012               	return	
  4446  001F9E                     __end_of_StatusReset:
  4447                           	opt stack 0
  4448                           stkptr	equ	0xFFC
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           postinc0	equ	0xFEE
  4457                           wreg	equ	0xFE8
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _openPORTE *****************
  4461 ;; Defined at:
  4462 ;;		line 177 in file "../sumovore.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;		None               void
  4469 ;; Registers used:
  4470 ;;		wreg, status,2
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_initialization
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text39
  4491  001F9E                     __ptext39:
  4492                           	opt stack 0
  4493  001F9E                     _openPORTE:
  4494                           	opt stack 28
  4495                           
  4496                           ;sumovore.c: 179: TRISE = 0b000;
  4497                           
  4498                           ;incstack = 0
  4499  001F9E  0E00               	movlw	0
  4500  001FA0  6E96               	movwf	3990,c	;volatile
  4501  001FA2  0012               	return	
  4502  001FA4                     __end_of_openPORTE:
  4503                           	opt stack 0
  4504                           stkptr	equ	0xFFC
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           status	equ	0xFD8
  4515                           
  4516 ;; *************** function _openPORTCforUSART *****************
  4517 ;; Defined at:
  4518 ;;		line 123 in file "../sumovore.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		None
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    1
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_initialization
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text40
  4547  001FA4                     __ptext40:
  4548                           	opt stack 0
  4549  001FA4                     _openPORTCforUSART:
  4550                           	opt stack 28
  4551                           
  4552                           ;sumovore.c: 125: TRISCbits.TRISC6 = 0;
  4553                           
  4554                           ;incstack = 0
  4555  001FA4  9C94               	bcf	3988,6,c	;volatile
  4556                           
  4557                           ;sumovore.c: 126: TRISCbits.TRISC7 = 1;
  4558  001FA6  8E94               	bsf	3988,7,c	;volatile
  4559  001FA8  0012               	return	
  4560  001FAA                     __end_of_openPORTCforUSART:
  4561                           	opt stack 0
  4562                           stkptr	equ	0xFFC
  4563                           tblptru	equ	0xFF8
  4564                           tblptrh	equ	0xFF7
  4565                           tblptrl	equ	0xFF6
  4566                           tablat	equ	0xFF5
  4567                           prodh	equ	0xFF4
  4568                           prodl	equ	0xFF3
  4569                           intcon	equ	0xFF2
  4570                           postinc0	equ	0xFEE
  4571                           wreg	equ	0xFE8
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _openPORTCforPWM *****************
  4575 ;; Defined at:
  4576 ;;		line 132 in file "../sumovore.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		None
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_initialization
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text41
  4605  001F48                     __ptext41:
  4606                           	opt stack 0
  4607  001F48                     _openPORTCforPWM:
  4608                           	opt stack 28
  4609                           
  4610                           ;sumovore.c: 134: TRISCbits.TRISC0 = 0;
  4611                           
  4612                           ;incstack = 0
  4613  001F48  9094               	bcf	3988,0,c	;volatile
  4614                           
  4615                           ;sumovore.c: 135: TRISCbits.TRISC1 = 0;
  4616  001F4A  9294               	bcf	3988,1,c	;volatile
  4617                           
  4618                           ;sumovore.c: 136: TRISCbits.TRISC2 = 0;
  4619  001F4C  9494               	bcf	3988,2,c	;volatile
  4620                           
  4621                           ;sumovore.c: 137: TRISCbits.TRISC3 = 0;
  4622  001F4E  9694               	bcf	3988,3,c	;volatile
  4623                           
  4624                           ;sumovore.c: 138: TRISCbits.TRISC4 = 0;
  4625  001F50  9894               	bcf	3988,4,c	;volatile
  4626                           
  4627                           ;sumovore.c: 139: TRISCbits.TRISC5 = 0;
  4628  001F52  9A94               	bcf	3988,5,c	;volatile
  4629  001F54  0012               	return	
  4630  001F56                     __end_of_openPORTCforPWM:
  4631                           	opt stack 0
  4632                           stkptr	equ	0xFFC
  4633                           tblptru	equ	0xFF8
  4634                           tblptrh	equ	0xFF7
  4635                           tblptrl	equ	0xFF6
  4636                           tablat	equ	0xFF5
  4637                           prodh	equ	0xFF4
  4638                           prodl	equ	0xFF3
  4639                           intcon	equ	0xFF2
  4640                           postinc0	equ	0xFEE
  4641                           wreg	equ	0xFE8
  4642                           status	equ	0xFD8
  4643                           
  4644 ;; *************** function _openPORTB *****************
  4645 ;; Defined at:
  4646 ;;		line 157 in file "../sumovore.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;		None               void
  4653 ;; Registers used:
  4654 ;;		wreg, status,2
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_initialization
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text42
  4675  001FAA                     __ptext42:
  4676                           	opt stack 0
  4677  001FAA                     _openPORTB:
  4678                           	opt stack 28
  4679                           
  4680                           ;sumovore.c: 159: TRISB = 0B11000000;
  4681                           
  4682                           ;incstack = 0
  4683  001FAA  0EC0               	movlw	192
  4684  001FAC  6E93               	movwf	3987,c	;volatile
  4685  001FAE  0012               	return	
  4686  001FB0                     __end_of_openPORTB:
  4687                           	opt stack 0
  4688                           stkptr	equ	0xFFC
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           postinc0	equ	0xFEE
  4697                           wreg	equ	0xFE8
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _openPORTA *****************
  4701 ;; Defined at:
  4702 ;;		line 146 in file "../sumovore.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, status,2
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_initialization
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text43
  4731  001FB0                     __ptext43:
  4732                           	opt stack 0
  4733  001FB0                     _openPORTA:
  4734                           	opt stack 28
  4735                           
  4736                           ;sumovore.c: 148: TRISA = 0B11101111;
  4737                           
  4738                           ;incstack = 0
  4739  001FB0  0EEF               	movlw	239
  4740  001FB2  6E92               	movwf	3986,c	;volatile
  4741  001FB4  0012               	return	
  4742  001FB6                     __end_of_openPORTA:
  4743                           	opt stack 0
  4744                           stkptr	equ	0xFFC
  4745                           tblptru	equ	0xFF8
  4746                           tblptrh	equ	0xFF7
  4747                           tblptrl	equ	0xFF6
  4748                           tablat	equ	0xFF5
  4749                           prodh	equ	0xFF4
  4750                           prodl	equ	0xFF3
  4751                           intcon	equ	0xFF2
  4752                           postinc0	equ	0xFEE
  4753                           wreg	equ	0xFE8
  4754                           status	equ	0xFD8
  4755                           
  4756 ;; *************** function _openLVD *****************
  4757 ;; Defined at:
  4758 ;;		line 426 in file "../sumovore.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;		None               void
  4765 ;; Registers used:
  4766 ;;		None
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    1
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_initialization
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text44
  4787  001E9C                     __ptext44:
  4788                           	opt stack 0
  4789  001E9C                     _openLVD:
  4790                           	opt stack 28
  4791                           
  4792                           ;sumovore.c: 428: RCONbits.IPEN = 1;
  4793                           
  4794                           ;incstack = 0
  4795  001E9C  8ED0               	bsf	4048,7,c	;volatile
  4796                           
  4797                           ;sumovore.c: 429: HLVDCONbits.HLVDEN = 1;
  4798  001E9E  88D2               	bsf	4050,4,c	;volatile
  4799                           
  4800                           ;sumovore.c: 431: IPR2bits.HLVDIP = 1;
  4801  001EA0  84A2               	bsf	4002,2,c	;volatile
  4802                           
  4803                           ;sumovore.c: 432: HLVDCONbits.VDIRMAG = 0;
  4804  001EA2  9ED2               	bcf	4050,7,c	;volatile
  4805                           
  4806                           ;sumovore.c: 434: HLVDCONbits.HLVDL3 = 1;
  4807  001EA4  86D2               	bsf	4050,3,c	;volatile
  4808                           
  4809                           ;sumovore.c: 435: HLVDCONbits.HLVDL2 = 1;
  4810  001EA6  84D2               	bsf	4050,2,c	;volatile
  4811                           
  4812                           ;sumovore.c: 436: HLVDCONbits.HLVDL1 = 1;
  4813  001EA8  82D2               	bsf	4050,1,c	;volatile
  4814                           
  4815                           ;sumovore.c: 437: HLVDCONbits.HLVDL0 = 0;
  4816  001EAA  90D2               	bcf	4050,0,c	;volatile
  4817                           
  4818                           ;sumovore.c: 438: PIR2bits.HLVDIF = 0;
  4819  001EAC  94A1               	bcf	4001,2,c	;volatile
  4820                           
  4821                           ;sumovore.c: 439: PIE2bits.HLVDIE = 1;
  4822  001EAE  84A0               	bsf	4000,2,c	;volatile
  4823                           
  4824                           ;sumovore.c: 440: INTCONbits.GIEH = 1;
  4825  001EB0  8EF2               	bsf	intcon,7,c	;volatile
  4826  001EB2  0012               	return	
  4827  001EB4                     __end_of_openLVD:
  4828                           	opt stack 0
  4829                           stkptr	equ	0xFFC
  4830                           tblptru	equ	0xFF8
  4831                           tblptrh	equ	0xFF7
  4832                           tblptrl	equ	0xFF6
  4833                           tablat	equ	0xFF5
  4834                           prodh	equ	0xFF4
  4835                           prodl	equ	0xFF3
  4836                           intcon	equ	0xFF2
  4837                           postinc0	equ	0xFEE
  4838                           wreg	equ	0xFE8
  4839                           status	equ	0xFD8
  4840                           
  4841 ;; *************** function _SetDCPWM2 *****************
  4842 ;; Defined at:
  4843 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2setdc.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4848 ;; Return value:  Size  Location     Type
  4849 ;;		None               void
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;Total ram usage:        6 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_initialization
  4868 ;;		_set_motor_speed
  4869 ;;		_motors_brake_all
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text45
  4874  001B5E                     __ptext45:
  4875                           	opt stack 0
  4876  001B5E                     _SetDCPWM2:
  4877                           	opt stack 25
  4878                           
  4879                           ;incstack = 0
  4880  001B5E  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4881  001B62  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4882  001B66  0E06               	movlw	6
  4883  001B68                     u25:
  4884  001B68  90D8               	bcf	status,0,c
  4885  001B6A  3611               	rlcf	??_SetDCPWM2,f,c
  4886  001B6C  3612               	rlcf	??_SetDCPWM2+1,f,c
  4887  001B6E  2EE8               	decfsz	wreg,f,c
  4888  001B70  D7FB               	goto	u25
  4889  001B72  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4890  001B76  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4891  001B7A  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4892  001B7E  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4893  001B82  90D8               	bcf	status,0,c
  4894  001B84  3211               	rrcf	??_SetDCPWM2,f,c
  4895  001B86  90D8               	bcf	status,0,c
  4896  001B88  3211               	rrcf	??_SetDCPWM2,f,c
  4897  001B8A  0E30               	movlw	48
  4898  001B8C  1611               	andwf	??_SetDCPWM2,f,c
  4899  001B8E  50BA               	movf	4026,w,c	;volatile
  4900  001B90  0BCF               	andlw	207
  4901  001B92  1011               	iorwf	??_SetDCPWM2,w,c
  4902  001B94  6EBA               	movwf	4026,c	;volatile
  4903  001B96  0012               	return	
  4904  001B98                     __end_of_SetDCPWM2:
  4905                           	opt stack 0
  4906                           stkptr	equ	0xFFC
  4907                           tblptru	equ	0xFF8
  4908                           tblptrh	equ	0xFF7
  4909                           tblptrl	equ	0xFF6
  4910                           tablat	equ	0xFF5
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           postinc0	equ	0xFEE
  4915                           wreg	equ	0xFE8
  4916                           status	equ	0xFD8
  4917                           
  4918 ;; *************** function _SetDCPWM1 *****************
  4919 ;; Defined at:
  4920 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1setdc.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:        6 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_initialization
  4945 ;;		_set_motor_speed
  4946 ;;		_motors_brake_all
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text46
  4951  001B98                     __ptext46:
  4952                           	opt stack 0
  4953  001B98                     _SetDCPWM1:
  4954                           	opt stack 25
  4955                           
  4956                           ;incstack = 0
  4957  001B98  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  4958  001B9C  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  4959  001BA0  0E06               	movlw	6
  4960  001BA2                     u15:
  4961  001BA2  90D8               	bcf	status,0,c
  4962  001BA4  3611               	rlcf	??_SetDCPWM1,f,c
  4963  001BA6  3612               	rlcf	??_SetDCPWM1+1,f,c
  4964  001BA8  2EE8               	decfsz	wreg,f,c
  4965  001BAA  D7FB               	goto	u15
  4966  001BAC  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  4967  001BB0  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  4968  001BB4  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  4969  001BB8  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  4970  001BBC  90D8               	bcf	status,0,c
  4971  001BBE  3211               	rrcf	??_SetDCPWM1,f,c
  4972  001BC0  90D8               	bcf	status,0,c
  4973  001BC2  3211               	rrcf	??_SetDCPWM1,f,c
  4974  001BC4  0E30               	movlw	48
  4975  001BC6  1611               	andwf	??_SetDCPWM1,f,c
  4976  001BC8  50BD               	movf	4029,w,c	;volatile
  4977  001BCA  0BCF               	andlw	207
  4978  001BCC  1011               	iorwf	??_SetDCPWM1,w,c
  4979  001BCE  6EBD               	movwf	4029,c	;volatile
  4980  001BD0  0012               	return	
  4981  001BD2                     __end_of_SetDCPWM1:
  4982                           	opt stack 0
  4983                           stkptr	equ	0xFFC
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           status	equ	0xFD8
  4994                           
  4995 ;; *************** function _OpenUSART *****************
  4996 ;; Defined at:
  4997 ;;		line 73 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/USART/uopen.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  config          1    wreg     unsigned char 
  5000 ;;  spbrg           2   14[COMRAM] unsigned int 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  config          1   19[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;		None               void
  5005 ;; Registers used:
  5006 ;;		wreg, status,2
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        6 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_initialization
  5023 ;;		_configureUSART
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text47
  5028  00194E                     __ptext47:
  5029                           	opt stack 0
  5030  00194E                     _OpenUSART:
  5031                           	opt stack 28
  5032                           
  5033                           ;incstack = 0
  5034                           ;OpenUSART@config stored from wreg
  5035  00194E  6E14               	movwf	OpenUSART@config,c
  5036  001950  0E00               	movlw	0
  5037  001952  6EAC               	movwf	4012,c	;volatile
  5038  001954  0E00               	movlw	0
  5039  001956  6EAB               	movwf	4011,c	;volatile
  5040  001958  B014               	btfsc	OpenUSART@config,0,c
  5041  00195A  88AC               	bsf	4012,4,c	;volatile
  5042  00195C  A214               	btfss	OpenUSART@config,1,c
  5043  00195E  D002               	goto	l1683
  5044  001960  8CAC               	bsf	4012,6,c	;volatile
  5045  001962  8CAB               	bsf	4011,6,c	;volatile
  5046  001964                     l1683:
  5047  001964  B414               	btfsc	OpenUSART@config,2,c
  5048  001966  8EAC               	bsf	4012,7,c	;volatile
  5049  001968  A614               	btfss	OpenUSART@config,3,c
  5050  00196A  D002               	goto	l702
  5051  00196C  88AB               	bsf	4011,4,c	;volatile
  5052  00196E  D001               	goto	l1691
  5053  001970                     l702:
  5054  001970  8AAB               	bsf	4011,5,c	;volatile
  5055  001972                     l1691:
  5056  001972  B814               	btfsc	OpenUSART@config,4,c
  5057  001974  84AC               	bsf	4012,2,c	;volatile
  5058  001976  989E               	bcf	3998,4,c	;volatile
  5059  001978  BA14               	btfsc	OpenUSART@config,5,c
  5060  00197A  86AB               	bsf	4011,3,c	;volatile
  5061  00197C  AC14               	btfss	OpenUSART@config,6,c
  5062  00197E  D002               	goto	l706
  5063  001980  8A9D               	bsf	3997,5,c	;volatile
  5064  001982  D001               	goto	l707
  5065  001984                     l706:
  5066  001984  9A9D               	bcf	3997,5,c	;volatile
  5067  001986                     l707:
  5068  001986  9A9E               	bcf	3998,5,c	;volatile
  5069  001988  AE14               	btfss	OpenUSART@config,7,c
  5070  00198A  D002               	goto	l708
  5071  00198C  889D               	bsf	3997,4,c	;volatile
  5072  00198E  D001               	goto	l709
  5073  001990                     l708:
  5074  001990  989D               	bcf	3997,4,c	;volatile
  5075  001992                     l709:
  5076  001992  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5077  001996  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5078  00199A  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  5079  00199E  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  5080  0019A0  5012               	movf	??_OpenUSART+1,w,c
  5081  0019A2  6EB0               	movwf	4016,c	;volatile
  5082  0019A4  8AAC               	bsf	4012,5,c	;volatile
  5083  0019A6  8EAB               	bsf	4011,7,c	;volatile
  5084  0019A8  9C94               	bcf	3988,6,c	;volatile
  5085  0019AA  8E94               	bsf	3988,7,c	;volatile
  5086  0019AC  B8AC               	btfsc	4012,4,c	;volatile
  5087  0019AE  BEAC               	btfsc	4012,7,c	;volatile
  5088  0019B0  D001               	goto	l711
  5089  0019B2  8C94               	bsf	3988,6,c	;volatile
  5090  0019B4                     l711:
  5091  0019B4  0012               	return	
  5092  0019B6                     __end_of_OpenUSART:
  5093                           	opt stack 0
  5094                           stkptr	equ	0xFFC
  5095                           tblptru	equ	0xFF8
  5096                           tblptrh	equ	0xFF7
  5097                           tblptrl	equ	0xFF6
  5098                           tablat	equ	0xFF5
  5099                           prodh	equ	0xFF4
  5100                           prodl	equ	0xFF3
  5101                           intcon	equ	0xFF2
  5102                           postinc0	equ	0xFEE
  5103                           wreg	equ	0xFE8
  5104                           status	equ	0xFD8
  5105                           
  5106 ;; *************** function _OpenTimer2 *****************
  5107 ;; Defined at:
  5108 ;;		line 17 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t2open.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  config          1    wreg     unsigned char 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  config          1   14[COMRAM] unsigned char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;		None               void
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;Total ram usage:        1 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    1
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_initialization
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text48
  5137  001E68                     __ptext48:
  5138                           	opt stack 0
  5139  001E68                     _OpenTimer2:
  5140                           	opt stack 28
  5141                           
  5142                           ;incstack = 0
  5143                           ;OpenTimer2@config stored from wreg
  5144  001E68  6E0F               	movwf	OpenTimer2@config,c
  5145  001E6A  500F               	movf	OpenTimer2@config,w,c
  5146  001E6C  0BFB               	andlw	251
  5147  001E6E  6ECA               	movwf	4042,c	;volatile
  5148  001E70  0E00               	movlw	0
  5149  001E72  6ECC               	movwf	4044,c	;volatile
  5150  001E74  929E               	bcf	3998,1,c	;volatile
  5151  001E76  AE0F               	btfss	OpenTimer2@config,7,c
  5152  001E78  D002               	goto	l676
  5153  001E7A  829D               	bsf	3997,1,c	;volatile
  5154  001E7C  D001               	goto	l677
  5155  001E7E                     l676:
  5156  001E7E  929D               	bcf	3997,1,c	;volatile
  5157  001E80                     l677:
  5158  001E80  84CA               	bsf	4042,2,c	;volatile
  5159  001E82  0012               	return	
  5160  001E84                     __end_of_OpenTimer2:
  5161                           	opt stack 0
  5162                           stkptr	equ	0xFFC
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _OpenPWM2 *****************
  5175 ;; Defined at:
  5176 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2open.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  period          1    wreg     unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  period          1   15[COMRAM] unsigned char 
  5181 ;;  ccp2mx          1   16[COMRAM] unsigned char 
  5182 ;;  pmmode          1    0        unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;		None               void
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;Total ram usage:        3 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_initialization
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text49
  5207  001BD2                     __ptext49:
  5208                           	opt stack 0
  5209  001BD2                     _OpenPWM2:
  5210                           	opt stack 28
  5211                           
  5212                           ;incstack = 0
  5213                           ;OpenPWM2@period stored from wreg
  5214  001BD2  6E10               	movwf	OpenPWM2@period,c
  5215  001BD4  0E0C               	movlw	12
  5216  001BD6  6EBA               	movwf	4026,c	;volatile
  5217  001BD8  0E05               	movlw	5
  5218  001BDA  6EF6               	movwf	tblptrl,c
  5219  001BDC                     	if	1	;There is more than 1 active tblptr byte
  5220  001BDC  0E00               	movlw	0
  5221  001BDE  6EF7               	movwf	tblptrh,c
  5222  001BE0                     	endif
  5223  001BE0                     	if	1	;There are 3 active tblptr bytes
  5224  001BE0  0E30               	movlw	48
  5225  001BE2  6EF8               	movwf	tblptru,c
  5226  001BE4                     	endif
  5227  001BE4  0008               	tblrd		*
  5228  001BE6  CFF5 F00F          	movff	tablat,??_OpenPWM2
  5229  001BEA  A00F               	btfss	??_OpenPWM2,0,c
  5230  001BEC  D002               	goto	l1789
  5231  001BEE  6811               	setf	OpenPWM2@ccp2mx,c
  5232  001BF0  D002               	goto	l624
  5233  001BF2                     l1789:
  5234  001BF2  0E00               	movlw	0
  5235  001BF4  6E11               	movwf	OpenPWM2@ccp2mx,c
  5236  001BF6                     l624:
  5237  001BF6  5011               	movf	OpenPWM2@ccp2mx,w,c
  5238  001BF8  B4D8               	btfsc	status,2,c
  5239  001BFA  D002               	goto	l625
  5240  001BFC  9294               	bcf	3988,1,c	;volatile
  5241  001BFE  D001               	goto	l626
  5242  001C00                     l625:
  5243  001C00  9693               	bcf	3987,3,c	;volatile
  5244  001C02                     l626:
  5245  001C02  94CA               	bcf	4042,2,c	;volatile
  5246  001C04  C010  FFCB         	movff	OpenPWM2@period,4043	;volatile
  5247  001C08  84CA               	bsf	4042,2,c	;volatile
  5248  001C0A  0012               	return	
  5249  001C0C                     __end_of_OpenPWM2:
  5250                           	opt stack 0
  5251                           stkptr	equ	0xFFC
  5252                           tblptru	equ	0xFF8
  5253                           tblptrh	equ	0xFF7
  5254                           tblptrl	equ	0xFF6
  5255                           tablat	equ	0xFF5
  5256                           prodh	equ	0xFF4
  5257                           prodl	equ	0xFF3
  5258                           intcon	equ	0xFF2
  5259                           postinc0	equ	0xFEE
  5260                           wreg	equ	0xFE8
  5261                           status	equ	0xFD8
  5262                           
  5263 ;; *************** function _OpenPWM1 *****************
  5264 ;; Defined at:
  5265 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1open.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  period          1    wreg     unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  period          1   14[COMRAM] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;		None               void
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;Total ram usage:        1 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    1
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_initialization
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text50
  5294  001F28                     __ptext50:
  5295                           	opt stack 0
  5296  001F28                     _OpenPWM1:
  5297                           	opt stack 28
  5298                           
  5299                           ;incstack = 0
  5300                           ;OpenPWM1@period stored from wreg
  5301  001F28  6E0F               	movwf	OpenPWM1@period,c
  5302  001F2A  0E0C               	movlw	12
  5303  001F2C  12BD               	iorwf	4029,f,c	;volatile
  5304  001F2E  9494               	bcf	3988,2,c	;volatile
  5305  001F30  94CA               	bcf	4042,2,c	;volatile
  5306  001F32  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  5307  001F36  84CA               	bsf	4042,2,c	;volatile
  5308  001F38  0012               	return	
  5309  001F3A                     __end_of_OpenPWM1:
  5310                           	opt stack 0
  5311                           stkptr	equ	0xFFC
  5312                           tblptru	equ	0xFF8
  5313                           tblptrh	equ	0xFF7
  5314                           tblptrl	equ	0xFF6
  5315                           tablat	equ	0xFF5
  5316                           prodh	equ	0xFF4
  5317                           prodl	equ	0xFF3
  5318                           intcon	equ	0xFF2
  5319                           postinc0	equ	0xFEE
  5320                           wreg	equ	0xFE8
  5321                           status	equ	0xFD8
  5322                           
  5323 ;; *************** function _OpenADC *****************
  5324 ;; Defined at:
  5325 ;;		line 68 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  config          1    wreg     unsigned char 
  5328 ;;  config2         1   14[COMRAM] unsigned char 
  5329 ;;  portconfig      1   15[COMRAM] unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  config          1   18[COMRAM] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;		None               void
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;Total ram usage:        5 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    1
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_initialization
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text51
  5356  001A14                     __ptext51:
  5357                           	opt stack 0
  5358  001A14                     _OpenADC:
  5359                           	opt stack 28
  5360                           
  5361                           ;incstack = 0
  5362                           ;OpenADC@config stored from wreg
  5363  001A14  6E13               	movwf	OpenADC@config,c
  5364  001A16  0E00               	movlw	0
  5365  001A18  6EC2               	movwf	4034,c	;volatile
  5366  001A1A  0E00               	movlw	0
  5367  001A1C  6EC0               	movwf	4032,c	;volatile
  5368  001A1E  90D8               	bcf	status,0,c
  5369  001A20  300F               	rrcf	OpenADC@config2,w,c
  5370  001A22  0B3C               	andlw	60
  5371  001A24  6EC2               	movwf	4034,c	;volatile
  5372  001A26  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  5373  001A2A  3A11               	swapf	??_OpenADC,f,c
  5374  001A2C  0EF0               	movlw	240
  5375  001A2E  1611               	andwf	??_OpenADC,f,c
  5376  001A30  0E30               	movlw	48
  5377  001A32  1611               	andwf	??_OpenADC,f,c
  5378  001A34  5010               	movf	OpenADC@portconfig,w,c
  5379  001A36  0B0F               	andlw	15
  5380  001A38  1011               	iorwf	??_OpenADC,w,c
  5381  001A3A  6EC1               	movwf	4033,c	;volatile
  5382  001A3C  C013  F011         	movff	OpenADC@config,??_OpenADC
  5383  001A40  90D8               	bcf	status,0,c
  5384  001A42  3611               	rlcf	??_OpenADC,f,c
  5385  001A44  90D8               	bcf	status,0,c
  5386  001A46  3611               	rlcf	??_OpenADC,f,c
  5387  001A48  0E38               	movlw	56
  5388  001A4A  1611               	andwf	??_OpenADC,f,c
  5389  001A4C  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  5390  001A50  3A12               	swapf	??_OpenADC+1,f,c
  5391  001A52  0E0F               	movlw	15
  5392  001A54  1612               	andwf	??_OpenADC+1,f,c
  5393  001A56  0E07               	movlw	7
  5394  001A58  1612               	andwf	??_OpenADC+1,f,c
  5395  001A5A  5013               	movf	OpenADC@config,w,c
  5396  001A5C  0B80               	andlw	128
  5397  001A5E  1012               	iorwf	??_OpenADC+1,w,c
  5398  001A60  1011               	iorwf	??_OpenADC,w,c
  5399  001A62  6EC0               	movwf	4032,c	;volatile
  5400  001A64  AE0F               	btfss	OpenADC@config2,7,c
  5401  001A66  D003               	goto	l576
  5402  001A68  9C9E               	bcf	3998,6,c	;volatile
  5403  001A6A  8C9D               	bsf	3997,6,c	;volatile
  5404  001A6C  8CF2               	bsf	intcon,6,c	;volatile
  5405  001A6E                     l576:
  5406  001A6E  80C2               	bsf	4034,0,c	;volatile
  5407  001A70  0012               	return	
  5408  001A72                     __end_of_OpenADC:
  5409                           	opt stack 0
  5410                           stkptr	equ	0xFFC
  5411                           tblptru	equ	0xFF8
  5412                           tblptrh	equ	0xFF7
  5413                           tblptrl	equ	0xFF6
  5414                           tablat	equ	0xFF5
  5415                           prodh	equ	0xFF4
  5416                           prodl	equ	0xFF3
  5417                           intcon	equ	0xFF2
  5418                           postinc0	equ	0xFEE
  5419                           wreg	equ	0xFE8
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _OpenTimer0 *****************
  5423 ;; Defined at:
  5424 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0open.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  config          1    wreg     unsigned char 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  config          1   14[COMRAM] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;Total ram usage:        1 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    1
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_main
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text52
  5453  001DD2                     __ptext52:
  5454                           	opt stack 0
  5455  001DD2                     _OpenTimer0:
  5456                           	opt stack 29
  5457                           
  5458                           ;incstack = 0
  5459                           ;OpenTimer0@config stored from wreg
  5460  001DD2  6E0F               	movwf	OpenTimer0@config,c
  5461  001DD4  500F               	movf	OpenTimer0@config,w,c
  5462  001DD6  0B7F               	andlw	127
  5463  001DD8  6ED5               	movwf	4053,c	;volatile
  5464  001DDA  0E00               	movlw	0
  5465  001DDC  6ED7               	movwf	4055,c	;volatile
  5466  001DDE  0E00               	movlw	0
  5467  001DE0  6ED6               	movwf	4054,c	;volatile
  5468  001DE2  94F2               	bcf	intcon,2,c	;volatile
  5469  001DE4  AE0F               	btfss	OpenTimer0@config,7,c
  5470  001DE6  D002               	goto	l647
  5471  001DE8  8AF2               	bsf	intcon,5,c	;volatile
  5472  001DEA  D001               	goto	l648
  5473  001DEC                     l647:
  5474  001DEC  9AF2               	bcf	intcon,5,c	;volatile
  5475  001DEE                     l648:
  5476  001DEE  8ED5               	bsf	4053,7,c	;volatile
  5477  001DF0  0012               	return	
  5478  001DF2                     __end_of_OpenTimer0:
  5479                           	opt stack 0
  5480                           stkptr	equ	0xFFC
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           intcon	equ	0xFF2
  5488                           postinc0	equ	0xFEE
  5489                           wreg	equ	0xFE8
  5490                           status	equ	0xFD8
  5491                           
  5492 ;; *************** function _LVtrap *****************
  5493 ;; Defined at:
  5494 ;;		line 447 in file "../sumovore.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;		None               void
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;Total ram usage:        0 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    3
  5515 ;; This function calls:
  5516 ;;		_gtrap
  5517 ;;		_openPORTD
  5518 ;;		_printf
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text53
  5525  001DF2                     __ptext53:
  5526                           	opt stack 0
  5527  001DF2                     _LVtrap:
  5528                           	opt stack 27
  5529                           
  5530                           ;sumovore.c: 449: printf("\\<LVD>");
  5531                           
  5532                           ;incstack = 0
  5533  001DF2  0E10               	movlw	high STR_7
  5534  001DF4  6E11               	movwf	printf@f+1,c
  5535  001DF6  0E6B               	movlw	low STR_7
  5536  001DF8  6E10               	movwf	printf@f,c
  5537  001DFA  EC06  F00E         	call	_printf	;wreg free
  5538                           
  5539                           ;sumovore.c: 450: openPORTD();
  5540  001DFE  ECDB  F00F         	call	_openPORTD	;wreg free
  5541                           
  5542                           ;sumovore.c: 451: PORTDbits.RD0=!1;
  5543  001E02  9083               	bcf	3971,0,c	;volatile
  5544                           
  5545                           ;sumovore.c: 452: PORTDbits.RD1=!0;
  5546  001E04  8283               	bsf	3971,1,c	;volatile
  5547                           
  5548                           ;sumovore.c: 453: PORTDbits.RD2=!0;
  5549  001E06  8483               	bsf	3971,2,c	;volatile
  5550                           
  5551                           ;sumovore.c: 454: PORTDbits.RD3=!1;
  5552  001E08  9683               	bcf	3971,3,c	;volatile
  5553                           
  5554                           ;sumovore.c: 455: PORTDbits.RD4=!0;
  5555  001E0A  8883               	bsf	3971,4,c	;volatile
  5556                           
  5557                           ;sumovore.c: 456: gtrap();
  5558  001E0C  EC39  F00D         	call	_gtrap	;wreg free
  5559  001E10  0012               	return	
  5560  001E12                     __end_of_LVtrap:
  5561                           	opt stack 0
  5562                           stkptr	equ	0xFFC
  5563                           tblptru	equ	0xFF8
  5564                           tblptrh	equ	0xFF7
  5565                           tblptrl	equ	0xFF6
  5566                           tablat	equ	0xFF5
  5567                           prodh	equ	0xFF4
  5568                           prodl	equ	0xFF3
  5569                           intcon	equ	0xFF2
  5570                           postinc0	equ	0xFEE
  5571                           wreg	equ	0xFE8
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function _printf *****************
  5575 ;; Defined at:
  5576 ;;		line 464 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  f               2   15[COMRAM] PTR const unsigned char 
  5579 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  5580 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  _val            5    0        struct .
  5583 ;;  ap              2   17[COMRAM] PTR void [1]
  5584 ;;		 -> ?_printf(2), 
  5585 ;;  c               1   19[COMRAM] char 
  5586 ;;  flag            1    0        unsigned char 
  5587 ;;  prec            1    0        char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2   15[COMRAM] int 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;Total ram usage:        5 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    2
  5604 ;; This function calls:
  5605 ;;		_putch
  5606 ;; This function is called by:
  5607 ;;		_main
  5608 ;;		_PORtask
  5609 ;;		_BORtask
  5610 ;;		_WDTtask
  5611 ;;		_STKFULtask
  5612 ;;		_RESETtask
  5613 ;;		_LVtrap
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text54
  5618  001C0C                     __ptext54:
  5619                           	opt stack 0
  5620  001C0C                     _printf:
  5621                           	opt stack 28
  5622                           
  5623                           ;doprnt.c: 466: va_list ap;
  5624                           ;doprnt.c: 499: signed char c;
  5625                           ;doprnt.c: 506: signed char prec;
  5626                           ;doprnt.c: 508: unsigned char flag;
  5627                           ;doprnt.c: 527: union {
  5628                           ;doprnt.c: 528: unsigned int _val;
  5629                           ;doprnt.c: 529: struct {
  5630                           ;doprnt.c: 530: const char * _cp;
  5631                           ;doprnt.c: 531: unsigned _len;
  5632                           ;doprnt.c: 532: } _str;
  5633                           ;doprnt.c: 533: } _val;
  5634                           ;doprnt.c: 542: *ap = __va_start();
  5635                           
  5636                           ;incstack = 0
  5637  001C0C  0E00               	movlw	high (?_printf+2)
  5638  001C0E  6E13               	movwf	printf@ap+1,c
  5639  001C10  0E12               	movlw	low (?_printf+2)
  5640  001C12  6E12               	movwf	printf@ap,c
  5641                           
  5642                           ;doprnt.c: 545: while(c = *f++) {
  5643  001C14  D003               	goto	l1393
  5644  001C16                     l1391:
  5645                           
  5646                           ;doprnt.c: 549: {
  5647                           ;doprnt.c: 550: (putch(c) );
  5648  001C16  5014               	movf	printf@c,w,c
  5649  001C18  ECB7  F00F         	call	_putch
  5650  001C1C                     l1393:
  5651  001C1C  C010  FFF6         	movff	printf@f,tblptrl
  5652  001C20  C011  FFF7         	movff	printf@f+1,tblptrh
  5653  001C24  4A10               	infsnz	printf@f,f,c
  5654  001C26  2A11               	incf	printf@f+1,f,c
  5655  001C28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5656  001C28  6AF8               	clrf	tblptru,c
  5657  001C2A                     	endif
  5658  001C2A                     	if	0	;tblptru may be non-zero
  5659  001C2A                     	endif
  5660  001C2A  0008               	tblrd		*
  5661  001C2C  CFF5 F014          	movff	tablat,printf@c
  5662  001C30  6614               	tstfsz	printf@c& (0+255),c
  5663  001C32  D7F1               	goto	l1391
  5664                           
  5665                           ;doprnt.c: 1478: }
  5666                           ;doprnt.c: 1542: }
  5667                           ;doprnt.c: 1549: return 0;
  5668                           ;	Return value of _printf is never used
  5669  001C34  0012               	return	
  5670  001C36                     __end_of_printf:
  5671                           	opt stack 0
  5672                           stkptr	equ	0xFFC
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           prodh	equ	0xFF4
  5678                           prodl	equ	0xFF3
  5679                           intcon	equ	0xFF2
  5680                           postinc0	equ	0xFEE
  5681                           wreg	equ	0xFE8
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _putch *****************
  5685 ;; Defined at:
  5686 ;;		line 51 in file "../../Common/configureUSART.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  data            1    wreg     unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  data            1   14[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;		None               void
  5693 ;; Registers used:
  5694 ;;		wreg
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;Total ram usage:        1 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_printf
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text55
  5715  001F6E                     __ptext55:
  5716                           	opt stack 0
  5717  001F6E                     _putch:
  5718                           	opt stack 28
  5719                           
  5720                           ;incstack = 0
  5721                           ;putch@data stored from wreg
  5722  001F6E  6E0F               	movwf	putch@data,c
  5723  001F70                     l536:
  5724  001F70  A89E               	btfss	3998,4,c	;volatile
  5725  001F72  D7FE               	goto	l536
  5726                           
  5727                           ;configureUSART.c: 54: TXREG = data;
  5728  001F74  C00F  FFAD         	movff	putch@data,4013	;volatile
  5729  001F78  0012               	return	
  5730  001F7A                     __end_of_putch:
  5731                           	opt stack 0
  5732                           stkptr	equ	0xFFC
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           prodh	equ	0xFF4
  5738                           prodl	equ	0xFF3
  5739                           intcon	equ	0xFF2
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function _openPORTD *****************
  5745 ;; Defined at:
  5746 ;;		line 167 in file "../sumovore.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;		None               void
  5753 ;; Registers used:
  5754 ;;		wreg, status,2
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    1
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_initialization
  5771 ;;		_LVtrap
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text56
  5776  001FB6                     __ptext56:
  5777                           	opt stack 0
  5778  001FB6                     _openPORTD:
  5779                           	opt stack 28
  5780                           
  5781                           ;sumovore.c: 169: TRISD = 0b01100000;
  5782                           
  5783                           ;incstack = 0
  5784  001FB6  0E60               	movlw	96
  5785  001FB8  6E95               	movwf	3989,c	;volatile
  5786  001FBA  0012               	return	
  5787  001FBC                     __end_of_openPORTD:
  5788                           	opt stack 0
  5789                           stkptr	equ	0xFFC
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           postinc0	equ	0xFEE
  5798                           wreg	equ	0xFE8
  5799                           status	equ	0xFD8
  5800                           
  5801 ;; *************** function _gtrap *****************
  5802 ;; Defined at:
  5803 ;;		line 462 in file "../sumovore.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  count           4   14[COMRAM] unsigned long 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;		None               void
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        4 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_BORtask
  5828 ;;		_WDTtask
  5829 ;;		_STKFULtask
  5830 ;;		_RESETtask
  5831 ;;		_LVtrap
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text57
  5836  001A72                     __ptext57:
  5837                           	opt stack 0
  5838  001A72                     _gtrap:
  5839                           	opt stack 26
  5840                           
  5841                           ;sumovore.c: 464: unsigned long count=0;
  5842                           
  5843                           ;incstack = 0
  5844  001A72  0E00               	movlw	0
  5845  001A74  6E0F               	movwf	gtrap@count,c
  5846  001A76  0E00               	movlw	0
  5847  001A78  6E10               	movwf	gtrap@count+1,c
  5848  001A7A  0E00               	movlw	0
  5849  001A7C  6E11               	movwf	gtrap@count+2,c
  5850  001A7E  0E00               	movlw	0
  5851  001A80  6E12               	movwf	gtrap@count+3,c
  5852  001A82                     l241:
  5853  001A82  0004               	clrwdt		;# 
  5854                           
  5855                           ;sumovore.c: 469: if (count==30000u)
  5856  001A84  5010               	movf	gtrap@count+1,w,c
  5857  001A86  0A75               	xorlw	117
  5858  001A88  0E30               	movlw	48
  5859  001A8A  B4D8               	btfsc	status,2,c
  5860  001A8C  180F               	xorwf	gtrap@count,w,c
  5861  001A8E  1011               	iorwf	gtrap@count+2,w,c
  5862  001A90  1012               	iorwf	gtrap@count+3,w,c
  5863  001A92  A4D8               	btfss	status,2,c
  5864  001A94  D00B               	goto	l1417
  5865                           
  5866                           ;sumovore.c: 470: {
  5867                           ;sumovore.c: 471: count=0;
  5868  001A96  0E00               	movlw	0
  5869  001A98  6E0F               	movwf	gtrap@count,c
  5870  001A9A  0E00               	movlw	0
  5871  001A9C  6E10               	movwf	gtrap@count+1,c
  5872  001A9E  0E00               	movlw	0
  5873  001AA0  6E11               	movwf	gtrap@count+2,c
  5874  001AA2  0E00               	movlw	0
  5875  001AA4  6E12               	movwf	gtrap@count+3,c
  5876                           
  5877                           ;sumovore.c: 472: PORTDbits.RD0=!1;
  5878  001AA6  9083               	bcf	3971,0,c	;volatile
  5879                           
  5880                           ;sumovore.c: 473: PORTDbits.RD1=!0;
  5881  001AA8  8283               	bsf	3971,1,c	;volatile
  5882                           
  5883                           ;sumovore.c: 474: }
  5884  001AAA  D00B               	goto	l1421
  5885  001AAC                     l1417:
  5886                           
  5887                           ;sumovore.c: 475: else if (count==15000u)
  5888  001AAC  5010               	movf	gtrap@count+1,w,c
  5889  001AAE  0A3A               	xorlw	58
  5890  001AB0  0E98               	movlw	152
  5891  001AB2  B4D8               	btfsc	status,2,c
  5892  001AB4  180F               	xorwf	gtrap@count,w,c
  5893  001AB6  1011               	iorwf	gtrap@count+2,w,c
  5894  001AB8  1012               	iorwf	gtrap@count+3,w,c
  5895  001ABA  A4D8               	btfss	status,2,c
  5896  001ABC  D002               	goto	l1421
  5897                           
  5898                           ;sumovore.c: 476: {
  5899                           ;sumovore.c: 477: PORTDbits.RD0=!0;
  5900  001ABE  8083               	bsf	3971,0,c	;volatile
  5901                           
  5902                           ;sumovore.c: 478: PORTDbits.RD1=!1;
  5903  001AC0  9283               	bcf	3971,1,c	;volatile
  5904  001AC2                     l1421:
  5905                           
  5906                           ;sumovore.c: 479: }
  5907                           ;sumovore.c: 480: count++;
  5908  001AC2  0E01               	movlw	1
  5909  001AC4  260F               	addwf	gtrap@count,f,c
  5910  001AC6  0E00               	movlw	0
  5911  001AC8  2210               	addwfc	gtrap@count+1,f,c
  5912  001ACA  2211               	addwfc	gtrap@count+2,f,c
  5913  001ACC  2212               	addwfc	gtrap@count+3,f,c
  5914  001ACE  D7D9               	goto	l241
  5915  001AD0                     __end_of_gtrap:
  5916                           	opt stack 0
  5917                           stkptr	equ	0xFFC
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           intcon	equ	0xFF2
  5925                           postinc0	equ	0xFEE
  5926                           wreg	equ	0xFE8
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function _high_isr *****************
  5930 ;; Defined at:
  5931 ;;		line 24 in file "../interrupts.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;		None               void
  5938 ;; Registers used:
  5939 ;;		wreg, status,2
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;Total ram usage:       14 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		Interrupt level 2
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	intcode
  5959  000008                     __pintcode:
  5960                           	opt stack 0
  5961  000008                     _high_isr:
  5962                           	opt stack 24
  5963                           
  5964                           ;incstack = 0
  5965  000008  CFFA F001          	movff	pclath,??_high_isr
  5966  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5967  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5968  000014  ED68  F00C         	call	int_func,f	;refresh shadow registers
  5969                           stkptr	equ	0xFFC
  5970                           pclatu	equ	0xFFB
  5971                           pclath	equ	0xFFA
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           intcon	equ	0xFF2
  5979                           postinc0	equ	0xFEE
  5980                           fsr0l	equ	0xFE9
  5981                           wreg	equ	0xFE8
  5982                           status	equ	0xFD8
  5983                           
  5984                           	psect	intcode_body
  5985  0018D0                     __pintcode_body:
  5986                           	opt stack 24
  5987  0018D0                     int_func:
  5988                           	opt stack 24
  5989  0018D0  0006               	pop		; remove dummy address from shadow register refresh
  5990  0018D2  CFEA F004          	movff	fsr0h,??_high_isr+3
  5991  0018D6  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5992  0018DA  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5993  0018DE  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5994  0018E2  CFDA F008          	movff	fsr2h,??_high_isr+7
  5995  0018E6  CFF3 F009          	movff	prodl,??_high_isr+8
  5996  0018EA  CFF4 F00A          	movff	prodh,??_high_isr+9
  5997  0018EE  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5998  0018F2  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  5999  0018F6  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6000  0018FA  CFF5 F00E          	movff	tablat,??_high_isr+13
  6001                           
  6002                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6003  0018FE  94A1               	bcf	4001,2,c	;volatile
  6004                           
  6005                           ;interrupts.c: 27: TRISA = 0xff;
  6006  001900  6892               	setf	3986,c	;volatile
  6007                           
  6008                           ;interrupts.c: 28: TRISB = 0xff;
  6009  001902  6893               	setf	3987,c	;volatile
  6010                           
  6011                           ;interrupts.c: 29: TRISC = 0xff;
  6012  001904  6894               	setf	3988,c	;volatile
  6013                           
  6014                           ;interrupts.c: 30: TRISD = 0xff;
  6015  001906  6895               	setf	3989,c	;volatile
  6016                           
  6017                           ;interrupts.c: 31: TRISE = 0x03;
  6018  001908  0E03               	movlw	3
  6019  00190A  6E96               	movwf	3990,c	;volatile
  6020                           
  6021                           ;interrupts.c: 32: lvd_flag =1;
  6022  00190C  0E01               	movlw	1
  6023  00190E  6E2D               	movwf	_lvd_flag,c
  6024                           
  6025                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6026  001910  94A0               	bcf	4000,2,c	;volatile
  6027                           
  6028                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6029  001912  98D2               	bcf	4050,4,c	;volatile
  6030  001914  C00E  FFF5         	movff	??_high_isr+13,tablat
  6031  001918  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6032  00191C  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6033  001920  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6034  001924  C00A  FFF4         	movff	??_high_isr+9,prodh
  6035  001928  C009  FFF3         	movff	??_high_isr+8,prodl
  6036  00192C  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6037  001930  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6038  001934  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6039  001938  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6040  00193C  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6041  001940  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6042  001944  C002  FFFB         	movff	??_high_isr+1,pclatu
  6043  001948  C001  FFFA         	movff	??_high_isr,pclath
  6044  00194C  0011               	retfie		f
  6045  00194E                     __end_of_high_isr:
  6046                           	opt stack 0
  6047                           stkptr	equ	0xFFC
  6048                           pclatu	equ	0xFFB
  6049                           pclath	equ	0xFFA
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           fsr0h	equ	0xFEA
  6059                           fsr0l	equ	0xFE9
  6060                           wreg	equ	0xFE8
  6061                           fsr1h	equ	0xFE2
  6062                           fsr1l	equ	0xFE1
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           stkptr	equ	0xFFC
  6067                           pclatu	equ	0xFFB
  6068                           pclath	equ	0xFFA
  6069                           tblptru	equ	0xFF8
  6070                           tblptrh	equ	0xFF7
  6071                           tblptrl	equ	0xFF6
  6072                           tablat	equ	0xFF5
  6073                           prodh	equ	0xFF4
  6074                           prodl	equ	0xFF3
  6075                           intcon	equ	0xFF2
  6076                           postinc0	equ	0xFEE
  6077                           fsr0h	equ	0xFEA
  6078                           fsr0l	equ	0xFE9
  6079                           wreg	equ	0xFE8
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           fsr2h	equ	0xFDA
  6083                           fsr2l	equ	0xFD9
  6084                           status	equ	0xFD8
  6085                           
  6086                           	psect	rparam
  6087  0000                     stkptr	equ	0xFFC
  6088                           pclatu	equ	0xFFB
  6089                           pclath	equ	0xFFA
  6090                           tblptru	equ	0xFF8
  6091                           tblptrh	equ	0xFF7
  6092                           tblptrl	equ	0xFF6
  6093                           tablat	equ	0xFF5
  6094                           prodh	equ	0xFF4
  6095                           prodl	equ	0xFF3
  6096                           intcon	equ	0xFF2
  6097                           postinc0	equ	0xFEE
  6098                           fsr0h	equ	0xFEA
  6099                           fsr0l	equ	0xFE9
  6100                           wreg	equ	0xFE8
  6101                           fsr1h	equ	0xFE2
  6102                           fsr1l	equ	0xFE1
  6103                           fsr2h	equ	0xFDA
  6104                           fsr2l	equ	0xFD9
  6105                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    14
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1446$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _motor_control->_set_directive
    _start_tmr->_WriteTimer0
    _check_state->_check_sensors
    _check_sensors->_adc
    _adc->_ReadADC
    _adc->_SetChanADC
    _change_track->_set_directive
    _turn_right->_set_motor_speed
    _turn_left->_set_motor_speed
    _straight_fwd->_set_motor_speed
    _spin_right->_set_motor_speed
    _spin_left->_set_motor_speed
    _pirouette_right->_set_motor_speed
    _pirouette_left->_set_motor_speed
    _full_stp->_set_motor_speed
    _set_motor_speed->_SetDCPWM1
    _set_motor_speed->_SetDCPWM2
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _LVtrap->_printf
    _printf->_putch

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45884
                             _LVtrap
                         _OpenTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                      _motor_control
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _motor_control                                        0     0      0   41737
                         _ReadTimer0
                       _change_track
                        _check_state
                            _clr_tmr
                           _full_stp
                      _set_directive
                          _start_tmr
 ---------------------------------------------------------------------------------
 (2) _start_tmr                                            0     0      0     151
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (3) _WriteTimer0                                          4     2      2     151
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clr_tmr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_state                                          0     0      0      30
                      _check_sensors
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_sensors                                        1     1      0      30
                                             19 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (4) _adc                                                  3     1      2      30
                                             16 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _change_track                                         0     0      0   19636
                            _clr_mem
                      _set_directive
 ---------------------------------------------------------------------------------
 (2) _set_directive                                        2     0      2   19636
                                             29 COMRAM     2     0      2
                           _full_stp
                     _pirouette_left
                    _pirouette_right
                          _spin_left
                         _spin_right
                       _straight_fwd
                          _turn_left
                         _turn_right
 ---------------------------------------------------------------------------------
 (3) _turn_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _turn_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _straight_fwd                                         0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_right                                      0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_left                                       0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _full_stp                                             0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (4) _set_motor_speed                                      9     6      3    2254
                                             20 COMRAM     9     6      3
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (3) _clr_mem                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      30
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3225
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2245
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     461
                                             20 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     446
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM2                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM1                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     256
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      30
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     211
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     446
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12    10      2     416
                                             15 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _motor_control
     _ReadTimer0
     _change_track
       _clr_mem
       _set_directive
         _full_stp
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _straight_fwd
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
     _check_state
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _set_leds
     _clr_tmr
     _full_stp
       _set_motor_speed
         _SetDCPWM1
         _SetDCPWM2
     _set_directive
       _full_stp
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _straight_fwd
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
     _start_tmr
       _WriteTimer0
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      2D       1       35.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      34        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Apr  5 17:23:50 2018

                         _STKPTRbits 000FFC                                   u15 1BA2  
                                 u25 1B68                                   u70 156A  
                                 u90 1596                                   u76 156C  
                                 u96 1598                          __CFG_BORV$0 000000  
                   ??_pirouette_left 001E                                  l211 1B5C  
                                l214 17AC                                  l310 1716  
                                l215 1754                                  l207 1B4E  
                                l241 1A82                                  l330 19FA  
                                l323 19CC                                  l180 1560  
                                l333 1A0A                                  l326 19DC  
                                l183 158C                                  l336 1A12  
                                l408 138A                                  l425 14DA  
                                l461 1C5C                                  l702 1970  
                                l711 19B4                                  l536 1F70  
                                l624 1BF6                                  l625 1C00  
                                l626 1C02                                  l706 1984  
                                l554 1F6C                                  l707 1986  
                                l708 1990                                  l709 1992  
                                l718 1F46                                  l647 1DEC  
                                l727 1EF0                                  l648 1DEE  
                                l576 1A6E                                  l736 1EDC  
                                l676 1E7E                                  l677 1E80  
                                u100 1F6A                                  u200 165A  
                                u210 185A                                  u220 1870  
                                u206 165C                                  u230 1888  
                                u160 15BC                                  u240 18A2  
                                u216 185C                                  u170 15E2  
                                u250 18BE                                  u226 1872  
                                u180 160C                                  u236 188A  
                                u190 1634                                  u166 15BE  
                                u246 18A4                                  _PR2 000FCB  
                                u176 15E4                                  u256 18C0  
                                u186 160E                                  u196 1636  
               __size_of_WriteTimer0 0012                                  _adc 1D8E  
               __end_of_change_track 1A14                                  wreg 000FE8  
                  ??_pirouette_right 001E                      ReadTimer0@timer 0011  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               ?_adc 0011                                 l2011 126A  
                               l2003 1256                                 l2101 143C  
                               l2103 1440                                 l2023 12B2  
                               l2015 1282                                 l2007 1260  
                               l2033 12E0                                 l2027 12C8  
                               l2019 129A                                 l2107 1446  
                               l1421 1AC2                                 l1501 17A0  
                               l2053 1348                                 l2045 131C  
                               l2037 12F4                                 l2109 14C2  
                               l1351 1530                                 l2047 1320  
                               l2039 12FE                                 l2143 1B00  
                               l1417 1AAC                                 l2057 135E  
                               l1515 1F44                                 l1371 158E  
                               l1363 1562                                 l1355 1548  
                               l2091 1416                                 l2083 13F0  
                               l2059 1366                                 l1365 1578  
                               l1621 1692                                 l2093 141A  
                               l2085 13F8                                 l2069 13A4  
                               l1391 1C16                                 l1615 167E  
                               l2079 13DA                                 l1393 1C1C  
                               l1633 16BE                                 l1467 1EEE  
                               l1651 1700                                 l1627 16A8  
                               l2099 1438                                 l1733 1B3E  
                               l1645 16EA                                 l1901 10BA  
                               l1559 1EDA                                 l1639 16D4  
                               l1399 1D9A                                 l1497 178A  
                               l1729 1B2E                                 l1817 19E4  
                               l1913 10F2                                 l1691 1972  
                               l1683 1964                                 l1739 1B58  
                               l1923 112A                                 l1941 1172  
                               l1933 1158                                 l1917 110A  
                               l1909 10DA                                 l1951 119C  
                               l1927 1138                                 l1961 11CC  
                               l1937 1162                                 l1955 11AC  
                               l1947 1192                                 l1789 1BF2  
                               l1983 120A                                 l1975 11F8  
                               l1969 11D8                                 l1897 10A2  
                               l1997 1236                                 l1989 122A  
                    __end_of_BORtask 1DD2                                 STR_1 100F  
                               STR_2 1078                                 STR_3 1072  
                               STR_4 1062                                 STR_5 1059  
                               STR_6 104F                                 STR_7 106B  
                               _TMR2 000FCC                         __CFG_WDTPS$8 000000  
                               _TXIF 007CF4                     ??_initialization 001D  
                               _main 1AD0                __end_of_check_sensors 166A  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               pclat 000FFA                        __CFG_BOREN$ON 000000  
                    __end_of_PORtask 17C2                                 prodh 000FF4  
                               prodl 000FF3                __size_of_straight_fwd 0026  
                               start 0018                      __end_of_WDTtask 1E4C  
                    __end_of_BusyADC 1F6E                      __end_of_ReadADC 1F8E  
                    __end_of_OpenADC 1A72                                ??_adc 0013  
                              ?_main 0001                                _T0CON 000FD5  
                              _T2CON 000FCA                   __size_of_RESETtask 001C  
                              _RCSTA 000FAB                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _SPBRG 000FAF  
                              _PORTD 000F83                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                    _set_motor_speed 14DC                                _TXREG 000FAD  
                              _TXSTA 000FAC                      __end_of_isWDTTO 1EDE  
            __end_of_openPORTCforPWM 1F56                      __end_of_clr_mem 1F98  
                    __end_of_clr_tmr 1F62                                _isBOR 1F3A  
                              _isPOR 1EDE                                _count 0020  
                              _gtrap 1A72                 __size_of_check_state 000A  
                       _straight_fwd 1CAA                                _putch 1F6E  
                    __end_of_openLVD 1EB4                           _ConvertADC 1FBC  
                              tablat 000FF5           __size_of_openPORTCforUSART 0006  
                              status 000FD8                          ?_STKFULtask 0001  
                     __CFG_MCLRE$OFF 000000                      __initialization 1EF2  
                       __end_of_main 1B1E                           _ReadTimer0 1F16  
                   __end_of_OpenPWM1 1F3A                     __end_of_OpenPWM2 1C0C  
                             ??_main 0020                        __activetblptr 000003  
                         _SetChanADC 1EB4                            ??_BORtask 0015  
                             ?_isBOR 0001                               ?_isPOR 0001  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               ?_gtrap 0001  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _CCPR1L 000FBE                               _CCPR2L 000FBB  
                             ?_putch 0001                            ??_PORtask 0015  
                          ??_WDTtask 0015                           _OpenTimer0 1DD2  
                         _OpenTimer2 1E68                               _TMR0IF 007F92  
                             _SPBRGH 000FB0                   __size_of_SetDCPWM1 003A  
                 __size_of_SetDCPWM2 003A                            ??_BusyADC 000F  
                          ??_ReadADC 0011                               _LVtrap 1DF2  
                  __end_of_RESETtask 1E68                            ??_OpenADC 0011  
                       ?_reset_codes 0001                     __end_of_high_isr 194E  
                 __size_of_OpenUSART 0068                       __CFG_STVREN$ON 000000  
                   OpenTimer0@config 000F              __end_of_set_motor_speed 15A6  
                   OpenTimer2@config 000F                               _memory 0022  
                             clear_0 1EF8                     __end_of_full_stp 1D8E  
              __size_of_change_track 005E                            ??_isWDTTO 000F  
                             _printf 1C0C                            ??_clr_mem 000F  
                          ??_clr_tmr 000F                     __end_of_set_leds 18D0  
                          ??_openLVD 000F                  __size_of_STKFULtask 001E  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   ?_openPORTCforPWM 0001                __end_of_set_directive 1718  
                        ?_ConvertADC 0001                           __accesstop 0080  
            __end_of__initialization 1EFE          set_motor_speed@dir_modifier 001B  
                         adc@channel 0013                         _change_track 19B6  
              __end_of_set_osc_32MHz 1C5E                       __pcstackCOMRAM 0001  
                        ?_ReadTimer0 000F                        __end_of_isBOR 1F48  
                      __end_of_isPOR 1EF2                      _pirouette_right 1D1C  
                      __end_of_gtrap 1AD0                        __end_of_putch 1F7A  
                  __end_of_SetDCPWM1 1BD2                    __end_of_SetDCPWM2 1B98  
                      ??_StatusReset 000F                          ?_SetChanADC 0001  
                      ?_lvd_flag_set 0001                              ??_isBOR 000F  
                            ??_isPOR 000F                    __end_of_OpenUSART 19B6  
                            ??_gtrap 000F                              ??_putch 000F  
                        ?_OpenTimer0 0001                          ?_OpenTimer2 0001  
                          ?_OpenPWM1 0001                            ?_OpenPWM2 0001  
                            ?_LVtrap 0001                   __size_of_openPORTA 0006  
                 __size_of_openPORTB 0006                   __size_of_openPORTD 0006  
                 __size_of_openPORTE 0006                __end_of_motor_control 14DC  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                   WriteTimer0@timer 0011                     ?_set_motor_speed 0015  
                      ??_WriteTimer0 0011                  __size_of_ConvertADC 0004  
                            ?_printf 0010                              _BORtask 1DB2  
                     ??_lvd_flag_set 000F                   __size_of_spin_left 0026  
         set_motor_speed@motor_speed 0015                            ?_high_isr 0001  
                __end_of_StatusReset 1F9E                   __size_of_start_tmr 0018  
                __size_of_ReadTimer0 0012                              _PORtask 1718  
                            _WDTtask 1E30                            ?_full_stp 0001  
                            _BusyADC 1F62                              _ReadADC 1F84  
                         ??_OpenPWM1 000F                           ??_OpenPWM2 000F  
                       ??_STKFULtask 0015                              _SeeLine 002C  
                 __size_of_turn_left 0026              __end_of_pirouette_right 1D42  
                            _OpenADC 1A14                      __size_of_LVtrap 0020  
                            __Hparam 0000                  __size_of_SetChanADC 0016  
                            __Lparam 0000                            ?_set_leds 0001  
               __size_of_reset_codes 0040                         __psmallconst 1000  
                            __pcinit 1EF2                              _isWDTTO 1ECA  
                            __ramtop 1000                  __size_of_OpenTimer0 0020  
                __size_of_OpenTimer2 001C                              __ptext0 1AD0  
                            __ptext1 1080                              __ptext2 1E84  
                            __ptext3 1F04                              __ptext4 1F56  
                            __ptext5 1F7A                              __ptext6 1852  
                            __ptext7 15A6                              __ptext8 1D8E  
                            __ptext9 1EB4                              _clr_mem 1F8E  
                            _clr_tmr 1F56                      __size_of_printf 002A  
                          _T0CONbits 000FD5                         __size_of_adc 0024  
                          _T2CONbits 000FCA               __size_of_check_sensors 00C4  
                      ??_check_state 0015                              _openLVD 1E9C  
                __end_of_WriteTimer0 1F16                   __end_of_STKFULtask 1E30  
                  __end_of_openPORTA 1FB6                    __end_of_openPORTB 1FB0  
                  __end_of_openPORTD 1FBC                    __end_of_openPORTE 1FA4  
            __size_of_pirouette_left 0026                       OpenADC@config2 000F  
                         ??_high_isr 0001                       __pintcode_body 18D0  
               end_of_initialization 1EFE                              int_func 18D0  
                         ??_full_stp 001E                           ??_set_leds 000F  
                         _move_state 0024                            _RCSTAbits 000FAB  
                            printf@c 0014                              printf@f 0010  
                  __end_of_spin_left 1D1C                            _RESETtask 1E4C  
                            postinc0 000FEE              __size_of_initialization 0090  
                  __end_of_start_tmr 1E9C                            _PORTCbits 000F82  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                     set_osc_32MHz@i 000F                          _StatusReset 1F98  
                  __end_of_turn_left 1CAA                            _TRISBbits 000F93  
                          _TRISCbits 000F94                           _spin_right 1CD0  
                       ??_ConvertADC 000F                  __end_of_check_state 1F84  
                          _TXSTAbits 000FAC                        _check_sensors 15A6  
                   ?_pirouette_right 0001                       __end_of_LVtrap 1E12  
               __end_of_lvd_flag_set 1FC4                         ??_ReadTimer0 0011  
                         ?_RESETtask 0001                          _BAUDCONbits 000FB8  
                        _WriteTimer0 1F04                           _turn_right 1C5E  
                 __end_of_ConvertADC 1FC0                         ??_SetChanADC 000F  
                     __end_of_printf 1C36                  start_initialization 1EF2  
                          _SetDCPWM1 1B98                            _SetDCPWM2 1B5E  
                    SetDCPWM1@DCycle 0013                          __end_of_adc 1DB2  
                    SetDCPWM2@DCycle 0013                         ??_OpenTimer0 000F  
                       ??_OpenTimer2 000F                   __end_of_ReadTimer0 1F28  
                          _OpenUSART 194E             __size_of_openPORTCforPWM 000E  
                     ?_check_sensors 0001                     __CFG_OSC$INTIO67 000000  
                           ??_LVtrap 0015                   __end_of_SetChanADC 1ECA  
                  __size_of_OpenPWM1 0012                    __size_of_OpenPWM2 003A  
             __size_of_set_directive 00AE                             ??_printf 0012  
                         gtrap@count 000F                   __end_of_OpenTimer0 1DF2  
                 __end_of_OpenTimer2 1E84                          __pbssCOMRAM 0020  
                           ?_BORtask 0001                          _check_state 1F7A  
                         ?_SetDCPWM1 000F                           ?_SetDCPWM2 000F  
                        ?_spin_right 0001                        PORtask@count1 0015  
                      PORtask@count2 0019                  __end_of__stringdata 107E  
                     _pirouette_left 1D42               __size_of_set_osc_32MHz 0028  
                      ?_straight_fwd 0001             set_motor_speed@the_motor 001A  
                           ?_PORtask 0001                             ?_WDTtask 0001  
                         ?_OpenUSART 000F                    __size_of_high_isr 1946  
                           ?_BusyADC 0001                             ?_ReadADC 000F  
                  OpenADC@portconfig 0010                             ?_OpenADC 000F  
                  __size_of_full_stp 0026                            __pintcode 0008  
                        ??_RESETtask 0015                       _initialization 17C2  
                  __size_of_set_leds 007E                             ?_isWDTTO 0001  
                        ?_turn_right 0001                             ?_clr_mem 0001  
                           ?_clr_tmr 0001                          __smallconst 1000  
                  WriteTimer0@timer0 000F               __end_of_pirouette_left 1D68  
                           ?_openLVD 0001             __size_of_set_motor_speed 00CA  
                     ??_straight_fwd 001E                       __size_of_isBOR 000E  
                     __size_of_isPOR 0014                       __size_of_gtrap 005E  
                     __size_of_putch 000C               __size_of_motor_control 045C  
                    ??_check_sensors 0014                        _set_directive 166A  
                          _openPORTA 1FB0                            _openPORTB 1FAA  
                          _openPORTD 1FB6                            _openPORTE 1F9E  
                      OpenADC@config 0013                __size_of_lvd_flag_set 0004  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                        ??_reset_codes 001D  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
             __end_of_initialization 1852                             _RCONbits 000FD0  
                  ??_openPORTCforPWM 000F                        _set_osc_32MHz 1C36  
                __size_of_spin_right 0026  __end_ofset_motor_speed@motor_speeds 100F  
        set_motor_speed@motor_speeds 1001                          _HLVDCONbits 000FD2  
                          _threshold 0028                            _spin_left 1CF6  
                         _ADCON0bits 000FC2                          __stringdata 100F  
                          _tmr_state 002A                            _start_tmr 1E84  
                       ?_StatusReset 0001                      ?_pirouette_left 0001  
                        ??_SetDCPWM1 0011                          ??_SetDCPWM2 0011  
                   __size_of_BORtask 0020                         _lvd_flag_set 1FC0  
                          _turn_left 1C84                       ?_set_directive 001E  
                   __size_of_PORtask 00AA                          ??_OpenUSART 0011  
                 SetDCPWM1@dutycycle 000F                           ?_openPORTA 0001  
                         ?_openPORTB 0001                           ?_openPORTD 0001  
                         ?_openPORTE 0001                     __size_of_WDTtask 001C  
                    OpenUSART@config 0014                  __size_of_turn_right 0026  
                           _OpenPWM1 1F28                             _OpenPWM2 1BD2  
                   __size_of_BusyADC 000C                     __size_of_ReadADC 000A  
                           __Hrparam 0000                        ?_change_track 0001  
                   __size_of_OpenADC 005E                      ?_initialization 0001  
                           __Lrparam 0000                   SetDCPWM2@dutycycle 000F  
                     ?_set_osc_32MHz 0001                  __end_of_reset_codes 1B5E  
                      _motor_control 1080                         ?_WriteTimer0 000F  
                         ?_spin_left 0001                       OpenPWM2@ccp2mx 0011  
                   __size_of_isWDTTO 0014                           ?_start_tmr 0001  
                   __size_of_clr_mem 000A        set_motor_speed@speed_modifier 0016  
                   __size_of_clr_tmr 000C                       OpenPWM1@period 000F  
                     OpenPWM2@period 0010                     __size_of_openLVD 0018  
                           __ptext10 1F84                             __ptext11 1FBC  
                           __ptext20 1D1C                             __ptext12 1F62  
                           __ptext21 1D42                             __ptext13 19B6  
                           __ptext30 1ECA                             __ptext22 1D68  
                           __ptext14 166A                             __ptext31 1EDE  
                           __ptext23 14DC                             __ptext15 1C5E  
                           __ptext40 1FA4                             __ptext32 1F3A  
                           __ptext24 1F8E                             __ptext16 1C84  
                           __ptext41 1F48                             __ptext33 1E30  
                           __ptext25 1F16                             __ptext17 1CAA  
                           __ptext50 1F28                             __ptext42 1FAA  
                           __ptext34 1E12                             __ptext26 1FC0  
                           __ptext18 1CD0                             __ptext51 1A14  
                           __ptext43 1FB0                             __ptext35 1E4C  
                           __ptext27 17C2                             __ptext19 1CF6  
                           __ptext52 1DD2                             __ptext44 1E9C  
                           __ptext36 1718                             __ptext28 1C36  
                           __ptext53 1DF2                             __ptext45 1B5E  
                           __ptext37 1DB2                             __ptext29 1B1E  
                           __ptext54 1C0C                             __ptext46 1B98  
                           __ptext38 1F98                             __ptext55 1F6E  
                           __ptext47 194E                             __ptext39 1F9E  
                           __ptext56 1FB6                             __ptext48 1E68  
                           __ptext57 1A72                             __ptext49 1BD2  
                         ?_turn_left 0001                             _high_isr 0008  
          set_motor_speed@duty_cycle 001C                    ??_set_motor_speed 0018  
                      __size_of_main 004E                             _full_stp 1D68  
                     ??_change_track 0020                             _lvd_flag 002D  
                           _side_mem 0026                             _set_leds 1852  
               __end_of_straight_fwd 1CD0                       ?_motor_control 0001  
           __size_of_pirouette_right 0026                            putch@data 000F  
                        _OSCTUNEbits 000F9B                           _INTCONbits 000FF2  
                       ?_check_state 0001                       OpenUSART@spbrg 000F  
                       ??_spin_right 001E                      ??_set_directive 0020  
             set_directive@directive 001E                             intlevel2 0000  
                        ??_openPORTA 000F                          ??_openPORTB 000F  
                        ??_openPORTD 000F                          ??_openPORTE 000F  
                  _openPORTCforUSART 1FA4                    SetChanADC@channel 0010  
                    ??_set_osc_32MHz 000F                          _reset_codes 1B1E  
                         _OSCCONbits 000FD3                   ?_openPORTCforUSART 0001  
                           printf@ap 0012                   __end_of_spin_right 1CF6  
                ??_openPORTCforUSART 000F                          ??_spin_left 001E  
                       ??_turn_right 001E                          ??_start_tmr 0013  
               __size_of_StatusReset 0006                          ??_turn_left 001E  
                    _openPORTCforPWM 1F48            __end_of_openPORTCforUSART 1FAA  
                 __end_of_turn_right 1C84                           _STKFULtask 1E12  
                    ??_motor_control 0020  
