

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Apr  5 15:37:55 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	text56,global,reloc=2,class=CODE,delta=1
    66                           	psect	text57,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	opt stack 0
    75  001000  00                 	db	0
    76  001001                     set_motor_speed@motor_speeds:
    77                           	opt stack 0
    78  001001  FCE0               	dw	64736
    79  001003  FD2B               	dw	64811
    80  001005  FD76               	dw	64886
    81  001007  0000               	dw	0
    82  001009  028A               	dw	650
    83  00100B  02D5               	dw	725
    84  00100D  0320               	dw	800
    85  00100F                     __end_ofset_motor_speed@motor_speeds:
    86                           	opt stack 0
    87  0000                     _ADCON0	set	4034
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADRESL	set	4035
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _CCP1CON	set	4029
    95  0000                     _CCP2CON	set	4026
    96  0000                     _CCPR1L	set	4030
    97  0000                     _CCPR2L	set	4027
    98  0000                     _HLVDCONbits	set	4050
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR2bits	set	4002
   101  0000                     _OSCCONbits	set	4051
   102  0000                     _OSCTUNEbits	set	3995
   103  0000                     _PIE1bits	set	3997
   104  0000                     _PIE2bits	set	4000
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _PORTCbits	set	3970
   108  0000                     _PORTD	set	3971
   109  0000                     _PORTDbits	set	3971
   110  0000                     _PORTEbits	set	3972
   111  0000                     _PR2	set	4043
   112  0000                     _RCONbits	set	4048
   113  0000                     _RCSTA	set	4011
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _SPBRG	set	4015
   116  0000                     _SPBRGH	set	4016
   117  0000                     _STKPTRbits	set	4092
   118  0000                     _T0CON	set	4053
   119  0000                     _T0CONbits	set	4053
   120  0000                     _T2CON	set	4042
   121  0000                     _T2CONbits	set	4042
   122  0000                     _TMR0H	set	4055
   123  0000                     _TMR0L	set	4054
   124  0000                     _TMR2	set	4044
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISCbits	set	3988
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISE	set	3990
   132  0000                     _TXREG	set	4013
   133  0000                     _TXSTA	set	4012
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _TMR0IF	set	32658
   136  0000                     _TXIF	set	31988
   137  00100F                     __stringdata:
   138                           	opt stack 0
   139  00100F                     STR_1:
   140  00100F  0A                 	db	10
   141  001010  0D                 	db	13
   142  001011  4B                 	db	75	;'K'
   143  001012  77                 	db	119	;'w'
   144  001013  61                 	db	97	;'a'
   145  001014  6E                 	db	110	;'n'
   146  001015  74                 	db	116	;'t'
   147  001016  6C                 	db	108	;'l'
   148  001017  65                 	db	101	;'e'
   149  001018  6E                 	db	110	;'n'
   150  001019  20                 	db	32
   151  00101A  41                 	db	65	;'A'
   152  00101B  50                 	db	80	;'P'
   153  00101C  53                 	db	83	;'S'
   154  00101D  43                 	db	67	;'C'
   155  00101E  31                 	db	49	;'1'
   156  00101F  32                 	db	50	;'2'
   157  001020  39                 	db	57	;'9'
   158  001021  39                 	db	57	;'9'
   159  001022  20                 	db	32
   160  001023  73                 	db	115	;'s'
   161  001024  69                 	db	105	;'i'
   162  001025  6D                 	db	109	;'m'
   163  001026  70                 	db	112	;'p'
   164  001027  6C                 	db	108	;'l'
   165  001028  65                 	db	101	;'e'
   166  001029  20                 	db	32
   167  00102A  63                 	db	99	;'c'
   168  00102B  75                 	db	117	;'u'
   169  00102C  72                 	db	114	;'r'
   170  00102D  76                 	db	118	;'v'
   171  00102E  65                 	db	101	;'e'
   172  00102F  20                 	db	32
   173  001030  66                 	db	102	;'f'
   174  001031  6F                 	db	111	;'o'
   175  001032  6C                 	db	108	;'l'
   176  001033  6C                 	db	108	;'l'
   177  001034  6F                 	db	111	;'o'
   178  001035  77                 	db	119	;'w'
   179  001036  65                 	db	101	;'e'
   180  001037  72                 	db	114	;'r'
   181  001038  20                 	db	32
   182  001039  2D                 	db	45
   183  00103A  2D                 	db	45
   184  00103B  20                 	db	32
   185  00103C  77                 	db	119	;'w'
   186  00103D  69                 	db	105	;'i'
   187  00103E  74                 	db	116	;'t'
   188  00103F  68                 	db	104	;'h'
   189  001040  20                 	db	32
   190  001041  65                 	db	101	;'e'
   191  001042  72                 	db	114	;'r'
   192  001043  72                 	db	114	;'r'
   193  001044  6F                 	db	111	;'o'
   194  001045  72                 	db	114	;'r'
   195  001046  20                 	db	32
   196  001047  63                 	db	99	;'c'
   197  001048  6F                 	db	111	;'o'
   198  001049  64                 	db	100	;'d'
   199  00104A  65                 	db	101	;'e'
   200  00104B  73                 	db	115	;'s'
   201  00104C  0A                 	db	10
   202  00104D  0D                 	db	13
   203  00104E  00                 	db	0
   204  00104F                     STR_6:
   205  00104F  20                 	db	32
   206  001050  3C                 	db	60	;'<'
   207  001051  72                 	db	114	;'r'
   208  001052  65                 	db	101	;'e'
   209  001053  73                 	db	115	;'s'
   210  001054  65                 	db	101	;'e'
   211  001055  74                 	db	116	;'t'
   212  001056  3E                 	db	62	;'>'
   213  001057  20                 	db	32
   214  001058  00                 	db	0
   215  001059                     STR_5:
   216  001059  3C                 	db	60	;'<'
   217  00105A  53                 	db	83	;'S'
   218  00105B  54                 	db	84	;'T'
   219  00105C  4B                 	db	75	;'K'
   220  00105D  46                 	db	70	;'F'
   221  00105E  55                 	db	85	;'U'
   222  00105F  4C                 	db	76	;'L'
   223  001060  3E                 	db	62	;'>'
   224  001061  00                 	db	0
   225  001062                     STR_4:
   226  001062  3C                 	db	60	;'<'
   227  001063  57                 	db	87	;'W'
   228  001064  44                 	db	68	;'D'
   229  001065  54                 	db	84	;'T'
   230  001066  20                 	db	32
   231  001067  54                 	db	84	;'T'
   232  001068  4F                 	db	79	;'O'
   233  001069  3E                 	db	62	;'>'
   234  00106A  00                 	db	0
   235  00106B                     STR_7:
   236  00106B  5C                 	db	92	;'\'
   237  00106C  3C                 	db	60	;'<'
   238  00106D  4C                 	db	76	;'L'
   239  00106E  56                 	db	86	;'V'
   240  00106F  44                 	db	68	;'D'
   241  001070  3E                 	db	62	;'>'
   242  001071  00                 	db	0
   243  001072                     STR_3:
   244  001072  3C                 	db	60	;'<'
   245  001073  42                 	db	66	;'B'
   246  001074  4F                 	db	79	;'O'
   247  001075  52                 	db	82	;'R'
   248  001076  3E                 	db	62	;'>'
   249  001077  00                 	db	0
   250  001078                     STR_2:
   251  001078  3C                 	db	60	;'<'
   252  001079  50                 	db	80	;'P'
   253  00107A  4F                 	db	79	;'O'
   254  00107B  52                 	db	82	;'R'
   255  00107C  3E                 	db	62	;'>'
   256  00107D  00                 	db	0
   257  00107E                     __end_of__stringdata:
   258                           	opt stack 0
   259                           
   260                           ; #config settings
   261  00107E  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  001EB8                     __pcinit:
   265                           	opt stack 0
   266  001EB8                     start_initialization:
   267                           	opt stack 0
   268  001EB8                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Clear objects allocated to COMRAM (14 bytes)
   272  001EB8  EE00  F020         	lfsr	0,__pbssCOMRAM
   273  001EBC  0E0E               	movlw	14
   274  001EBE                     clear_0:
   275  001EBE  6AEE               	clrf	postinc0,c
   276  001EC0  06E8               	decf	wreg,f,c
   277  001EC2  E1FD               	bnz	clear_0
   278  001EC4                     end_of_initialization:
   279                           	opt stack 0
   280  001EC4                     __end_of__initialization:
   281                           	opt stack 0
   282  001EC4  0100               	movlb	0
   283  001EC6  EF4B  F00D         	goto	_main	;jump to C main() function
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	bssCOMRAM
   288  000020                     __pbssCOMRAM:
   289                           	opt stack 0
   290  000020                     _count:
   291                           	opt stack 0
   292  000020                     	ds	2
   293  000022                     _memory:
   294                           	opt stack 0
   295  000022                     	ds	2
   296  000024                     _move_state:
   297                           	opt stack 0
   298  000024                     	ds	2
   299  000026                     _side_mem:
   300                           	opt stack 0
   301  000026                     	ds	2
   302  000028                     _threshold:
   303                           	opt stack 0
   304  000028                     	ds	2
   305  00002A                     _tmr_state:
   306                           	opt stack 0
   307  00002A                     	ds	2
   308  00002C                     _SeeLine:
   309                           	opt stack 0
   310  00002C                     	ds	1
   311  00002D                     _lvd_flag:
   312                           	opt stack 0
   313  00002D                     	ds	1
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           
   317                           	psect	cstackCOMRAM
   318  000001                     __pcstackCOMRAM:
   319                           	opt stack 0
   320  000001                     ??_high_isr:
   321  000001                     
   322                           ; 2 bytes @ 0x0
   323  000001                     	ds	14
   324  00000F                     ??_set_leds:
   325  00000F                     ??_OpenPWM2:
   326  00000F                     ??_SetChanADC:
   327  00000F                     ?_ReadADC:
   328                           	opt stack 0
   329  00000F                     ?_ReadTimer0:
   330                           	opt stack 0
   331  00000F                     putch@data:
   332                           	opt stack 0
   333  00000F                     OpenADC@config2:
   334                           	opt stack 0
   335  00000F                     OpenPWM1@period:
   336                           	opt stack 0
   337  00000F                     OpenTimer0@config:
   338                           	opt stack 0
   339  00000F                     OpenTimer2@config:
   340                           	opt stack 0
   341  00000F                     set_osc_32MHz@i:
   342                           	opt stack 0
   343  00000F                     SetDCPWM1@dutycycle:
   344                           	opt stack 0
   345  00000F                     SetDCPWM2@dutycycle:
   346                           	opt stack 0
   347  00000F                     WriteTimer0@timer0:
   348                           	opt stack 0
   349  00000F                     OpenUSART@spbrg:
   350                           	opt stack 0
   351  00000F                     gtrap@count:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0xE
   355  00000F                     	ds	1
   356  000010                     ?_printf:
   357                           	opt stack 0
   358  000010                     OpenADC@portconfig:
   359                           	opt stack 0
   360  000010                     SetChanADC@channel:
   361                           	opt stack 0
   362  000010                     OpenPWM2@period:
   363                           	opt stack 0
   364  000010                     printf@f:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xF
   368  000010                     	ds	1
   369  000011                     ??_OpenUSART:
   370  000011                     ??_OpenADC:
   371  000011                     ??_SetDCPWM1:
   372  000011                     ??_SetDCPWM2:
   373  000011                     ?_adc:
   374                           	opt stack 0
   375  000011                     OpenPWM2@ccp2mx:
   376                           	opt stack 0
   377  000011                     ReadTimer0@timer:
   378                           	opt stack 0
   379  000011                     WriteTimer0@timer:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  000011                     	ds	1
   384  000012                     printf@ap:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x11
   388  000012                     	ds	1
   389  000013                     adc@channel:
   390                           	opt stack 0
   391  000013                     OpenADC@config:
   392                           	opt stack 0
   393  000013                     SetDCPWM1@DCycle:
   394                           	opt stack 0
   395  000013                     SetDCPWM2@DCycle:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x12
   399  000013                     	ds	1
   400  000014                     ??_check_sensors:
   401  000014                     printf@c:
   402                           	opt stack 0
   403  000014                     OpenUSART@config:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x13
   407  000014                     	ds	1
   408  000015                     set_motor_speed@motor_speed:
   409                           	opt stack 0
   410  000015                     PORtask@count1:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x14
   414  000015                     	ds	1
   415  000016                     set_motor_speed@speed_modifier:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x15
   419  000016                     	ds	2
   420  000018                     ??_set_motor_speed:
   421                           
   422                           ; 0 bytes @ 0x17
   423  000018                     	ds	1
   424  000019                     PORtask@count2:
   425                           	opt stack 0
   426                           
   427                           ; 4 bytes @ 0x18
   428  000019                     	ds	1
   429  00001A                     set_motor_speed@the_motor:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x19
   433  00001A                     	ds	1
   434  00001B                     set_motor_speed@dir_modifier:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x1A
   438  00001B                     	ds	1
   439  00001C                     set_motor_speed@duty_cycle:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1B
   443  00001C                     	ds	1
   444  00001D                     
   445                           ; 0 bytes @ 0x1C
   446  00001D                     	ds	1
   447  00001E                     set_directive@directive:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1D
   451  00001E                     	ds	2
   452  000020                     postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           
   455                           ; 0 bytes @ 0x1F
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 16 in file "../main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels required when called:    7
   481 ;; This function calls:
   482 ;;		_LVtrap
   483 ;;		_OpenTimer0
   484 ;;		_check_sensors
   485 ;;		_initialization
   486 ;;		_lvd_flag_set
   487 ;;		_motor_control
   488 ;;		_printf
   489 ;;		_set_leds
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text0
   496  001A96                     __ptext0:
   497                           	opt stack 0
   498  001A96                     _main:
   499                           	opt stack 24
   500                           
   501                           ;main.c: 19: initialization();
   502                           
   503                           ;incstack = 0
   504  001A96  ECC4  F00B         	call	_initialization	;wreg free
   505                           
   506                           ;main.c: 24: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   507  001A9A  0E10               	movlw	high STR_1
   508  001A9C  6E11               	movwf	printf@f+1,c
   509  001A9E  0E0F               	movlw	low STR_1
   510  001AA0  6E10               	movwf	printf@f,c
   511  001AA2  ECE9  F00D         	call	_printf	;wreg free
   512  001AA6  0004               	clrwdt		;# 
   513                           
   514                           ;main.c: 27: threshold = 240u;
   515  001AA8  0E00               	movlw	0
   516  001AAA  6E29               	movwf	_threshold+1,c
   517  001AAC  0EF0               	movlw	240
   518  001AAE  6E28               	movwf	_threshold,c
   519                           
   520                           ;main.c: 30: OpenTimer0(0b01111111 & 0b10000111 & 0b11111110);
   521  001AB0  0E06               	movlw	6
   522  001AB2  ECCC  F00E         	call	_OpenTimer0
   523                           
   524                           ;main.c: 32: side_mem=2;
   525  001AB6  0E00               	movlw	0
   526  001AB8  6E27               	movwf	_side_mem+1,c
   527  001ABA  0E02               	movlw	2
   528  001ABC  6E26               	movwf	_side_mem,c
   529                           
   530                           ;main.c: 33: count = 0;
   531  001ABE  0E00               	movlw	0
   532  001AC0  6E21               	movwf	_count+1,c
   533  001AC2  0E00               	movlw	0
   534  001AC4  6E20               	movwf	_count,c
   535  001AC6                     l2127:
   536                           
   537                           ;main.c: 35: {
   538                           ;main.c: 36: check_sensors();
   539  001AC6  ECB6  F00A         	call	_check_sensors	;wreg free
   540                           
   541                           ;main.c: 37: set_leds();
   542  001ACA  EC0C  F00C         	call	_set_leds	;wreg free
   543                           
   544                           ;main.c: 42: motor_control();
   545  001ACE  EC40  F008         	call	_motor_control	;wreg free
   546  001AD2  0004               	clrwdt		;# 
   547                           
   548                           ;main.c: 44: if(lvd_flag_set()) LVtrap();
   549  001AD4  ECC3  F00F         	call	_lvd_flag_set	;wreg free
   550  001AD8  0900               	iorlw	0
   551  001ADA  B4D8               	btfsc	status,2,c
   552  001ADC  D7F4               	goto	l2127
   553  001ADE  ECDC  F00E         	call	_LVtrap	;wreg free
   554  001AE2  D7F1               	goto	l2127
   555  001AE4                     __end_of_main:
   556                           	opt stack 0
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _motor_control *****************
   562 ;; Defined at:
   563 ;;		line 140 in file "../motor_control.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;		None               void
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    6
   584 ;; This function calls:
   585 ;;		_ReadTimer0
   586 ;;		_change_track
   587 ;;		_check_state
   588 ;;		_clr_tmr
   589 ;;		_full_stp
   590 ;;		_set_directive
   591 ;;		_start_tmr
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  001080                     __ptext1:
   599                           	opt stack 0
   600  001080                     _motor_control:
   601                           	opt stack 24
   602                           
   603                           ;motor_control.c: 144: if(SeeLine.B != 0b00000 && SeeLine.B != 0b11111)if(tmr_state != 0
      +                          )clr_tmr();
   604                           
   605                           ;incstack = 0
   606  001080  502C               	movf	_SeeLine,w,c
   607  001082  0B1F               	andlw	31
   608  001084  0900               	iorlw	0
   609  001086  B4D8               	btfsc	status,2,c
   610  001088  D1C7               	goto	l2091
   611  00108A  502C               	movf	_SeeLine,w,c
   612  00108C  0B1F               	andlw	31
   613  00108E  0A1F               	xorlw	31
   614  001090  B4D8               	btfsc	status,2,c
   615  001092  D1C2               	goto	l2091
   616  001094  502B               	movf	_tmr_state+1,w,c
   617  001096  102A               	iorwf	_tmr_state,w,c
   618  001098  B4D8               	btfsc	status,2,c
   619  00109A  D1BE               	goto	l2091
   620  00109C  EC8E  F00F         	call	_clr_tmr	;wreg free
   621  0010A0  D1BB               	goto	l2091
   622  0010A2                     l1893:
   623                           
   624                           ;motor_control.c: 149: if(move_state!=4)set_directive(4);
   625  0010A2  5024               	movf	_move_state,w,c
   626  0010A4  0A04               	xorlw	4
   627  0010A6  1025               	iorwf	_move_state+1,w,c
   628  0010A8  B4D8               	btfsc	status,2,c
   629  0010AA  D1EE               	goto	l2093
   630  0010AC  0E00               	movlw	0
   631  0010AE  6E1F               	movwf	set_directive@directive+1,c
   632  0010B0  0E04               	movlw	4
   633  0010B2  6E1E               	movwf	set_directive@directive,c
   634  0010B4  EC18  F00B         	call	_set_directive	;wreg free
   635  0010B8  D1E7               	goto	l2093
   636  0010BA                     l1897:
   637                           
   638                           ;motor_control.c: 154: if(memory==0)
   639  0010BA  5023               	movf	_memory+1,w,c
   640  0010BC  1022               	iorwf	_memory,w,c
   641  0010BE  A4D8               	btfss	status,2,c
   642  0010C0  D1E3               	goto	l2093
   643                           
   644                           ;motor_control.c: 155: if(move_state!=4)
   645  0010C2  5024               	movf	_move_state,w,c
   646  0010C4  0A04               	xorlw	4
   647  0010C6  1025               	iorwf	_move_state+1,w,c
   648  0010C8  B4D8               	btfsc	status,2,c
   649  0010CA  D1DE               	goto	l2093
   650                           
   651                           ;motor_control.c: 156: set_directive(4);
   652  0010CC  0E00               	movlw	0
   653  0010CE  6E1F               	movwf	set_directive@directive+1,c
   654  0010D0  0E04               	movlw	4
   655  0010D2  6E1E               	movwf	set_directive@directive,c
   656  0010D4  EC18  F00B         	call	_set_directive	;wreg free
   657  0010D8  D1D7               	goto	l2093
   658  0010DA                     l1905:
   659                           
   660                           ;motor_control.c: 164: if(move_state!=4)set_directive(4);
   661  0010DA  5024               	movf	_move_state,w,c
   662  0010DC  0A04               	xorlw	4
   663  0010DE  1025               	iorwf	_move_state+1,w,c
   664  0010E0  B4D8               	btfsc	status,2,c
   665  0010E2  D1D2               	goto	l2093
   666  0010E4  0E00               	movlw	0
   667  0010E6  6E1F               	movwf	set_directive@directive+1,c
   668  0010E8  0E04               	movlw	4
   669  0010EA  6E1E               	movwf	set_directive@directive,c
   670  0010EC  EC18  F00B         	call	_set_directive	;wreg free
   671  0010F0  D1CB               	goto	l2093
   672  0010F2                     l1909:
   673                           
   674                           ;motor_control.c: 169: if(move_state!=4)set_directive(4);
   675  0010F2  5024               	movf	_move_state,w,c
   676  0010F4  0A04               	xorlw	4
   677  0010F6  1025               	iorwf	_move_state+1,w,c
   678  0010F8  B4D8               	btfsc	status,2,c
   679  0010FA  D1C6               	goto	l2093
   680  0010FC  0E00               	movlw	0
   681  0010FE  6E1F               	movwf	set_directive@directive+1,c
   682  001100  0E04               	movlw	4
   683  001102  6E1E               	movwf	set_directive@directive,c
   684  001104  EC18  F00B         	call	_set_directive	;wreg free
   685  001108  D1BF               	goto	l2093
   686  00110A                     l1913:
   687                           
   688                           ;motor_control.c: 174: if(memory==0)
   689  00110A  5023               	movf	_memory+1,w,c
   690  00110C  1022               	iorwf	_memory,w,c
   691  00110E  A4D8               	btfss	status,2,c
   692  001110  D1BB               	goto	l2093
   693                           
   694                           ;motor_control.c: 175: if(move_state!=4)
   695  001112  5024               	movf	_move_state,w,c
   696  001114  0A04               	xorlw	4
   697  001116  1025               	iorwf	_move_state+1,w,c
   698  001118  B4D8               	btfsc	status,2,c
   699  00111A  D007               	goto	l1919
   700                           
   701                           ;motor_control.c: 176: set_directive(4);
   702  00111C  0E00               	movlw	0
   703  00111E  6E1F               	movwf	set_directive@directive+1,c
   704  001120  0E04               	movlw	4
   705  001122  6E1E               	movwf	set_directive@directive,c
   706  001124  EC18  F00B         	call	_set_directive	;wreg free
   707  001128  D1AF               	goto	l2093
   708  00112A                     l1919:
   709                           
   710                           ;motor_control.c: 177: else if(memory==1)
   711  00112A  0422               	decf	_memory,w,c
   712  00112C  1023               	iorwf	_memory+1,w,c
   713  00112E  A4D8               	btfss	status,2,c
   714  001130  D1AB               	goto	l2093
   715                           
   716                           ;motor_control.c: 178: {
   717                           ;motor_control.c: 179: change_track();
   718  001132  ECBE  F00C         	call	_change_track	;wreg free
   719  001136  D1A8               	goto	l2093
   720  001138                     l1923:
   721                           
   722                           ;motor_control.c: 184: if(memory==0)
   723  001138  5023               	movf	_memory+1,w,c
   724  00113A  1022               	iorwf	_memory,w,c
   725  00113C  A4D8               	btfss	status,2,c
   726  00113E  D011               	goto	l1933
   727                           
   728                           ;motor_control.c: 185: if(move_state!=4){
   729  001140  5024               	movf	_move_state,w,c
   730  001142  0A04               	xorlw	4
   731  001144  1025               	iorwf	_move_state+1,w,c
   732  001146  B4D8               	btfsc	status,2,c
   733  001148  D007               	goto	l1929
   734                           
   735                           ;motor_control.c: 186: set_directive(4);
   736  00114A  0E00               	movlw	0
   737  00114C  6E1F               	movwf	set_directive@directive+1,c
   738  00114E  0E04               	movlw	4
   739  001150  6E1E               	movwf	set_directive@directive,c
   740  001152  EC18  F00B         	call	_set_directive	;wreg free
   741                           
   742                           ;motor_control.c: 188: }
   743  001156  D005               	goto	l1933
   744  001158                     l1929:
   745                           
   746                           ;motor_control.c: 190: else if(memory==1)
   747  001158  0422               	decf	_memory,w,c
   748  00115A  1023               	iorwf	_memory+1,w,c
   749  00115C  B4D8               	btfsc	status,2,c
   750                           
   751                           ;motor_control.c: 191: {
   752                           ;motor_control.c: 192: change_track();
   753  00115E  ECBE  F00C         	call	_change_track	;wreg free
   754  001162                     l1933:
   755                           
   756                           ;motor_control.c: 193: }
   757                           ;motor_control.c: 194: count = 0;
   758  001162  0E00               	movlw	0
   759  001164  6E21               	movwf	_count+1,c
   760  001166  0E00               	movlw	0
   761  001168  6E20               	movwf	_count,c
   762                           
   763                           ;motor_control.c: 195: side_mem = 1;
   764  00116A  0E00               	movlw	0
   765  00116C  6E27               	movwf	_side_mem+1,c
   766  00116E  0E01               	movlw	1
   767  001170  D04A               	goto	L3
   768  001172                     l1937:
   769                           
   770                           ;motor_control.c: 199: if(memory==0)
   771  001172  5023               	movf	_memory+1,w,c
   772  001174  1022               	iorwf	_memory,w,c
   773  001176  A4D8               	btfss	status,2,c
   774  001178  D011               	goto	l1947
   775                           
   776                           ;motor_control.c: 200: if(move_state!=4){
   777  00117A  5024               	movf	_move_state,w,c
   778  00117C  0A04               	xorlw	4
   779  00117E  1025               	iorwf	_move_state+1,w,c
   780  001180  B4D8               	btfsc	status,2,c
   781  001182  D007               	goto	l1943
   782                           
   783                           ;motor_control.c: 201: set_directive(4);
   784  001184  0E00               	movlw	0
   785  001186  6E1F               	movwf	set_directive@directive+1,c
   786  001188  0E04               	movlw	4
   787  00118A  6E1E               	movwf	set_directive@directive,c
   788  00118C  EC18  F00B         	call	_set_directive	;wreg free
   789                           
   790                           ;motor_control.c: 202: }
   791  001190  D005               	goto	l1947
   792  001192                     l1943:
   793                           
   794                           ;motor_control.c: 204: else if(memory==1)
   795  001192  0422               	decf	_memory,w,c
   796  001194  1023               	iorwf	_memory+1,w,c
   797  001196  B4D8               	btfsc	status,2,c
   798                           
   799                           ;motor_control.c: 205: {
   800                           ;motor_control.c: 206: change_track();
   801  001198  ECBE  F00C         	call	_change_track	;wreg free
   802  00119C                     l1947:
   803                           
   804                           ;motor_control.c: 207: }
   805                           ;motor_control.c: 209: count = 0;
   806  00119C  0E00               	movlw	0
   807  00119E  6E21               	movwf	_count+1,c
   808  0011A0  0E00               	movlw	0
   809  0011A2  6E20               	movwf	_count,c
   810                           
   811                           ;motor_control.c: 210: side_mem = 3;
   812  0011A4  0E00               	movlw	0
   813  0011A6  6E27               	movwf	_side_mem+1,c
   814  0011A8  0E03               	movlw	3
   815  0011AA  D02D               	goto	L3
   816  0011AC                     l1951:
   817                           
   818                           ;motor_control.c: 213: if(memory==0)
   819  0011AC  5023               	movf	_memory+1,w,c
   820  0011AE  1022               	iorwf	_memory,w,c
   821  0011B0  A4D8               	btfss	status,2,c
   822  0011B2  D7D7               	goto	l1933
   823                           
   824                           ;motor_control.c: 214: if(move_state!=4){
   825  0011B4  5024               	movf	_move_state,w,c
   826  0011B6  0A04               	xorlw	4
   827  0011B8  1025               	iorwf	_move_state+1,w,c
   828  0011BA  B4D8               	btfsc	status,2,c
   829  0011BC  D007               	goto	l1957
   830                           
   831                           ;motor_control.c: 215: set_directive(4);
   832  0011BE  0E00               	movlw	0
   833  0011C0  6E1F               	movwf	set_directive@directive+1,c
   834  0011C2  0E04               	movlw	4
   835  0011C4  6E1E               	movwf	set_directive@directive,c
   836  0011C6  EC18  F00B         	call	_set_directive	;wreg free
   837                           
   838                           ;motor_control.c: 217: }
   839  0011CA  D7CB               	goto	l1933
   840  0011CC                     l1957:
   841                           
   842                           ;motor_control.c: 219: else if(memory==1)
   843  0011CC  0422               	decf	_memory,w,c
   844  0011CE  1023               	iorwf	_memory+1,w,c
   845  0011D0  B4D8               	btfsc	status,2,c
   846                           
   847                           ;motor_control.c: 220: {
   848                           ;motor_control.c: 221: change_track();
   849  0011D2  ECBE  F00C         	call	_change_track	;wreg free
   850  0011D6  D7C5               	goto	l1933
   851  0011D8                     l1965:
   852                           
   853                           ;motor_control.c: 228: if(memory==0)
   854  0011D8  5023               	movf	_memory+1,w,c
   855  0011DA  1022               	iorwf	_memory,w,c
   856  0011DC  A4D8               	btfss	status,2,c
   857  0011DE  D7DE               	goto	l1947
   858                           
   859                           ;motor_control.c: 229: if(move_state!=4){
   860  0011E0  5024               	movf	_move_state,w,c
   861  0011E2  0A04               	xorlw	4
   862  0011E4  1025               	iorwf	_move_state+1,w,c
   863  0011E6  B4D8               	btfsc	status,2,c
   864  0011E8  D007               	goto	l1971
   865                           
   866                           ;motor_control.c: 230: set_directive(4);
   867  0011EA  0E00               	movlw	0
   868  0011EC  6E1F               	movwf	set_directive@directive+1,c
   869  0011EE  0E04               	movlw	4
   870  0011F0  6E1E               	movwf	set_directive@directive,c
   871  0011F2  EC18  F00B         	call	_set_directive	;wreg free
   872                           
   873                           ;motor_control.c: 231: }
   874  0011F6  D7D2               	goto	l1947
   875  0011F8                     l1971:
   876                           
   877                           ;motor_control.c: 233: else if(memory==1)
   878  0011F8  0422               	decf	_memory,w,c
   879  0011FA  1023               	iorwf	_memory+1,w,c
   880  0011FC  A4D8               	btfss	status,2,c
   881  0011FE  D7CE               	goto	l1947
   882                           
   883                           ;motor_control.c: 234: {
   884                           ;motor_control.c: 235: change_track();
   885  001200  ECBE  F00C         	call	_change_track	;wreg free
   886  001204  D7CB               	goto	l1947
   887  001206                     L3:
   888  001206  6E26               	movwf	_side_mem,c
   889                           
   890                           ;motor_control.c: 239: break;
   891  001208  D13F               	goto	l2093
   892  00120A                     l1979:
   893                           
   894                           ;motor_control.c: 241: if(memory==0)
   895  00120A  5023               	movf	_memory+1,w,c
   896  00120C  1022               	iorwf	_memory,w,c
   897  00120E  A4D8               	btfss	status,2,c
   898  001210  D7C5               	goto	l1947
   899                           
   900                           ;motor_control.c: 242: if(move_state!=4){
   901  001212  5024               	movf	_move_state,w,c
   902  001214  0A04               	xorlw	4
   903  001216  1025               	iorwf	_move_state+1,w,c
   904  001218  B4D8               	btfsc	status,2,c
   905  00121A  D007               	goto	l1985
   906                           
   907                           ;motor_control.c: 243: set_directive(4);
   908  00121C  0E00               	movlw	0
   909  00121E  6E1F               	movwf	set_directive@directive+1,c
   910  001220  0E04               	movlw	4
   911  001222  6E1E               	movwf	set_directive@directive,c
   912  001224  EC18  F00B         	call	_set_directive	;wreg free
   913                           
   914                           ;motor_control.c: 244: }
   915  001228  D7B9               	goto	l1947
   916  00122A                     l1985:
   917                           
   918                           ;motor_control.c: 245: else if(memory==1)
   919  00122A  0422               	decf	_memory,w,c
   920  00122C  1023               	iorwf	_memory+1,w,c
   921  00122E  B4D8               	btfsc	status,2,c
   922                           
   923                           ;motor_control.c: 246: {
   924                           ;motor_control.c: 247: change_track();
   925  001230  ECBE  F00C         	call	_change_track	;wreg free
   926  001234  D7B3               	goto	l1947
   927  001236                     l1993:
   928                           
   929                           ;motor_control.c: 254: if(memory==0)
   930  001236  5023               	movf	_memory+1,w,c
   931  001238  1022               	iorwf	_memory,w,c
   932  00123A  A4D8               	btfss	status,2,c
   933  00123C  D011               	goto	l2003
   934                           
   935                           ;motor_control.c: 255: if(move_state!=4){
   936  00123E  5024               	movf	_move_state,w,c
   937  001240  0A04               	xorlw	4
   938  001242  1025               	iorwf	_move_state+1,w,c
   939  001244  B4D8               	btfsc	status,2,c
   940  001246  D007               	goto	l1999
   941                           
   942                           ;motor_control.c: 256: set_directive(4);
   943  001248  0E00               	movlw	0
   944  00124A  6E1F               	movwf	set_directive@directive+1,c
   945  00124C  0E04               	movlw	4
   946  00124E  6E1E               	movwf	set_directive@directive,c
   947  001250  EC18  F00B         	call	_set_directive	;wreg free
   948                           
   949                           ;motor_control.c: 257: }
   950  001254  D005               	goto	l2003
   951  001256                     l1999:
   952                           
   953                           ;motor_control.c: 258: else if(memory==1)
   954  001256  0422               	decf	_memory,w,c
   955  001258  1023               	iorwf	_memory+1,w,c
   956  00125A  B4D8               	btfsc	status,2,c
   957                           
   958                           ;motor_control.c: 259: {
   959                           ;motor_control.c: 260: change_track();
   960  00125C  ECBE  F00C         	call	_change_track	;wreg free
   961  001260                     l2003:
   962                           
   963                           ;motor_control.c: 261: }
   964                           ;motor_control.c: 262: side_mem = 1;
   965  001260  0E00               	movlw	0
   966  001262  6E27               	movwf	_side_mem+1,c
   967  001264  0E01               	movlw	1
   968  001266  6E26               	movwf	_side_mem,c
   969                           
   970                           ;motor_control.c: 263: count = 0;
   971  001268  0E00               	movlw	0
   972  00126A  6E21               	movwf	_count+1,c
   973  00126C  0E00               	movlw	0
   974  00126E  6E20               	movwf	_count,c
   975                           
   976                           ;motor_control.c: 264: break;
   977  001270  D10B               	goto	l2093
   978  001272                     l2007:
   979                           
   980                           ;motor_control.c: 268: if(move_state!=5)set_directive(5);
   981  001272  5024               	movf	_move_state,w,c
   982  001274  0A05               	xorlw	5
   983  001276  1025               	iorwf	_move_state+1,w,c
   984  001278  B4D8               	btfsc	status,2,c
   985  00127A  D106               	goto	l2093
   986  00127C  0E00               	movlw	0
   987  00127E  6E1F               	movwf	set_directive@directive+1,c
   988  001280  0E05               	movlw	5
   989  001282  6E1E               	movwf	set_directive@directive,c
   990  001284  EC18  F00B         	call	_set_directive	;wreg free
   991  001288  D0FF               	goto	l2093
   992  00128A                     l2011:
   993                           
   994                           ;motor_control.c: 272: if(move_state!=2)set_directive(2);
   995  00128A  5024               	movf	_move_state,w,c
   996  00128C  0A02               	xorlw	2
   997  00128E  1025               	iorwf	_move_state+1,w,c
   998  001290  B4D8               	btfsc	status,2,c
   999  001292  D0FA               	goto	l2093
  1000  001294  0E00               	movlw	0
  1001  001296  6E1F               	movwf	set_directive@directive+1,c
  1002  001298  0E02               	movlw	2
  1003  00129A  6E1E               	movwf	set_directive@directive,c
  1004  00129C  EC18  F00B         	call	_set_directive	;wreg free
  1005  0012A0  D0F3               	goto	l2093
  1006  0012A2                     l2015:
  1007                           
  1008                           ;motor_control.c: 276: if(move_state!=6)set_directive(6);
  1009  0012A2  5024               	movf	_move_state,w,c
  1010  0012A4  0A06               	xorlw	6
  1011  0012A6  1025               	iorwf	_move_state+1,w,c
  1012  0012A8  B4D8               	btfsc	status,2,c
  1013  0012AA  D0EE               	goto	l2093
  1014  0012AC  0E00               	movlw	0
  1015  0012AE  6E1F               	movwf	set_directive@directive+1,c
  1016  0012B0  0E06               	movlw	6
  1017  0012B2  6E1E               	movwf	set_directive@directive,c
  1018  0012B4  EC18  F00B         	call	_set_directive	;wreg free
  1019  0012B8  D0E7               	goto	l2093
  1020  0012BA                     l2019:
  1021                           
  1022                           ;motor_control.c: 280: if(move_state!=1)set_directive(1);
  1023  0012BA  0424               	decf	_move_state,w,c
  1024  0012BC  1025               	iorwf	_move_state+1,w,c
  1025  0012BE  B4D8               	btfsc	status,2,c
  1026  0012C0  D0E3               	goto	l2093
  1027  0012C2  0E00               	movlw	0
  1028  0012C4  6E1F               	movwf	set_directive@directive+1,c
  1029  0012C6  0E01               	movlw	1
  1030  0012C8  6E1E               	movwf	set_directive@directive,c
  1031  0012CA  EC18  F00B         	call	_set_directive	;wreg free
  1032  0012CE  D0DC               	goto	l2093
  1033  0012D0                     l2023:
  1034                           
  1035                           ;motor_control.c: 287: if(tmr_state!=1){
  1036  0012D0  042A               	decf	_tmr_state,w,c
  1037  0012D2  102B               	iorwf	_tmr_state+1,w,c
  1038  0012D4  B4D8               	btfsc	status,2,c
  1039  0012D6  D00D               	goto	l2031
  1040                           
  1041                           ;motor_control.c: 288: if(move_state!=4)set_directive(4);
  1042  0012D8  5024               	movf	_move_state,w,c
  1043  0012DA  0A04               	xorlw	4
  1044  0012DC  1025               	iorwf	_move_state+1,w,c
  1045  0012DE  B4D8               	btfsc	status,2,c
  1046  0012E0  D006               	goto	l2029
  1047  0012E2  0E00               	movlw	0
  1048  0012E4  6E1F               	movwf	set_directive@directive+1,c
  1049  0012E6  0E04               	movlw	4
  1050  0012E8  6E1E               	movwf	set_directive@directive,c
  1051  0012EA  EC18  F00B         	call	_set_directive	;wreg free
  1052  0012EE                     l2029:
  1053                           
  1054                           ;motor_control.c: 289: start_tmr();
  1055  0012EE  EC25  F00F         	call	_start_tmr	;wreg free
  1056  0012F2                     l2031:
  1057                           
  1058                           ;motor_control.c: 290: }
  1059                           ;motor_control.c: 292: if(count<=500){
  1060  0012F2  5021               	movf	_count+1,w,c
  1061  0012F4  0A80               	xorlw	128
  1062  0012F6  6EF3               	movwf	prodl,c
  1063  0012F8  0E81               	movlw	129
  1064  0012FA  5CF3               	subwf	prodl,w,c
  1065  0012FC  0EF5               	movlw	245
  1066  0012FE  B4D8               	btfsc	status,2,c
  1067  001300  5C20               	subwf	_count,w,c
  1068  001302  B0D8               	btfsc	status,0,c
  1069  001304  D019               	goto	l2043
  1070                           
  1071                           ;motor_control.c: 293: if(side_mem==1)set_directive(0);
  1072  001306  0426               	decf	_side_mem,w,c
  1073  001308  1027               	iorwf	_side_mem+1,w,c
  1074  00130A  A4D8               	btfss	status,2,c
  1075  00130C  D006               	goto	l2037
  1076  00130E  0E00               	movlw	0
  1077  001310  6E1F               	movwf	set_directive@directive+1,c
  1078  001312  0E00               	movlw	0
  1079  001314  6E1E               	movwf	set_directive@directive,c
  1080  001316  EC18  F00B         	call	_set_directive	;wreg free
  1081  00131A                     l2037:
  1082                           
  1083                           ;motor_control.c: 294: if(side_mem==3)set_directive(7);
  1084  00131A  5026               	movf	_side_mem,w,c
  1085  00131C  0A03               	xorlw	3
  1086  00131E  1027               	iorwf	_side_mem+1,w,c
  1087  001320  A4D8               	btfss	status,2,c
  1088  001322  D006               	goto	l2041
  1089  001324  0E00               	movlw	0
  1090  001326  6E1F               	movwf	set_directive@directive+1,c
  1091  001328  0E07               	movlw	7
  1092  00132A  6E1E               	movwf	set_directive@directive,c
  1093  00132C  EC18  F00B         	call	_set_directive	;wreg free
  1094  001330                     l2041:
  1095                           
  1096                           ;motor_control.c: 295: side_mem=2;
  1097  001330  0E00               	movlw	0
  1098  001332  6E27               	movwf	_side_mem+1,c
  1099  001334  0E02               	movlw	2
  1100  001336  6E26               	movwf	_side_mem,c
  1101  001338                     l2043:
  1102                           
  1103                           ;motor_control.c: 297: }
  1104                           ;motor_control.c: 312: if(tmr_state==1 && ReadTimer0()>35000){
  1105  001338  042A               	decf	_tmr_state,w,c
  1106  00133A  102B               	iorwf	_tmr_state+1,w,c
  1107  00133C  A4D8               	btfss	status,2,c
  1108  00133E  D0A4               	goto	l2093
  1109  001340  EC6E  F00F         	call	_ReadTimer0	;wreg free
  1110  001344  0EB9               	movlw	185
  1111  001346  5C0F               	subwf	?_ReadTimer0,w,c
  1112  001348  0E88               	movlw	136
  1113  00134A  5810               	subwfb	?_ReadTimer0+1,w,c
  1114  00134C  A0D8               	btfss	status,0,c
  1115  00134E  D09C               	goto	l2093
  1116                           
  1117                           ;motor_control.c: 314: set_directive(0);
  1118  001350  0E00               	movlw	0
  1119  001352  6E1F               	movwf	set_directive@directive+1,c
  1120  001354  0E00               	movlw	0
  1121  001356  6E1E               	movwf	set_directive@directive,c
  1122  001358  EC18  F00B         	call	_set_directive	;wreg free
  1123  00135C                     l404:
  1124  00135C  A4F2               	btfss	intcon,2,c	;volatile
  1125  00135E  D7FE               	goto	l404
  1126  001360  EC6E  F00F         	call	_ReadTimer0	;wreg free
  1127  001364  0E20               	movlw	32
  1128  001366  5C0F               	subwf	?_ReadTimer0,w,c
  1129  001368  0E4E               	movlw	78
  1130  00136A  5810               	subwfb	?_ReadTimer0+1,w,c
  1131  00136C  A0D8               	btfss	status,0,c
  1132  00136E  D7F6               	goto	l404
  1133                           
  1134                           ;motor_control.c: 316: clr_tmr();
  1135  001370  EC8E  F00F         	call	_clr_tmr	;wreg free
  1136  001374  D089               	goto	l2093
  1137  001376                     l2053:
  1138                           
  1139                           ;motor_control.c: 322: if(tmr_state==1 && side_mem!=2 && ReadTimer0() < 20000){
  1140  001376  042A               	decf	_tmr_state,w,c
  1141  001378  102B               	iorwf	_tmr_state+1,w,c
  1142  00137A  A4D8               	btfss	status,2,c
  1143  00137C  D026               	goto	l2069
  1144  00137E  5026               	movf	_side_mem,w,c
  1145  001380  0A02               	xorlw	2
  1146  001382  1027               	iorwf	_side_mem+1,w,c
  1147  001384  B4D8               	btfsc	status,2,c
  1148  001386  D021               	goto	l2069
  1149  001388  EC6E  F00F         	call	_ReadTimer0	;wreg free
  1150  00138C  0E20               	movlw	32
  1151  00138E  5C0F               	subwf	?_ReadTimer0,w,c
  1152  001390  0E4E               	movlw	78
  1153  001392  5810               	subwfb	?_ReadTimer0+1,w,c
  1154  001394  B0D8               	btfsc	status,0,c
  1155  001396  D019               	goto	l2069
  1156                           
  1157                           ;motor_control.c: 323: if(side_mem==1)set_directive(0);
  1158  001398  0426               	decf	_side_mem,w,c
  1159  00139A  1027               	iorwf	_side_mem+1,w,c
  1160  00139C  A4D8               	btfss	status,2,c
  1161  00139E  D006               	goto	l2063
  1162  0013A0  0E00               	movlw	0
  1163  0013A2  6E1F               	movwf	set_directive@directive+1,c
  1164  0013A4  0E00               	movlw	0
  1165  0013A6  6E1E               	movwf	set_directive@directive,c
  1166  0013A8  EC18  F00B         	call	_set_directive	;wreg free
  1167  0013AC                     l2063:
  1168                           
  1169                           ;motor_control.c: 324: if(side_mem==3)set_directive(7);
  1170  0013AC  5026               	movf	_side_mem,w,c
  1171  0013AE  0A03               	xorlw	3
  1172  0013B0  1027               	iorwf	_side_mem+1,w,c
  1173  0013B2  A4D8               	btfss	status,2,c
  1174  0013B4  D006               	goto	l2067
  1175  0013B6  0E00               	movlw	0
  1176  0013B8  6E1F               	movwf	set_directive@directive+1,c
  1177  0013BA  0E07               	movlw	7
  1178  0013BC  6E1E               	movwf	set_directive@directive,c
  1179  0013BE  EC18  F00B         	call	_set_directive	;wreg free
  1180  0013C2                     l2067:
  1181                           
  1182                           ;motor_control.c: 325: side_mem=2;
  1183  0013C2  0E00               	movlw	0
  1184  0013C4  6E27               	movwf	_side_mem+1,c
  1185  0013C6  0E02               	movlw	2
  1186  0013C8  6E26               	movwf	_side_mem,c
  1187  0013CA                     l2069:
  1188                           
  1189                           ;motor_control.c: 364: if(tmr_state!=1){
  1190  0013CA  042A               	decf	_tmr_state,w,c
  1191  0013CC  102B               	iorwf	_tmr_state+1,w,c
  1192  0013CE  B4D8               	btfsc	status,2,c
  1193  0013D0  D00D               	goto	l2077
  1194                           
  1195                           ;motor_control.c: 365: if(move_state!=4)set_directive(4);
  1196  0013D2  5024               	movf	_move_state,w,c
  1197  0013D4  0A04               	xorlw	4
  1198  0013D6  1025               	iorwf	_move_state+1,w,c
  1199  0013D8  B4D8               	btfsc	status,2,c
  1200  0013DA  D006               	goto	l2075
  1201  0013DC  0E00               	movlw	0
  1202  0013DE  6E1F               	movwf	set_directive@directive+1,c
  1203  0013E0  0E04               	movlw	4
  1204  0013E2  6E1E               	movwf	set_directive@directive,c
  1205  0013E4  EC18  F00B         	call	_set_directive	;wreg free
  1206  0013E8                     l2075:
  1207                           
  1208                           ;motor_control.c: 366: start_tmr();
  1209  0013E8  EC25  F00F         	call	_start_tmr	;wreg free
  1210  0013EC                     l2077:
  1211                           
  1212                           ;motor_control.c: 367: }
  1213                           ;motor_control.c: 369: if(tmr_state==1){
  1214  0013EC  042A               	decf	_tmr_state,w,c
  1215  0013EE  102B               	iorwf	_tmr_state+1,w,c
  1216  0013F0  A4D8               	btfss	status,2,c
  1217  0013F2  D00F               	goto	l2087
  1218                           
  1219                           ;motor_control.c: 370: if(ReadTimer0()>15767){
  1220  0013F4  EC6E  F00F         	call	_ReadTimer0	;wreg free
  1221  0013F8  0E98               	movlw	152
  1222  0013FA  5C0F               	subwf	?_ReadTimer0,w,c
  1223  0013FC  0E3D               	movlw	61
  1224  0013FE  5810               	subwfb	?_ReadTimer0+1,w,c
  1225  001400  A0D8               	btfss	status,0,c
  1226  001402  D007               	goto	l2087
  1227                           
  1228                           ;motor_control.c: 371: full_stp();
  1229  001404  EC97  F00E         	call	_full_stp	;wreg free
  1230                           
  1231                           ;motor_control.c: 373: while(SeeLine.b.Center == 1)check_state();
  1232  001408  D002               	goto	l2085
  1233  00140A                     l2083:
  1234  00140A  ECA0  F00F         	call	_check_state	;wreg free
  1235  00140E                     l2085:
  1236  00140E  B42C               	btfsc	_SeeLine,2,c
  1237  001410  D7FC               	goto	l2083
  1238  001412                     l2087:
  1239                           
  1240                           ;motor_control.c: 374: }
  1241                           ;motor_control.c: 375: }
  1242                           ;motor_control.c: 376: check_state();
  1243  001412  ECA0  F00F         	call	_check_state	;wreg free
  1244                           
  1245                           ;motor_control.c: 378: break;
  1246  001416  D038               	goto	l2093
  1247  001418                     l2091:
  1248  001418  502C               	movf	_SeeLine,w,c
  1249  00141A  0B1F               	andlw	31
  1250                           
  1251                           ; Switch size 1, requested type "space"
  1252                           ; Number of cases is 18, Range of values is 0 to 31
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte           55    28 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257  00141C  0A00               	xorlw	0	; case 0
  1258  00141E  B4D8               	btfsc	status,2,c
  1259  001420  D757               	goto	l2023
  1260  001422  0A01               	xorlw	1	; case 1
  1261  001424  B4D8               	btfsc	status,2,c
  1262  001426  D73D               	goto	l2015
  1263  001428  0A03               	xorlw	3	; case 2
  1264  00142A  B4D8               	btfsc	status,2,c
  1265  00142C  D722               	goto	l2007
  1266  00142E  0A06               	xorlw	6	; case 4
  1267  001430  B4D8               	btfsc	status,2,c
  1268  001432  D637               	goto	l1893
  1269  001434  0A01               	xorlw	1	; case 5
  1270  001436  B4D8               	btfsc	status,2,c
  1271  001438  D668               	goto	l1913
  1272  00143A  0A03               	xorlw	3	; case 6
  1273  00143C  B4D8               	btfsc	status,2,c
  1274  00143E  D659               	goto	l1909
  1275  001440  0A01               	xorlw	1	; case 7
  1276  001442  B4D8               	btfsc	status,2,c
  1277  001444  D696               	goto	l1937
  1278  001446  0A0F               	xorlw	15	; case 8
  1279  001448  B4D8               	btfsc	status,2,c
  1280  00144A  D71F               	goto	l2011
  1281  00144C  0A04               	xorlw	4	; case 12
  1282  00144E  B4D8               	btfsc	status,2,c
  1283  001450  D644               	goto	l1905
  1284  001452  0A03               	xorlw	3	; case 15
  1285  001454  B4D8               	btfsc	status,2,c
  1286  001456  D6C0               	goto	l1965
  1287  001458  0A1F               	xorlw	31	; case 16
  1288  00145A  B4D8               	btfsc	status,2,c
  1289  00145C  D72E               	goto	l2019
  1290  00145E  0A01               	xorlw	1	; case 17
  1291  001460  B4D8               	btfsc	status,2,c
  1292  001462  D789               	goto	l2053
  1293  001464  0A05               	xorlw	5	; case 20
  1294  001466  B4D8               	btfsc	status,2,c
  1295  001468  D628               	goto	l1897
  1296  00146A  0A03               	xorlw	3	; case 23
  1297  00146C  B4D8               	btfsc	status,2,c
  1298  00146E  D6CD               	goto	l1979
  1299  001470  0A0B               	xorlw	11	; case 28
  1300  001472  B4D8               	btfsc	status,2,c
  1301  001474  D661               	goto	l1923
  1302  001476  0A01               	xorlw	1	; case 29
  1303  001478  B4D8               	btfsc	status,2,c
  1304  00147A  D6DD               	goto	l1993
  1305  00147C  0A03               	xorlw	3	; case 30
  1306  00147E  B4D8               	btfsc	status,2,c
  1307  001480  D695               	goto	l1951
  1308  001482  0A01               	xorlw	1	; case 31
  1309  001484  B4D8               	btfsc	status,2,c
  1310  001486  D7A1               	goto	l2069
  1311  001488                     l2093:
  1312                           
  1313                           ;motor_control.c: 383: if(count<=5000){
  1314  001488  5021               	movf	_count+1,w,c
  1315  00148A  0A80               	xorlw	128
  1316  00148C  6EF3               	movwf	prodl,c
  1317  00148E  0E93               	movlw	147
  1318  001490  5CF3               	subwf	prodl,w,c
  1319  001492  0E89               	movlw	137
  1320  001494  B4D8               	btfsc	status,2,c
  1321  001496  5C20               	subwf	_count,w,c
  1322  001498  B0D8               	btfsc	status,0,c
  1323  00149A  D002               	goto	l421
  1324                           
  1325                           ;motor_control.c: 384: count++;
  1326  00149C  4A20               	infsnz	_count,f,c
  1327  00149E  2A21               	incf	_count+1,f,c
  1328  0014A0                     l421:
  1329  0014A0  0012               	return	
  1330  0014A2                     __end_of_motor_control:
  1331                           	opt stack 0
  1332                           prodl	equ	0xFF3
  1333                           intcon	equ	0xFF2
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           status	equ	0xFD8
  1337                           
  1338 ;; *************** function _start_tmr *****************
  1339 ;; Defined at:
  1340 ;;		line 45 in file "../motor_control.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;		None               void
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        0 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    2
  1361 ;; This function calls:
  1362 ;;		_WriteTimer0
  1363 ;; This function is called by:
  1364 ;;		_motor_control
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text2
  1369  001E4A                     __ptext2:
  1370                           	opt stack 0
  1371  001E4A                     _start_tmr:
  1372                           	opt stack 27
  1373                           
  1374                           ;motor_control.c: 46: TMR0IF = 0;
  1375                           
  1376                           ;incstack = 0
  1377  001E4A  94F2               	bcf	intcon,2,c	;volatile
  1378                           
  1379                           ;motor_control.c: 47: WriteTimer0(0u);
  1380  001E4C  0E00               	movlw	0
  1381  001E4E  6E10               	movwf	WriteTimer0@timer0+1,c
  1382  001E50  0E00               	movlw	0
  1383  001E52  6E0F               	movwf	WriteTimer0@timer0,c
  1384  001E54  EC65  F00F         	call	_WriteTimer0	;wreg free
  1385                           
  1386                           ;motor_control.c: 48: tmr_state = 1;
  1387  001E58  0E00               	movlw	0
  1388  001E5A  6E2B               	movwf	_tmr_state+1,c
  1389  001E5C  0E01               	movlw	1
  1390  001E5E  6E2A               	movwf	_tmr_state,c
  1391  001E60  0012               	return	
  1392  001E62                     __end_of_start_tmr:
  1393                           	opt stack 0
  1394                           prodl	equ	0xFF3
  1395                           intcon	equ	0xFF2
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _WriteTimer0 *****************
  1401 ;; Defined at:
  1402 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  timer0          2   14[COMRAM] unsigned int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  timer           2   16[COMRAM] struct Timers
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		None
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_start_tmr
  1427 ;;		_start_tmr1
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text3
  1432  001ECA                     __ptext3:
  1433                           	opt stack 0
  1434  001ECA                     _WriteTimer0:
  1435                           	opt stack 27
  1436                           
  1437                           ;incstack = 0
  1438  001ECA  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1439  001ECE  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1440  001ED2  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1441  001ED6  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1442  001EDA  0012               	return	
  1443  001EDC                     __end_of_WriteTimer0:
  1444                           	opt stack 0
  1445                           prodl	equ	0xFF3
  1446                           intcon	equ	0xFF2
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _clr_tmr *****************
  1452 ;; Defined at:
  1453 ;;		line 52 in file "../motor_control.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;		None               void
  1460 ;; Registers used:
  1461 ;;		wreg, status,2
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_motor_control
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text4
  1482  001F1C                     __ptext4:
  1483                           	opt stack 0
  1484  001F1C                     _clr_tmr:
  1485                           	opt stack 28
  1486                           
  1487                           ;motor_control.c: 53: TMR0IF = 0;
  1488                           
  1489                           ;incstack = 0
  1490  001F1C  94F2               	bcf	intcon,2,c	;volatile
  1491                           
  1492                           ;motor_control.c: 54: tmr_state = 0;
  1493  001F1E  0E00               	movlw	0
  1494  001F20  6E2B               	movwf	_tmr_state+1,c
  1495  001F22  0E00               	movlw	0
  1496  001F24  6E2A               	movwf	_tmr_state,c
  1497  001F26  0012               	return	
  1498  001F28                     __end_of_clr_tmr:
  1499                           	opt stack 0
  1500                           prodl	equ	0xFF3
  1501                           intcon	equ	0xFF2
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function _check_state *****************
  1507 ;; Defined at:
  1508 ;;		line 101 in file "../motor_control.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2  312[COMRAM] int 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    4
  1529 ;; This function calls:
  1530 ;;		_check_sensors
  1531 ;;		_set_leds
  1532 ;; This function is called by:
  1533 ;;		_motor_control
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text5
  1538  001F40                     __ptext5:
  1539                           	opt stack 0
  1540  001F40                     _check_state:
  1541                           	opt stack 25
  1542                           
  1543                           ;motor_control.c: 102: check_sensors();
  1544                           
  1545                           ;incstack = 0
  1546  001F40  ECB6  F00A         	call	_check_sensors	;wreg free
  1547                           
  1548                           ;motor_control.c: 103: set_leds();
  1549  001F44  EC0C  F00C         	call	_set_leds	;wreg free
  1550  001F48  0012               	return	
  1551  001F4A                     __end_of_check_state:
  1552                           	opt stack 0
  1553                           prodl	equ	0xFF3
  1554                           intcon	equ	0xFF2
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _set_leds *****************
  1560 ;; Defined at:
  1561 ;;		line 254 in file "../sumovore.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;		None               void
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;;		_check_state
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text6
  1591  001818                     __ptext6:
  1592                           	opt stack 0
  1593  001818                     _set_leds:
  1594                           	opt stack 29
  1595                           
  1596                           ;sumovore.c: 256: PORTDbits.RD0=!SeeLine.b.Left;
  1597                           
  1598                           ;incstack = 0
  1599  001818  B82C               	btfsc	_SeeLine,4,c
  1600  00181A  D002               	goto	u210
  1601  00181C  0E01               	movlw	1
  1602  00181E  D001               	goto	u216
  1603  001820                     u210:
  1604  001820  0E00               	movlw	0
  1605  001822                     u216:
  1606  001822  6E0F               	movwf	??_set_leds& (0+255),c
  1607  001824  5083               	movf	3971,w,c	;volatile
  1608  001826  180F               	xorwf	??_set_leds,w,c
  1609  001828  0BFE               	andlw	-2
  1610  00182A  180F               	xorwf	??_set_leds,w,c
  1611  00182C  6E83               	movwf	3971,c	;volatile
  1612                           
  1613                           ;sumovore.c: 257: PORTDbits.RD1=!SeeLine.b.CntLeft;
  1614  00182E  B62C               	btfsc	_SeeLine,3,c
  1615  001830  D002               	goto	u220
  1616  001832  0E01               	movlw	1
  1617  001834  D001               	goto	u226
  1618  001836                     u220:
  1619  001836  0E00               	movlw	0
  1620  001838                     u226:
  1621  001838  6E0F               	movwf	??_set_leds& (0+255),c
  1622  00183A  460F               	rlncf	??_set_leds,f,c
  1623  00183C  5083               	movf	3971,w,c	;volatile
  1624  00183E  180F               	xorwf	??_set_leds,w,c
  1625  001840  0BFD               	andlw	-3
  1626  001842  180F               	xorwf	??_set_leds,w,c
  1627  001844  6E83               	movwf	3971,c	;volatile
  1628                           
  1629                           ;sumovore.c: 258: PORTDbits.RD2=!SeeLine.b.Center;
  1630  001846  B42C               	btfsc	_SeeLine,2,c
  1631  001848  D002               	goto	u230
  1632  00184A  0E01               	movlw	1
  1633  00184C  D001               	goto	u236
  1634  00184E                     u230:
  1635  00184E  0E00               	movlw	0
  1636  001850                     u236:
  1637  001850  6E0F               	movwf	??_set_leds& (0+255),c
  1638  001852  460F               	rlncf	??_set_leds,f,c
  1639  001854  460F               	rlncf	??_set_leds,f,c
  1640  001856  5083               	movf	3971,w,c	;volatile
  1641  001858  180F               	xorwf	??_set_leds,w,c
  1642  00185A  0BFB               	andlw	-5
  1643  00185C  180F               	xorwf	??_set_leds,w,c
  1644  00185E  6E83               	movwf	3971,c	;volatile
  1645                           
  1646                           ;sumovore.c: 259: PORTDbits.RD3=!SeeLine.b.CntRight;
  1647  001860  B22C               	btfsc	_SeeLine,1,c
  1648  001862  D002               	goto	u240
  1649  001864  0E01               	movlw	1
  1650  001866  D001               	goto	u246
  1651  001868                     u240:
  1652  001868  0E00               	movlw	0
  1653  00186A                     u246:
  1654  00186A  6E0F               	movwf	??_set_leds& (0+255),c
  1655  00186C  460F               	rlncf	??_set_leds,f,c
  1656  00186E  460F               	rlncf	??_set_leds,f,c
  1657  001870  460F               	rlncf	??_set_leds,f,c
  1658  001872  5083               	movf	3971,w,c	;volatile
  1659  001874  180F               	xorwf	??_set_leds,w,c
  1660  001876  0BF7               	andlw	-9
  1661  001878  180F               	xorwf	??_set_leds,w,c
  1662  00187A  6E83               	movwf	3971,c	;volatile
  1663                           
  1664                           ;sumovore.c: 260: PORTDbits.RD4=!SeeLine.b.Right;
  1665  00187C  B02C               	btfsc	_SeeLine,0,c
  1666  00187E  D002               	goto	u250
  1667  001880  0E01               	movlw	1
  1668  001882  D001               	goto	u256
  1669  001884                     u250:
  1670  001884  0E00               	movlw	0
  1671  001886                     u256:
  1672  001886  6E0F               	movwf	??_set_leds& (0+255),c
  1673  001888  3A0F               	swapf	??_set_leds,f,c
  1674  00188A  5083               	movf	3971,w,c	;volatile
  1675  00188C  180F               	xorwf	??_set_leds,w,c
  1676  00188E  0BEF               	andlw	-17
  1677  001890  180F               	xorwf	??_set_leds,w,c
  1678  001892  6E83               	movwf	3971,c	;volatile
  1679  001894  0012               	return	
  1680  001896                     __end_of_set_leds:
  1681                           	opt stack 0
  1682                           prodl	equ	0xFF3
  1683                           intcon	equ	0xFF2
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _check_sensors *****************
  1689 ;; Defined at:
  1690 ;;		line 240 in file "../sumovore.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        1 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    3
  1711 ;; This function calls:
  1712 ;;		_adc
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;;		_check_state
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text7
  1720  00156C                     __ptext7:
  1721                           	opt stack 0
  1722  00156C                     _check_sensors:
  1723                           	opt stack 25
  1724                           
  1725                           ;sumovore.c: 242: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  1726                           
  1727                           ;incstack = 0
  1728  00156C  0E87               	movlw	135
  1729  00156E  ECAA  F00E         	call	_adc
  1730  001572  5011               	movf	?_adc,w,c
  1731  001574  5C28               	subwf	_threshold,w,c
  1732  001576  5012               	movf	?_adc+1,w,c
  1733  001578  5829               	subwfb	_threshold+1,w,c
  1734  00157A  B0D8               	btfsc	status,0,c
  1735  00157C  D002               	goto	u160
  1736  00157E  0E01               	movlw	1
  1737  001580  D001               	goto	u166
  1738  001582                     u160:
  1739  001582  0E00               	movlw	0
  1740  001584                     u166:
  1741  001584  6E14               	movwf	??_check_sensors& (0+255),c
  1742  001586  3A14               	swapf	??_check_sensors,f,c
  1743  001588  502C               	movf	_SeeLine,w,c
  1744  00158A  1814               	xorwf	??_check_sensors,w,c
  1745  00158C  0BEF               	andlw	-17
  1746  00158E  1814               	xorwf	??_check_sensors,w,c
  1747  001590  6E2C               	movwf	_SeeLine,c
  1748                           
  1749                           ;sumovore.c: 243: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  1750  001592  0E8F               	movlw	143
  1751  001594  ECAA  F00E         	call	_adc
  1752  001598  5011               	movf	?_adc,w,c
  1753  00159A  5C28               	subwf	_threshold,w,c
  1754  00159C  5012               	movf	?_adc+1,w,c
  1755  00159E  5829               	subwfb	_threshold+1,w,c
  1756  0015A0  B0D8               	btfsc	status,0,c
  1757  0015A2  D002               	goto	u170
  1758  0015A4  0E01               	movlw	1
  1759  0015A6  D001               	goto	u176
  1760  0015A8                     u170:
  1761  0015A8  0E00               	movlw	0
  1762  0015AA                     u176:
  1763  0015AA  6E14               	movwf	??_check_sensors& (0+255),c
  1764  0015AC  4614               	rlncf	??_check_sensors,f,c
  1765  0015AE  4614               	rlncf	??_check_sensors,f,c
  1766  0015B0  4614               	rlncf	??_check_sensors,f,c
  1767  0015B2  502C               	movf	_SeeLine,w,c
  1768  0015B4  1814               	xorwf	??_check_sensors,w,c
  1769  0015B6  0BF7               	andlw	-9
  1770  0015B8  1814               	xorwf	??_check_sensors,w,c
  1771  0015BA  6E2C               	movwf	_SeeLine,c
  1772                           
  1773                           ;sumovore.c: 244: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  1774  0015BC  0E97               	movlw	151
  1775  0015BE  ECAA  F00E         	call	_adc
  1776  0015C2  5011               	movf	?_adc,w,c
  1777  0015C4  5C28               	subwf	_threshold,w,c
  1778  0015C6  5012               	movf	?_adc+1,w,c
  1779  0015C8  5829               	subwfb	_threshold+1,w,c
  1780  0015CA  B0D8               	btfsc	status,0,c
  1781  0015CC  D002               	goto	u180
  1782  0015CE  0E01               	movlw	1
  1783  0015D0  D001               	goto	u186
  1784  0015D2                     u180:
  1785  0015D2  0E00               	movlw	0
  1786  0015D4                     u186:
  1787  0015D4  6E14               	movwf	??_check_sensors& (0+255),c
  1788  0015D6  4614               	rlncf	??_check_sensors,f,c
  1789  0015D8  4614               	rlncf	??_check_sensors,f,c
  1790  0015DA  502C               	movf	_SeeLine,w,c
  1791  0015DC  1814               	xorwf	??_check_sensors,w,c
  1792  0015DE  0BFB               	andlw	-5
  1793  0015E0  1814               	xorwf	??_check_sensors,w,c
  1794  0015E2  6E2C               	movwf	_SeeLine,c
  1795                           
  1796                           ;sumovore.c: 245: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  1797  0015E4  0E9F               	movlw	159
  1798  0015E6  ECAA  F00E         	call	_adc
  1799  0015EA  5011               	movf	?_adc,w,c
  1800  0015EC  5C28               	subwf	_threshold,w,c
  1801  0015EE  5012               	movf	?_adc+1,w,c
  1802  0015F0  5829               	subwfb	_threshold+1,w,c
  1803  0015F2  B0D8               	btfsc	status,0,c
  1804  0015F4  D002               	goto	u190
  1805  0015F6  0E01               	movlw	1
  1806  0015F8  D001               	goto	u196
  1807  0015FA                     u190:
  1808  0015FA  0E00               	movlw	0
  1809  0015FC                     u196:
  1810  0015FC  6E14               	movwf	??_check_sensors& (0+255),c
  1811  0015FE  4614               	rlncf	??_check_sensors,f,c
  1812  001600  502C               	movf	_SeeLine,w,c
  1813  001602  1814               	xorwf	??_check_sensors,w,c
  1814  001604  0BFD               	andlw	-3
  1815  001606  1814               	xorwf	??_check_sensors,w,c
  1816  001608  6E2C               	movwf	_SeeLine,c
  1817                           
  1818                           ;sumovore.c: 246: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  1819  00160A  0EA7               	movlw	167
  1820  00160C  ECAA  F00E         	call	_adc
  1821  001610  5011               	movf	?_adc,w,c
  1822  001612  5C28               	subwf	_threshold,w,c
  1823  001614  5012               	movf	?_adc+1,w,c
  1824  001616  5829               	subwfb	_threshold+1,w,c
  1825  001618  B0D8               	btfsc	status,0,c
  1826  00161A  D002               	goto	u200
  1827  00161C  0E01               	movlw	1
  1828  00161E  D001               	goto	u206
  1829  001620                     u200:
  1830  001620  0E00               	movlw	0
  1831  001622                     u206:
  1832  001622  6E14               	movwf	??_check_sensors& (0+255),c
  1833  001624  502C               	movf	_SeeLine,w,c
  1834  001626  1814               	xorwf	??_check_sensors,w,c
  1835  001628  0BFE               	andlw	-2
  1836  00162A  1814               	xorwf	??_check_sensors,w,c
  1837  00162C  6E2C               	movwf	_SeeLine,c
  1838  00162E  0012               	return	
  1839  001630                     __end_of_check_sensors:
  1840                           	opt stack 0
  1841                           prodl	equ	0xFF3
  1842                           intcon	equ	0xFF2
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _adc *****************
  1848 ;; Defined at:
  1849 ;;		line 228 in file "../sumovore.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  channel         1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  channel         1   18[COMRAM] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2   16[COMRAM] unsigned int 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;Total ram usage:        3 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    2
  1870 ;; This function calls:
  1871 ;;		_BusyADC
  1872 ;;		_ConvertADC
  1873 ;;		_ReadADC
  1874 ;;		_SetChanADC
  1875 ;; This function is called by:
  1876 ;;		_check_sensors
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text8
  1881  001D54                     __ptext8:
  1882                           	opt stack 0
  1883  001D54                     _adc:
  1884                           	opt stack 25
  1885                           
  1886                           ;incstack = 0
  1887                           ;adc@channel stored from wreg
  1888  001D54  6E13               	movwf	adc@channel,c
  1889                           
  1890                           ;sumovore.c: 230: SetChanADC( channel );
  1891  001D56  5013               	movf	adc@channel,w,c
  1892  001D58  EC3D  F00F         	call	_SetChanADC
  1893                           
  1894                           ;sumovore.c: 231: ConvertADC();
  1895  001D5C  ECC1  F00F         	call	_ConvertADC	;wreg free
  1896  001D60                     l1395:
  1897  001D60  EC94  F00F         	call	_BusyADC	;wreg free
  1898  001D64  0900               	iorlw	0
  1899  001D66  A4D8               	btfss	status,2,c
  1900  001D68  D7FB               	goto	l1395
  1901                           
  1902                           ;sumovore.c: 234: return ReadADC();
  1903  001D6A  ECA5  F00F         	call	_ReadADC	;wreg free
  1904  001D6E  C00F  F011         	movff	?_ReadADC,?_adc
  1905  001D72  C010  F012         	movff	?_ReadADC+1,?_adc+1
  1906  001D76  0012               	return	
  1907  001D78                     __end_of_adc:
  1908                           	opt stack 0
  1909                           prodl	equ	0xFF3
  1910                           intcon	equ	0xFF2
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           status	equ	0xFD8
  1914                           
  1915 ;; *************** function _SetChanADC *****************
  1916 ;; Defined at:
  1917 ;;		line 30 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcsetch.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  channel         1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  channel         1   15[COMRAM] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_adc
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text9
  1946  001E7A                     __ptext9:
  1947                           	opt stack 0
  1948  001E7A                     _SetChanADC:
  1949                           	opt stack 25
  1950                           
  1951                           ;incstack = 0
  1952                           ;SetChanADC@channel stored from wreg
  1953  001E7A  6E10               	movwf	SetChanADC@channel,c
  1954  001E7C  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  1955  001E80  0EC3               	movlw	195
  1956  001E82  160F               	andwf	??_SetChanADC,f,c
  1957  001E84  90D8               	bcf	status,0,c
  1958  001E86  3010               	rrcf	SetChanADC@channel,w,c
  1959  001E88  0B3C               	andlw	60
  1960  001E8A  100F               	iorwf	??_SetChanADC,w,c
  1961  001E8C  6EC2               	movwf	4034,c	;volatile
  1962  001E8E  0012               	return	
  1963  001E90                     __end_of_SetChanADC:
  1964                           	opt stack 0
  1965                           prodl	equ	0xFF3
  1966                           intcon	equ	0xFF2
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _ReadADC *****************
  1972 ;; Defined at:
  1973 ;;		line 24 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcread.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2   14[COMRAM] int 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_adc
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text10
  2002  001F4A                     __ptext10:
  2003                           	opt stack 0
  2004  001F4A                     _ReadADC:
  2005                           	opt stack 25
  2006                           
  2007                           ;incstack = 0
  2008  001F4A  50C4               	movf	4036,w,c	;volatile
  2009  001F4C  6E10               	movwf	?_ReadADC+1,c
  2010  001F4E  50C3               	movf	4035,w,c	;volatile
  2011  001F50  6E0F               	movwf	?_ReadADC,c
  2012  001F52  0012               	return	
  2013  001F54                     __end_of_ReadADC:
  2014                           	opt stack 0
  2015                           prodl	equ	0xFF3
  2016                           intcon	equ	0xFF2
  2017                           postinc0	equ	0xFEE
  2018                           wreg	equ	0xFE8
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _ConvertADC *****************
  2022 ;; Defined at:
  2023 ;;		line 22 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;		None               void
  2030 ;; Registers used:
  2031 ;;		None
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_adc
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text11
  2052  001F82                     __ptext11:
  2053                           	opt stack 0
  2054  001F82                     _ConvertADC:
  2055                           	opt stack 25
  2056                           
  2057                           ;incstack = 0
  2058  001F82  82C2               	bsf	4034,1,c	;volatile
  2059  001F84  0012               	return	
  2060  001F86                     __end_of_ConvertADC:
  2061                           	opt stack 0
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _BusyADC *****************
  2069 ;; Defined at:
  2070 ;;		line 26 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      unsigned char 
  2077 ;; Registers used:
  2078 ;;		wreg
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_adc
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text12
  2099  001F28                     __ptext12:
  2100                           	opt stack 0
  2101  001F28                     _BusyADC:
  2102                           	opt stack 25
  2103                           
  2104                           ;incstack = 0
  2105  001F28  A2C2               	btfss	4034,1,c	;volatile
  2106  001F2A  D002               	goto	u100
  2107  001F2C  0E01               	movlw	1
  2108  001F2E  D001               	goto	l550
  2109  001F30                     u100:
  2110  001F30  0E00               	movlw	0
  2111  001F32                     l550:
  2112  001F32  0012               	return	
  2113  001F34                     __end_of_BusyADC:
  2114                           	opt stack 0
  2115                           prodl	equ	0xFF3
  2116                           intcon	equ	0xFF2
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _change_track *****************
  2122 ;; Defined at:
  2123 ;;		line 116 in file "../motor_control.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    5
  2144 ;; This function calls:
  2145 ;;		_clr_mem
  2146 ;;		_set_directive
  2147 ;; This function is called by:
  2148 ;;		_motor_control
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text13
  2153  00197C                     __ptext13:
  2154                           	opt stack 0
  2155  00197C                     _change_track:
  2156                           	opt stack 24
  2157                           
  2158                           ;motor_control.c: 117: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2159                           
  2160                           ;incstack = 0
  2161  00197C  B82C               	btfsc	_SeeLine,4,c
  2162  00197E  B62C               	btfsc	_SeeLine,3,c
  2163  001980  D014               	goto	l1813
  2164  001982  A42C               	btfss	_SeeLine,2,c
  2165  001984  D012               	goto	l1813
  2166                           
  2167                           ;motor_control.c: 119: set_directive(1);
  2168  001986  0E00               	movlw	0
  2169  001988  6E1F               	movwf	set_directive@directive+1,c
  2170  00198A  0E01               	movlw	1
  2171  00198C  6E1E               	movwf	set_directive@directive,c
  2172  00198E  EC18  F00B         	call	_set_directive	;wreg free
  2173  001992                     l323:
  2174  001992  B42C               	btfsc	_SeeLine,2,c
  2175  001994  D7FE               	goto	l323
  2176                           
  2177                           ;motor_control.c: 121: set_directive(1);
  2178  001996  0E00               	movlw	0
  2179  001998  6E1F               	movwf	set_directive@directive+1,c
  2180  00199A  0E01               	movlw	1
  2181  00199C  6E1E               	movwf	set_directive@directive,c
  2182  00199E  EC18  F00B         	call	_set_directive	;wreg free
  2183  0019A2                     l326:
  2184  0019A2  A42C               	btfss	_SeeLine,2,c
  2185  0019A4  D7FE               	goto	l326
  2186                           
  2187                           ;motor_control.c: 123: clr_mem();
  2188  0019A6  ECAA  F00F         	call	_clr_mem	;wreg free
  2189  0019AA                     l1813:
  2190                           
  2191                           ;motor_control.c: 124: }
  2192                           ;motor_control.c: 125: if(SeeLine.b.Left==1&&SeeLine.b.CntLeft==0&&SeeLine.b.Center==1){
  2193  0019AA  B82C               	btfsc	_SeeLine,4,c
  2194  0019AC  B62C               	btfsc	_SeeLine,3,c
  2195  0019AE  D014               	goto	l336
  2196  0019B0  A42C               	btfss	_SeeLine,2,c
  2197  0019B2  D012               	goto	l336
  2198                           
  2199                           ;motor_control.c: 127: set_directive(6);
  2200  0019B4  0E00               	movlw	0
  2201  0019B6  6E1F               	movwf	set_directive@directive+1,c
  2202  0019B8  0E06               	movlw	6
  2203  0019BA  6E1E               	movwf	set_directive@directive,c
  2204  0019BC  EC18  F00B         	call	_set_directive	;wreg free
  2205  0019C0                     l330:
  2206  0019C0  B42C               	btfsc	_SeeLine,2,c
  2207  0019C2  D7FE               	goto	l330
  2208                           
  2209                           ;motor_control.c: 129: set_directive(6);
  2210  0019C4  0E00               	movlw	0
  2211  0019C6  6E1F               	movwf	set_directive@directive+1,c
  2212  0019C8  0E06               	movlw	6
  2213  0019CA  6E1E               	movwf	set_directive@directive,c
  2214  0019CC  EC18  F00B         	call	_set_directive	;wreg free
  2215  0019D0                     l333:
  2216  0019D0  A42C               	btfss	_SeeLine,2,c
  2217  0019D2  D7FE               	goto	l333
  2218                           
  2219                           ;motor_control.c: 131: clr_mem();
  2220  0019D4  ECAA  F00F         	call	_clr_mem	;wreg free
  2221  0019D8                     l336:
  2222  0019D8  0012               	return	
  2223  0019DA                     __end_of_change_track:
  2224                           	opt stack 0
  2225                           prodl	equ	0xFF3
  2226                           intcon	equ	0xFF2
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function _set_directive *****************
  2232 ;; Defined at:
  2233 ;;		line 63 in file "../motor_control.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  directive       2   29[COMRAM] int 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    4
  2254 ;; This function calls:
  2255 ;;		_full_stp
  2256 ;;		_pirouette_left
  2257 ;;		_pirouette_right
  2258 ;;		_spin_left
  2259 ;;		_spin_right
  2260 ;;		_straight_fwd
  2261 ;;		_turn_left
  2262 ;;		_turn_right
  2263 ;; This function is called by:
  2264 ;;		_change_track
  2265 ;;		_motor_control
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text14
  2270  001630                     __ptext14:
  2271                           	opt stack 0
  2272  001630                     _set_directive:
  2273                           	opt stack 25
  2274                           
  2275                           ;motor_control.c: 66: if(directive==0){
  2276                           
  2277                           ;incstack = 0
  2278  001630  501F               	movf	set_directive@directive+1,w,c
  2279  001632  101E               	iorwf	set_directive@directive,w,c
  2280  001634  A4D8               	btfss	status,2,c
  2281  001636  D006               	goto	l1611
  2282                           
  2283                           ;motor_control.c: 67: pirouette_left();
  2284  001638  EC84  F00E         	call	_pirouette_left	;wreg free
  2285                           
  2286                           ;motor_control.c: 68: move_state=0;
  2287  00163C  0E00               	movlw	0
  2288  00163E  6E25               	movwf	_move_state+1,c
  2289  001640  0E00               	movlw	0
  2290  001642  6E24               	movwf	_move_state,c
  2291  001644                     l1611:
  2292                           
  2293                           ;motor_control.c: 69: }
  2294                           ;motor_control.c: 70: if(directive==1){
  2295  001644  041E               	decf	set_directive@directive,w,c
  2296  001646  101F               	iorwf	set_directive@directive+1,w,c
  2297  001648  A4D8               	btfss	status,2,c
  2298  00164A  D006               	goto	l1617
  2299                           
  2300                           ;motor_control.c: 71: spin_left();
  2301  00164C  EC5E  F00E         	call	_spin_left	;wreg free
  2302                           
  2303                           ;motor_control.c: 72: move_state=1;
  2304  001650  0E00               	movlw	0
  2305  001652  6E25               	movwf	_move_state+1,c
  2306  001654  0E01               	movlw	1
  2307  001656  6E24               	movwf	_move_state,c
  2308  001658                     l1617:
  2309                           
  2310                           ;motor_control.c: 73: }
  2311                           ;motor_control.c: 74: if(directive==2){
  2312  001658  501E               	movf	set_directive@directive,w,c
  2313  00165A  0A02               	xorlw	2
  2314  00165C  101F               	iorwf	set_directive@directive+1,w,c
  2315  00165E  A4D8               	btfss	status,2,c
  2316  001660  D006               	goto	l1623
  2317                           
  2318                           ;motor_control.c: 75: turn_left();
  2319  001662  EC25  F00E         	call	_turn_left	;wreg free
  2320                           
  2321                           ;motor_control.c: 76: move_state=2;
  2322  001666  0E00               	movlw	0
  2323  001668  6E25               	movwf	_move_state+1,c
  2324  00166A  0E02               	movlw	2
  2325  00166C  6E24               	movwf	_move_state,c
  2326  00166E                     l1623:
  2327                           
  2328                           ;motor_control.c: 77: }
  2329                           ;motor_control.c: 78: if(directive==3){
  2330  00166E  501E               	movf	set_directive@directive,w,c
  2331  001670  0A03               	xorlw	3
  2332  001672  101F               	iorwf	set_directive@directive+1,w,c
  2333  001674  A4D8               	btfss	status,2,c
  2334  001676  D006               	goto	l1629
  2335                           
  2336                           ;motor_control.c: 79: full_stp();
  2337  001678  EC97  F00E         	call	_full_stp	;wreg free
  2338                           
  2339                           ;motor_control.c: 80: move_state=3;
  2340  00167C  0E00               	movlw	0
  2341  00167E  6E25               	movwf	_move_state+1,c
  2342  001680  0E03               	movlw	3
  2343  001682  6E24               	movwf	_move_state,c
  2344  001684                     l1629:
  2345                           
  2346                           ;motor_control.c: 81: }
  2347                           ;motor_control.c: 82: if(directive==4){
  2348  001684  501E               	movf	set_directive@directive,w,c
  2349  001686  0A04               	xorlw	4
  2350  001688  101F               	iorwf	set_directive@directive+1,w,c
  2351  00168A  A4D8               	btfss	status,2,c
  2352  00168C  D006               	goto	l1635
  2353                           
  2354                           ;motor_control.c: 83: straight_fwd();
  2355  00168E  EC38  F00E         	call	_straight_fwd	;wreg free
  2356                           
  2357                           ;motor_control.c: 84: move_state=4;
  2358  001692  0E00               	movlw	0
  2359  001694  6E25               	movwf	_move_state+1,c
  2360  001696  0E04               	movlw	4
  2361  001698  6E24               	movwf	_move_state,c
  2362  00169A                     l1635:
  2363                           
  2364                           ;motor_control.c: 85: }
  2365                           ;motor_control.c: 86: if(directive==5){
  2366  00169A  501E               	movf	set_directive@directive,w,c
  2367  00169C  0A05               	xorlw	5
  2368  00169E  101F               	iorwf	set_directive@directive+1,w,c
  2369  0016A0  A4D8               	btfss	status,2,c
  2370  0016A2  D006               	goto	l1641
  2371                           
  2372                           ;motor_control.c: 87: turn_right();
  2373  0016A4  EC12  F00E         	call	_turn_right	;wreg free
  2374                           
  2375                           ;motor_control.c: 88: move_state=5;
  2376  0016A8  0E00               	movlw	0
  2377  0016AA  6E25               	movwf	_move_state+1,c
  2378  0016AC  0E05               	movlw	5
  2379  0016AE  6E24               	movwf	_move_state,c
  2380  0016B0                     l1641:
  2381                           
  2382                           ;motor_control.c: 89: }
  2383                           ;motor_control.c: 90: if(directive==6){
  2384  0016B0  501E               	movf	set_directive@directive,w,c
  2385  0016B2  0A06               	xorlw	6
  2386  0016B4  101F               	iorwf	set_directive@directive+1,w,c
  2387  0016B6  A4D8               	btfss	status,2,c
  2388  0016B8  D006               	goto	l1647
  2389                           
  2390                           ;motor_control.c: 91: spin_right();
  2391  0016BA  EC4B  F00E         	call	_spin_right	;wreg free
  2392                           
  2393                           ;motor_control.c: 92: move_state=6;
  2394  0016BE  0E00               	movlw	0
  2395  0016C0  6E25               	movwf	_move_state+1,c
  2396  0016C2  0E06               	movlw	6
  2397  0016C4  6E24               	movwf	_move_state,c
  2398  0016C6                     l1647:
  2399                           
  2400                           ;motor_control.c: 93: }
  2401                           ;motor_control.c: 94: if(directive==7){
  2402  0016C6  501E               	movf	set_directive@directive,w,c
  2403  0016C8  0A07               	xorlw	7
  2404  0016CA  101F               	iorwf	set_directive@directive+1,w,c
  2405  0016CC  A4D8               	btfss	status,2,c
  2406  0016CE  D006               	goto	l310
  2407                           
  2408                           ;motor_control.c: 95: pirouette_right();
  2409  0016D0  EC71  F00E         	call	_pirouette_right	;wreg free
  2410                           
  2411                           ;motor_control.c: 96: move_state=7;
  2412  0016D4  0E00               	movlw	0
  2413  0016D6  6E25               	movwf	_move_state+1,c
  2414  0016D8  0E07               	movlw	7
  2415  0016DA  6E24               	movwf	_move_state,c
  2416  0016DC                     l310:
  2417  0016DC  0012               	return	
  2418  0016DE                     __end_of_set_directive:
  2419                           	opt stack 0
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _turn_right *****************
  2427 ;; Defined at:
  2428 ;;		line 419 in file "../motor_control.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;		None               void
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    3
  2449 ;; This function calls:
  2450 ;;		_set_motor_speed
  2451 ;; This function is called by:
  2452 ;;		_set_directive
  2453 ;;		_follow_simple_curves
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text15
  2458  001C24                     __ptext15:
  2459                           	opt stack 0
  2460  001C24                     _turn_right:
  2461                           	opt stack 25
  2462                           
  2463                           ;motor_control.c: 421: set_motor_speed(left, slow, 0);
  2464                           
  2465                           ;incstack = 0
  2466  001C24  0E04               	movlw	4
  2467  001C26  6E15               	movwf	set_motor_speed@motor_speed,c
  2468  001C28  0E00               	movlw	0
  2469  001C2A  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2470  001C2C  0E00               	movlw	0
  2471  001C2E  6E16               	movwf	set_motor_speed@speed_modifier,c
  2472  001C30  0E00               	movlw	0
  2473  001C32  EC51  F00A         	call	_set_motor_speed
  2474                           
  2475                           ;motor_control.c: 422: set_motor_speed(right, stop, 0);
  2476  001C36  0E03               	movlw	3
  2477  001C38  6E15               	movwf	set_motor_speed@motor_speed,c
  2478  001C3A  0E00               	movlw	0
  2479  001C3C  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2480  001C3E  0E00               	movlw	0
  2481  001C40  6E16               	movwf	set_motor_speed@speed_modifier,c
  2482  001C42  0E01               	movlw	1
  2483  001C44  EC51  F00A         	call	_set_motor_speed
  2484  001C48  0012               	return	
  2485  001C4A                     __end_of_turn_right:
  2486                           	opt stack 0
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _turn_left *****************
  2494 ;; Defined at:
  2495 ;;		line 404 in file "../motor_control.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;		None               void
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    3
  2516 ;; This function calls:
  2517 ;;		_set_motor_speed
  2518 ;; This function is called by:
  2519 ;;		_set_directive
  2520 ;;		_follow_simple_curves
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text16
  2525  001C4A                     __ptext16:
  2526                           	opt stack 0
  2527  001C4A                     _turn_left:
  2528                           	opt stack 25
  2529                           
  2530                           ;motor_control.c: 406: set_motor_speed(left, stop, 0);
  2531                           
  2532                           ;incstack = 0
  2533  001C4A  0E03               	movlw	3
  2534  001C4C  6E15               	movwf	set_motor_speed@motor_speed,c
  2535  001C4E  0E00               	movlw	0
  2536  001C50  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2537  001C52  0E00               	movlw	0
  2538  001C54  6E16               	movwf	set_motor_speed@speed_modifier,c
  2539  001C56  0E00               	movlw	0
  2540  001C58  EC51  F00A         	call	_set_motor_speed
  2541                           
  2542                           ;motor_control.c: 407: set_motor_speed(right, slow, 0);
  2543  001C5C  0E04               	movlw	4
  2544  001C5E  6E15               	movwf	set_motor_speed@motor_speed,c
  2545  001C60  0E00               	movlw	0
  2546  001C62  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2547  001C64  0E00               	movlw	0
  2548  001C66  6E16               	movwf	set_motor_speed@speed_modifier,c
  2549  001C68  0E01               	movlw	1
  2550  001C6A  EC51  F00A         	call	_set_motor_speed
  2551  001C6E  0012               	return	
  2552  001C70                     __end_of_turn_left:
  2553                           	opt stack 0
  2554                           prodl	equ	0xFF3
  2555                           intcon	equ	0xFF2
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _straight_fwd *****************
  2561 ;; Defined at:
  2562 ;;		line 409 in file "../motor_control.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    3
  2583 ;; This function calls:
  2584 ;;		_set_motor_speed
  2585 ;; This function is called by:
  2586 ;;		_set_directive
  2587 ;;		_follow_simple_curves
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text17
  2592  001C70                     __ptext17:
  2593                           	opt stack 0
  2594  001C70                     _straight_fwd:
  2595                           	opt stack 25
  2596                           
  2597                           ;motor_control.c: 411: set_motor_speed(left, slow, 75);
  2598                           
  2599                           ;incstack = 0
  2600  001C70  0E04               	movlw	4
  2601  001C72  6E15               	movwf	set_motor_speed@motor_speed,c
  2602  001C74  0E00               	movlw	0
  2603  001C76  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2604  001C78  0E4B               	movlw	75
  2605  001C7A  6E16               	movwf	set_motor_speed@speed_modifier,c
  2606  001C7C  0E00               	movlw	0
  2607  001C7E  EC51  F00A         	call	_set_motor_speed
  2608                           
  2609                           ;motor_control.c: 412: set_motor_speed(right, slow, 0);
  2610  001C82  0E04               	movlw	4
  2611  001C84  6E15               	movwf	set_motor_speed@motor_speed,c
  2612  001C86  0E00               	movlw	0
  2613  001C88  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2614  001C8A  0E00               	movlw	0
  2615  001C8C  6E16               	movwf	set_motor_speed@speed_modifier,c
  2616  001C8E  0E01               	movlw	1
  2617  001C90  EC51  F00A         	call	_set_motor_speed
  2618  001C94  0012               	return	
  2619  001C96                     __end_of_straight_fwd:
  2620                           	opt stack 0
  2621                           prodl	equ	0xFF3
  2622                           intcon	equ	0xFF2
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           status	equ	0xFD8
  2626                           
  2627 ;; *************** function _spin_right *****************
  2628 ;; Defined at:
  2629 ;;		line 414 in file "../motor_control.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;		None               void
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    3
  2650 ;; This function calls:
  2651 ;;		_set_motor_speed
  2652 ;; This function is called by:
  2653 ;;		_set_directive
  2654 ;;		_follow_simple_curves
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text18
  2659  001C96                     __ptext18:
  2660                           	opt stack 0
  2661  001C96                     _spin_right:
  2662                           	opt stack 25
  2663                           
  2664                           ;motor_control.c: 416: set_motor_speed(left, slow, 0);
  2665                           
  2666                           ;incstack = 0
  2667  001C96  0E04               	movlw	4
  2668  001C98  6E15               	movwf	set_motor_speed@motor_speed,c
  2669  001C9A  0E00               	movlw	0
  2670  001C9C  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2671  001C9E  0E00               	movlw	0
  2672  001CA0  6E16               	movwf	set_motor_speed@speed_modifier,c
  2673  001CA2  0E00               	movlw	0
  2674  001CA4  EC51  F00A         	call	_set_motor_speed
  2675                           
  2676                           ;motor_control.c: 417: set_motor_speed(right, rev_slow, 0);
  2677  001CA8  0E02               	movlw	2
  2678  001CAA  6E15               	movwf	set_motor_speed@motor_speed,c
  2679  001CAC  0E00               	movlw	0
  2680  001CAE  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2681  001CB0  0E00               	movlw	0
  2682  001CB2  6E16               	movwf	set_motor_speed@speed_modifier,c
  2683  001CB4  0E01               	movlw	1
  2684  001CB6  EC51  F00A         	call	_set_motor_speed
  2685  001CBA  0012               	return	
  2686  001CBC                     __end_of_spin_right:
  2687                           	opt stack 0
  2688                           prodl	equ	0xFF3
  2689                           intcon	equ	0xFF2
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           status	equ	0xFD8
  2693                           
  2694 ;; *************** function _spin_left *****************
  2695 ;; Defined at:
  2696 ;;		line 398 in file "../motor_control.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    3
  2717 ;; This function calls:
  2718 ;;		_set_motor_speed
  2719 ;; This function is called by:
  2720 ;;		_set_directive
  2721 ;;		_follow_simple_curves
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text19
  2726  001CBC                     __ptext19:
  2727                           	opt stack 0
  2728  001CBC                     _spin_left:
  2729                           	opt stack 25
  2730                           
  2731                           ;motor_control.c: 400: set_motor_speed(left, rev_slow, 0);
  2732                           
  2733                           ;incstack = 0
  2734  001CBC  0E02               	movlw	2
  2735  001CBE  6E15               	movwf	set_motor_speed@motor_speed,c
  2736  001CC0  0E00               	movlw	0
  2737  001CC2  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2738  001CC4  0E00               	movlw	0
  2739  001CC6  6E16               	movwf	set_motor_speed@speed_modifier,c
  2740  001CC8  0E00               	movlw	0
  2741  001CCA  EC51  F00A         	call	_set_motor_speed
  2742                           
  2743                           ;motor_control.c: 401: set_motor_speed(right, slow, 0);
  2744  001CCE  0E04               	movlw	4
  2745  001CD0  6E15               	movwf	set_motor_speed@motor_speed,c
  2746  001CD2  0E00               	movlw	0
  2747  001CD4  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2748  001CD6  0E00               	movlw	0
  2749  001CD8  6E16               	movwf	set_motor_speed@speed_modifier,c
  2750  001CDA  0E01               	movlw	1
  2751  001CDC  EC51  F00A         	call	_set_motor_speed
  2752  001CE0  0012               	return	
  2753  001CE2                     __end_of_spin_left:
  2754                           	opt stack 0
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _pirouette_right *****************
  2762 ;; Defined at:
  2763 ;;		line 40 in file "../motor_control.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    3
  2784 ;; This function calls:
  2785 ;;		_set_motor_speed
  2786 ;; This function is called by:
  2787 ;;		_set_directive
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text20
  2792  001CE2                     __ptext20:
  2793                           	opt stack 0
  2794  001CE2                     _pirouette_right:
  2795                           	opt stack 25
  2796                           
  2797                           ;motor_control.c: 41: set_motor_speed(left, slow, 0);
  2798                           
  2799                           ;incstack = 0
  2800  001CE2  0E04               	movlw	4
  2801  001CE4  6E15               	movwf	set_motor_speed@motor_speed,c
  2802  001CE6  0E00               	movlw	0
  2803  001CE8  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2804  001CEA  0E00               	movlw	0
  2805  001CEC  6E16               	movwf	set_motor_speed@speed_modifier,c
  2806  001CEE  0E00               	movlw	0
  2807  001CF0  EC51  F00A         	call	_set_motor_speed
  2808                           
  2809                           ;motor_control.c: 42: set_motor_speed(right, rev_slow, 0);
  2810  001CF4  0E02               	movlw	2
  2811  001CF6  6E15               	movwf	set_motor_speed@motor_speed,c
  2812  001CF8  0E00               	movlw	0
  2813  001CFA  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2814  001CFC  0E00               	movlw	0
  2815  001CFE  6E16               	movwf	set_motor_speed@speed_modifier,c
  2816  001D00  0E01               	movlw	1
  2817  001D02  EC51  F00A         	call	_set_motor_speed
  2818  001D06  0012               	return	
  2819  001D08                     __end_of_pirouette_right:
  2820                           	opt stack 0
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _pirouette_left *****************
  2828 ;; Defined at:
  2829 ;;		line 36 in file "../motor_control.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    3
  2850 ;; This function calls:
  2851 ;;		_set_motor_speed
  2852 ;; This function is called by:
  2853 ;;		_set_directive
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text21
  2858  001D08                     __ptext21:
  2859                           	opt stack 0
  2860  001D08                     _pirouette_left:
  2861                           	opt stack 25
  2862                           
  2863                           ;motor_control.c: 37: set_motor_speed(left, rev_slow, 0);
  2864                           
  2865                           ;incstack = 0
  2866  001D08  0E02               	movlw	2
  2867  001D0A  6E15               	movwf	set_motor_speed@motor_speed,c
  2868  001D0C  0E00               	movlw	0
  2869  001D0E  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2870  001D10  0E00               	movlw	0
  2871  001D12  6E16               	movwf	set_motor_speed@speed_modifier,c
  2872  001D14  0E00               	movlw	0
  2873  001D16  EC51  F00A         	call	_set_motor_speed
  2874                           
  2875                           ;motor_control.c: 38: set_motor_speed(right, slow, 0);
  2876  001D1A  0E04               	movlw	4
  2877  001D1C  6E15               	movwf	set_motor_speed@motor_speed,c
  2878  001D1E  0E00               	movlw	0
  2879  001D20  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2880  001D22  0E00               	movlw	0
  2881  001D24  6E16               	movwf	set_motor_speed@speed_modifier,c
  2882  001D26  0E01               	movlw	1
  2883  001D28  EC51  F00A         	call	_set_motor_speed
  2884  001D2C  0012               	return	
  2885  001D2E                     __end_of_pirouette_left:
  2886                           	opt stack 0
  2887                           prodl	equ	0xFF3
  2888                           intcon	equ	0xFF2
  2889                           postinc0	equ	0xFEE
  2890                           wreg	equ	0xFE8
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function _full_stp *****************
  2894 ;; Defined at:
  2895 ;;		line 31 in file "../motor_control.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;		None               void
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    3
  2916 ;; This function calls:
  2917 ;;		_set_motor_speed
  2918 ;; This function is called by:
  2919 ;;		_set_directive
  2920 ;;		_motor_control
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text22
  2925  001D2E                     __ptext22:
  2926                           	opt stack 0
  2927  001D2E                     _full_stp:
  2928                           	opt stack 25
  2929                           
  2930                           ;motor_control.c: 32: set_motor_speed(left, stop, 0);
  2931                           
  2932                           ;incstack = 0
  2933  001D2E  0E03               	movlw	3
  2934  001D30  6E15               	movwf	set_motor_speed@motor_speed,c
  2935  001D32  0E00               	movlw	0
  2936  001D34  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2937  001D36  0E00               	movlw	0
  2938  001D38  6E16               	movwf	set_motor_speed@speed_modifier,c
  2939  001D3A  0E00               	movlw	0
  2940  001D3C  EC51  F00A         	call	_set_motor_speed
  2941                           
  2942                           ;motor_control.c: 33: set_motor_speed(right, stop, 0);
  2943  001D40  0E03               	movlw	3
  2944  001D42  6E15               	movwf	set_motor_speed@motor_speed,c
  2945  001D44  0E00               	movlw	0
  2946  001D46  6E17               	movwf	set_motor_speed@speed_modifier+1,c
  2947  001D48  0E00               	movlw	0
  2948  001D4A  6E16               	movwf	set_motor_speed@speed_modifier,c
  2949  001D4C  0E01               	movlw	1
  2950  001D4E  EC51  F00A         	call	_set_motor_speed
  2951  001D52  0012               	return	
  2952  001D54                     __end_of_full_stp:
  2953                           	opt stack 0
  2954                           prodl	equ	0xFF3
  2955                           intcon	equ	0xFF2
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _set_motor_speed *****************
  2961 ;; Defined at:
  2962 ;;		line 187 in file "../sumovore.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  the_motor       1    wreg     enum E4168
  2965 ;;  motor_speed     1   20[COMRAM] enum E4160
  2966 ;;  speed_modifi    2   21[COMRAM] int 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  the_motor       1   25[COMRAM] enum E4168
  2969 ;;  duty_cycle      2   27[COMRAM] int 
  2970 ;;  dir_modifier    1   26[COMRAM] enum E4224
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:        9 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    2
  2987 ;; This function calls:
  2988 ;;		_SetDCPWM1
  2989 ;;		_SetDCPWM2
  2990 ;; This function is called by:
  2991 ;;		_full_stp
  2992 ;;		_pirouette_left
  2993 ;;		_pirouette_right
  2994 ;;		_spin_left
  2995 ;;		_turn_left
  2996 ;;		_straight_fwd
  2997 ;;		_spin_right
  2998 ;;		_turn_right
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text23
  3003  0014A2                     __ptext23:
  3004                           	opt stack 0
  3005  0014A2                     _set_motor_speed:
  3006                           	opt stack 25
  3007                           
  3008                           ;incstack = 0
  3009                           ;set_motor_speed@the_motor stored from wreg
  3010  0014A2  6E1A               	movwf	set_motor_speed@the_motor,c
  3011                           
  3012                           ;sumovore.c: 189: const static int motor_speeds[] = { -800, -725, -650, 0, 650, 725, 800
      +                          };
  3013                           ;sumovore.c: 190: int duty_cycle;
  3014                           ;sumovore.c: 191: enum e_direction {reverse,forward} dir_modifier= forward;
  3015  0014A4  0E01               	movlw	1
  3016  0014A6  6E1B               	movwf	set_motor_speed@dir_modifier,c
  3017                           
  3018                           ;sumovore.c: 193: duty_cycle = motor_speeds[ motor_speed ] + speed_modifier;
  3019  0014A8  5015               	movf	set_motor_speed@motor_speed,w,c
  3020  0014AA  0D02               	mullw	2
  3021  0014AC  0E01               	movlw	low set_motor_speed@motor_speeds
  3022  0014AE  24F3               	addwf	prodl,w,c
  3023  0014B0  6EF6               	movwf	tblptrl,c
  3024  0014B2  0E10               	movlw	high set_motor_speed@motor_speeds
  3025  0014B4  20F4               	addwfc	prodh,w,c
  3026  0014B6  6EF7               	movwf	tblptrh,c
  3027  0014B8                     	if	1	;There are 3 active tblptr bytes
  3028  0014B8  6AF8               	clrf	tblptru,c
  3029  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
  3030  0014BC  22F8               	addwfc	tblptru,f,c
  3031  0014BE                     	endif
  3032  0014BE  0009               	tblrd		*+
  3033  0014C0  CFF5 F018          	movff	tablat,??_set_motor_speed
  3034  0014C4  0009               	tblrd		*+
  3035  0014C6  CFF5 F019          	movff	tablat,??_set_motor_speed+1
  3036  0014CA  5016               	movf	set_motor_speed@speed_modifier,w,c
  3037  0014CC  2418               	addwf	??_set_motor_speed,w,c
  3038  0014CE  6E1C               	movwf	set_motor_speed@duty_cycle,c
  3039  0014D0  5017               	movf	set_motor_speed@speed_modifier+1,w,c
  3040  0014D2  2019               	addwfc	??_set_motor_speed+1,w,c
  3041  0014D4  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  3042                           
  3043                           ;sumovore.c: 194: if ( duty_cycle < 0 )
  3044  0014D6  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  3045  0014D8  0A80               	xorlw	128
  3046  0014DA  6EF3               	movwf	prodl,c
  3047  0014DC  0E80               	movlw	128
  3048  0014DE  5CF3               	subwf	prodl,w,c
  3049  0014E0  0E00               	movlw	0
  3050  0014E2  B4D8               	btfsc	status,2,c
  3051  0014E4  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  3052  0014E6  B0D8               	btfsc	status,0,c
  3053  0014E8  D006               	goto	l1347
  3054                           
  3055                           ;sumovore.c: 195: {
  3056                           ;sumovore.c: 196: dir_modifier = reverse;
  3057  0014EA  0E00               	movlw	0
  3058  0014EC  6E1B               	movwf	set_motor_speed@dir_modifier,c
  3059                           
  3060                           ;sumovore.c: 197: duty_cycle = -1 * duty_cycle;
  3061  0014EE  6C1C               	negf	set_motor_speed@duty_cycle,c
  3062  0014F0  1E1D               	comf	set_motor_speed@duty_cycle+1,f,c
  3063  0014F2  B0D8               	btfsc	status,0,c
  3064  0014F4  2A1D               	incf	set_motor_speed@duty_cycle+1,f,c
  3065  0014F6                     l1347:
  3066                           
  3067                           ;sumovore.c: 198: }
  3068                           ;sumovore.c: 199: if ( duty_cycle > 800 ) duty_cycle = 800;
  3069  0014F6  501D               	movf	set_motor_speed@duty_cycle+1,w,c
  3070  0014F8  0A80               	xorlw	128
  3071  0014FA  0F7D               	addlw	-131
  3072  0014FC  0E21               	movlw	33
  3073  0014FE  B4D8               	btfsc	status,2,c
  3074  001500  5C1C               	subwf	set_motor_speed@duty_cycle,w,c
  3075  001502  A0D8               	btfss	status,0,c
  3076  001504  D004               	goto	l1351
  3077  001506  0E03               	movlw	3
  3078  001508  6E1D               	movwf	set_motor_speed@duty_cycle+1,c
  3079  00150A  0E20               	movlw	32
  3080  00150C  6E1C               	movwf	set_motor_speed@duty_cycle,c
  3081  00150E                     l1351:
  3082                           
  3083                           ;sumovore.c: 201: if (the_motor == left)
  3084  00150E  661A               	tstfsz	set_motor_speed@the_motor,c
  3085  001510  D016               	goto	l1361
  3086                           
  3087                           ;sumovore.c: 202: {
  3088                           ;sumovore.c: 203: SetDCPWM2((unsigned int) duty_cycle );
  3089  001512  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM2@dutycycle
  3090  001516  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM2@dutycycle+1
  3091  00151A  EC92  F00D         	call	_SetDCPWM2	;wreg free
  3092                           
  3093                           ;sumovore.c: 204: if ( dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  3094  00151E  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3095  001520  D002               	goto	l180
  3096  001522  9082               	bcf	3970,0,c	;volatile
  3097  001524  D001               	goto	l1359
  3098  001526                     l180:
  3099                           
  3100                           ;sumovore.c: 205: else PORTCbits.RC0 = 0b1;
  3101  001526  8082               	bsf	3970,0,c	;volatile
  3102  001528                     l1359:
  3103                           
  3104                           ;sumovore.c: 206: PORTEbits.RE1 = !PORTCbits.RC0;
  3105  001528  B082               	btfsc	3970,0,c	;volatile
  3106  00152A  D002               	goto	u70
  3107  00152C  0E01               	movlw	1
  3108  00152E  D001               	goto	u76
  3109  001530                     u70:
  3110  001530  0E00               	movlw	0
  3111  001532                     u76:
  3112  001532  6E18               	movwf	??_set_motor_speed& (0+255),c
  3113  001534  4618               	rlncf	??_set_motor_speed,f,c
  3114  001536  5084               	movf	3972,w,c	;volatile
  3115  001538  1818               	xorwf	??_set_motor_speed,w,c
  3116  00153A  0BFD               	andlw	-3
  3117  00153C  D014               	goto	L4
  3118  00153E                     l1361:
  3119                           
  3120                           ;sumovore.c: 208: else
  3121                           ;sumovore.c: 209: {
  3122                           ;sumovore.c: 210: SetDCPWM1((unsigned int) duty_cycle );
  3123  00153E  C01C  F00F         	movff	set_motor_speed@duty_cycle,SetDCPWM1@dutycycle
  3124  001542  C01D  F010         	movff	set_motor_speed@duty_cycle+1,SetDCPWM1@dutycycle+1
  3125  001546  ECAF  F00D         	call	_SetDCPWM1	;wreg free
  3126                           
  3127                           ;sumovore.c: 211: if ( dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  3128  00154A  661B               	tstfsz	set_motor_speed@dir_modifier,c
  3129  00154C  D002               	goto	l183
  3130  00154E  9A82               	bcf	3970,5,c	;volatile
  3131  001550  D001               	goto	l1367
  3132  001552                     l183:
  3133                           
  3134                           ;sumovore.c: 212: else PORTCbits.RC5 = 0b1;
  3135  001552  8A82               	bsf	3970,5,c	;volatile
  3136  001554                     l1367:
  3137                           
  3138                           ;sumovore.c: 213: PORTEbits.RE0 = !PORTCbits.RC5;
  3139  001554  BA82               	btfsc	3970,5,c	;volatile
  3140  001556  D002               	goto	u90
  3141  001558  0E01               	movlw	1
  3142  00155A  D001               	goto	u96
  3143  00155C                     u90:
  3144  00155C  0E00               	movlw	0
  3145  00155E                     u96:
  3146  00155E  6E18               	movwf	??_set_motor_speed& (0+255),c
  3147  001560  5084               	movf	3972,w,c	;volatile
  3148  001562  1818               	xorwf	??_set_motor_speed,w,c
  3149  001564  0BFE               	andlw	-2
  3150  001566                     L4:
  3151  001566  1818               	xorwf	??_set_motor_speed,w,c
  3152  001568  6E84               	movwf	3972,c	;volatile
  3153  00156A  0012               	return	
  3154  00156C                     __end_of_set_motor_speed:
  3155                           	opt stack 0
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           intcon	equ	0xFF2
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _clr_mem *****************
  3168 ;; Defined at:
  3169 ;;		line 105 in file "../motor_control.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, status,2
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_change_track
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text24
  3198  001F54                     __ptext24:
  3199                           	opt stack 0
  3200  001F54                     _clr_mem:
  3201                           	opt stack 27
  3202                           
  3203                           ;motor_control.c: 106: memory = 0;
  3204                           
  3205                           ;incstack = 0
  3206  001F54  0E00               	movlw	0
  3207  001F56  6E23               	movwf	_memory+1,c
  3208  001F58  0E00               	movlw	0
  3209  001F5A  6E22               	movwf	_memory,c
  3210  001F5C  0012               	return	
  3211  001F5E                     __end_of_clr_mem:
  3212                           	opt stack 0
  3213                           tblptru	equ	0xFF8
  3214                           tblptrh	equ	0xFF7
  3215                           tblptrl	equ	0xFF6
  3216                           tablat	equ	0xFF5
  3217                           prodh	equ	0xFF4
  3218                           prodl	equ	0xFF3
  3219                           intcon	equ	0xFF2
  3220                           postinc0	equ	0xFEE
  3221                           wreg	equ	0xFE8
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _ReadTimer0 *****************
  3225 ;; Defined at:
  3226 ;;		line 16 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0read.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  timer           2   16[COMRAM] struct Timers
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2   14[COMRAM] unsigned int 
  3233 ;; Registers used:
  3234 ;;		None
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:        4 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    1
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_motor_control
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text25
  3255  001EDC                     __ptext25:
  3256                           	opt stack 0
  3257  001EDC                     _ReadTimer0:
  3258                           	opt stack 28
  3259                           
  3260                           ;incstack = 0
  3261  001EDC  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  3262  001EE0  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  3263  001EE4  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  3264  001EE8  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  3265  001EEC  0012               	return	
  3266  001EEE                     __end_of_ReadTimer0:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _lvd_flag_set *****************
  3280 ;; Defined at:
  3281 ;;		line 47 in file "../interrupts.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      unsigned char 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text26
  3310  001F86                     __ptext26:
  3311                           	opt stack 0
  3312  001F86                     _lvd_flag_set:
  3313                           	opt stack 29
  3314                           
  3315                           ;interrupts.c: 49: return lvd_flag;
  3316                           
  3317                           ;incstack = 0
  3318  001F86  502D               	movf	_lvd_flag,w,c
  3319  001F88  0012               	return	
  3320  001F8A                     __end_of_lvd_flag_set:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           prodh	equ	0xFF4
  3327                           prodl	equ	0xFF3
  3328                           intcon	equ	0xFF2
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _initialization *****************
  3334 ;; Defined at:
  3335 ;;		line 65 in file "../sumovore.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    5
  3356 ;; This function calls:
  3357 ;;		_OpenADC
  3358 ;;		_OpenPWM1
  3359 ;;		_OpenPWM2
  3360 ;;		_OpenTimer2
  3361 ;;		_OpenUSART
  3362 ;;		_SetDCPWM1
  3363 ;;		_SetDCPWM2
  3364 ;;		_openLVD
  3365 ;;		_openPORTA
  3366 ;;		_openPORTB
  3367 ;;		_openPORTCforPWM
  3368 ;;		_openPORTCforUSART
  3369 ;;		_openPORTD
  3370 ;;		_openPORTE
  3371 ;;		_reset_codes
  3372 ;;		_set_osc_32MHz
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text27
  3379  001788                     __ptext27:
  3380                           	opt stack 0
  3381  001788                     _initialization:
  3382                           	opt stack 25
  3383                           
  3384                           ;sumovore.c: 67: SeeLine.B = 0;
  3385                           
  3386                           ;incstack = 0
  3387  001788  902C               	bcf	_SeeLine,0,c
  3388  00178A  922C               	bcf	_SeeLine,1,c
  3389  00178C  942C               	bcf	_SeeLine,2,c
  3390  00178E  962C               	bcf	_SeeLine,3,c
  3391  001790  982C               	bcf	_SeeLine,4,c
  3392                           
  3393                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  3394  001792  8ED0               	bsf	4048,7,c	;volatile
  3395                           
  3396                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  3397  001794  9EF2               	bcf	intcon,7,c	;volatile
  3398                           
  3399                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  3400  001796  9CF2               	bcf	intcon,6,c	;volatile
  3401                           
  3402                           ;sumovore.c: 72: set_osc_32MHz();
  3403  001798  ECFE  F00D         	call	_set_osc_32MHz	;wreg free
  3404                           
  3405                           ;sumovore.c: 73: openPORTCforUSART();
  3406  00179C  ECB5  F00F         	call	_openPORTCforUSART	;wreg free
  3407                           
  3408                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111, 16 );
  3409  0017A0  0E00               	movlw	0
  3410  0017A2  6E10               	movwf	OpenUSART@spbrg+1,c
  3411  0017A4  0E10               	movlw	16
  3412  0017A6  6E0F               	movwf	OpenUSART@spbrg,c
  3413  0017A8  0E3C               	movlw	60
  3414  0017AA  EC8A  F00C         	call	_OpenUSART
  3415                           
  3416                           ;sumovore.c: 81: openPORTD();
  3417  0017AE  ECBE  F00F         	call	_openPORTD	;wreg free
  3418                           
  3419                           ;sumovore.c: 82: PORTD = 0;
  3420  0017B2  0E00               	movlw	0
  3421  0017B4  6E83               	movwf	3971,c	;volatile
  3422                           
  3423                           ;sumovore.c: 84: reset_codes();
  3424  0017B6  EC72  F00D         	call	_reset_codes	;wreg free
  3425                           
  3426                           ;sumovore.c: 86: openPORTCforPWM();
  3427  0017BA  EC87  F00F         	call	_openPORTCforPWM	;wreg free
  3428                           
  3429                           ;sumovore.c: 88: openPORTA();
  3430  0017BE  ECBB  F00F         	call	_openPORTA	;wreg free
  3431                           
  3432                           ;sumovore.c: 89: openPORTB();
  3433  0017C2  ECB8  F00F         	call	_openPORTB	;wreg free
  3434                           
  3435                           ;sumovore.c: 90: openPORTE();
  3436  0017C6  ECB2  F00F         	call	_openPORTE	;wreg free
  3437                           
  3438                           ;sumovore.c: 93: openLVD();
  3439  0017CA  EC31  F00F         	call	_openLVD	;wreg free
  3440                           
  3441                           ;sumovore.c: 97: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  3442  0017CE  0E0C               	movlw	12
  3443  0017D0  6E0F               	movwf	OpenADC@config2,c
  3444  0017D2  0E0A               	movlw	10
  3445  0017D4  6E10               	movwf	OpenADC@portconfig,c
  3446  0017D6  0EA7               	movlw	167
  3447  0017D8  ECED  F00C         	call	_OpenADC
  3448                           
  3449                           ;sumovore.c: 100: PORTCbits.RC5 = 0b0;
  3450  0017DC  9A82               	bcf	3970,5,c	;volatile
  3451                           
  3452                           ;sumovore.c: 101: PORTEbits.RE0 = 0b0;
  3453  0017DE  9084               	bcf	3972,0,c	;volatile
  3454                           
  3455                           ;sumovore.c: 102: PORTCbits.RC0 = 0b0;
  3456  0017E0  9082               	bcf	3970,0,c	;volatile
  3457                           
  3458                           ;sumovore.c: 103: PORTEbits.RE1 = 0b0;
  3459  0017E2  9284               	bcf	3972,1,c	;volatile
  3460                           
  3461                           ;sumovore.c: 108: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  3462  0017E4  0E06               	movlw	6
  3463  0017E6  EC17  F00F         	call	_OpenTimer2
  3464                           
  3465                           ;sumovore.c: 109: OpenPWM1(199);
  3466  0017EA  0EC7               	movlw	199
  3467  0017EC  EC77  F00F         	call	_OpenPWM1
  3468                           
  3469                           ;sumovore.c: 111: OpenPWM2(199);
  3470  0017F0  0EC7               	movlw	199
  3471  0017F2  ECCC  F00D         	call	_OpenPWM2
  3472                           
  3473                           ;sumovore.c: 112: SetDCPWM1(0);
  3474  0017F6  0E00               	movlw	0
  3475  0017F8  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  3476  0017FA  0E00               	movlw	0
  3477  0017FC  6E0F               	movwf	SetDCPWM1@dutycycle,c
  3478  0017FE  ECAF  F00D         	call	_SetDCPWM1	;wreg free
  3479                           
  3480                           ;sumovore.c: 115: SetDCPWM2(0);
  3481  001802  0E00               	movlw	0
  3482  001804  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  3483  001806  0E00               	movlw	0
  3484  001808  6E0F               	movwf	SetDCPWM2@dutycycle,c
  3485  00180A  EC92  F00D         	call	_SetDCPWM2	;wreg free
  3486                           
  3487                           ;sumovore.c: 116: threshold = 120u;
  3488  00180E  0E00               	movlw	0
  3489  001810  6E29               	movwf	_threshold+1,c
  3490  001812  0E78               	movlw	120
  3491  001814  6E28               	movwf	_threshold,c
  3492  001816  0012               	return	
  3493  001818                     __end_of_initialization:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _set_osc_32MHz *****************
  3507 ;; Defined at:
  3508 ;;		line 18 in file "../../Common/osc.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  i               2   14[COMRAM] int 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        2 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_initialization
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text28
  3537  001BFC                     __ptext28:
  3538                           	opt stack 0
  3539  001BFC                     _set_osc_32MHz:
  3540                           	opt stack 28
  3541                           
  3542                           ;osc.c: 20: int i;
  3543                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  3544                           
  3545                           ;incstack = 0
  3546  001BFC  8CD3               	bsf	4051,6,c	;volatile
  3547                           
  3548                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  3549  001BFE  8AD3               	bsf	4051,5,c	;volatile
  3550                           
  3551                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  3552  001C00  88D3               	bsf	4051,4,c	;volatile
  3553                           
  3554                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  3555  001C02  8C9B               	bsf	3995,6,c	;volatile
  3556                           
  3557                           ;osc.c: 28: for(i=0;i<500;i++);
  3558  001C04  0E00               	movlw	0
  3559  001C06  6E10               	movwf	set_osc_32MHz@i+1,c
  3560  001C08  0E00               	movlw	0
  3561  001C0A  6E0F               	movwf	set_osc_32MHz@i,c
  3562  001C0C  5010               	movf	set_osc_32MHz@i+1,w,c
  3563  001C0E  0A80               	xorlw	128
  3564  001C10  0F7F               	addlw	-129
  3565  001C12  0EF4               	movlw	244
  3566  001C14  B4D8               	btfsc	status,2,c
  3567  001C16  5C0F               	subwf	set_osc_32MHz@i,w,c
  3568  001C18  B0D8               	btfsc	status,0,c
  3569  001C1A  D003               	goto	l457
  3570  001C1C  4A0F               	infsnz	set_osc_32MHz@i,f,c
  3571  001C1E  2A10               	incf	set_osc_32MHz@i+1,f,c
  3572  001C20  D7F5               	goto	L5
  3573  001C22                     l457:
  3574  001C22  0012               	return	
  3575  001C24                     __end_of_set_osc_32MHz:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           status	equ	0xFD8
  3587                           
  3588 ;; *************** function _reset_codes *****************
  3589 ;; Defined at:
  3590 ;;		line 280 in file "../sumovore.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;		None               void
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    4
  3611 ;; This function calls:
  3612 ;;		_BORtask
  3613 ;;		_PORtask
  3614 ;;		_RESETtask
  3615 ;;		_STKFULtask
  3616 ;;		_WDTtask
  3617 ;;		_isBOR
  3618 ;;		_isPOR
  3619 ;;		_isWDTTO
  3620 ;; This function is called by:
  3621 ;;		_initialization
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text29
  3626  001AE4                     __ptext29:
  3627                           	opt stack 0
  3628  001AE4                     _reset_codes:
  3629                           	opt stack 25
  3630                           
  3631                           ;sumovore.c: 282: if( isPOR() ) PORtask();
  3632                           
  3633                           ;incstack = 0
  3634  001AE4  EC52  F00F         	call	_isPOR	;wreg free
  3635  001AE8  0900               	iorlw	0
  3636  001AEA  B4D8               	btfsc	status,2,c
  3637  001AEC  D003               	goto	l1725
  3638  001AEE  EC6F  F00B         	call	_PORtask	;wreg free
  3639  001AF2  D017               	goto	l211
  3640  001AF4                     l1725:
  3641                           
  3642                           ;sumovore.c: 285: else if (isBOR() ) BORtask();
  3643  001AF4  EC80  F00F         	call	_isBOR	;wreg free
  3644  001AF8  0900               	iorlw	0
  3645  001AFA  B4D8               	btfsc	status,2,c
  3646  001AFC  D003               	goto	l1729
  3647  001AFE  ECBC  F00E         	call	_BORtask	;wreg free
  3648  001B02  D00F               	goto	l211
  3649  001B04                     l1729:
  3650                           
  3651                           ;sumovore.c: 287: else if(isWDTTO() ) WDTtask();
  3652  001B04  EC48  F00F         	call	_isWDTTO	;wreg free
  3653  001B08  0900               	iorlw	0
  3654  001B0A  B4D8               	btfsc	status,2,c
  3655  001B0C  D003               	goto	l207
  3656  001B0E  ECFB  F00E         	call	_WDTtask	;wreg free
  3657  001B12  D007               	goto	l211
  3658  001B14                     l207:
  3659                           
  3660                           ;sumovore.c: 291: else if(STKPTRbits.STKFUL) STKFULtask();
  3661  001B14  AEFC               	btfss	stkptr,7,c	;volatile
  3662  001B16  D003               	goto	l1735
  3663  001B18  ECEC  F00E         	call	_STKFULtask	;wreg free
  3664  001B1C  D002               	goto	l211
  3665  001B1E                     l1735:
  3666                           
  3667                           ;sumovore.c: 295: else RESETtask();
  3668  001B1E  EC09  F00F         	call	_RESETtask	;wreg free
  3669  001B22                     l211:
  3670  001B22  0012               	return	
  3671  001B24                     __end_of_reset_codes:
  3672                           	opt stack 0
  3673                           stkptr	equ	0xFFC
  3674                           tblptru	equ	0xFF8
  3675                           tblptrh	equ	0xFF7
  3676                           tblptrl	equ	0xFF6
  3677                           tablat	equ	0xFF5
  3678                           prodh	equ	0xFF4
  3679                           prodl	equ	0xFF3
  3680                           intcon	equ	0xFF2
  3681                           postinc0	equ	0xFEE
  3682                           wreg	equ	0xFE8
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function _isWDTTO *****************
  3686 ;; Defined at:
  3687 ;;		line 15 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/iswdtto.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      unsigned char 
  3694 ;; Registers used:
  3695 ;;		wreg
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;Total ram usage:        0 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_reset_codes
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text30
  3716  001E90                     __ptext30:
  3717                           	opt stack 0
  3718  001E90                     _isWDTTO:
  3719                           	opt stack 27
  3720                           
  3721                           ;incstack = 0
  3722  001E90  B2D0               	btfsc	4048,1,c	;volatile
  3723  001E92  A4D0               	btfss	4048,2,c	;volatile
  3724  001E94  D005               	goto	l1555
  3725  001E96  B0D0               	btfsc	4048,0,c	;volatile
  3726  001E98  B6D0               	btfsc	4048,3,c	;volatile
  3727  001E9A  D002               	goto	l1555
  3728  001E9C  0E01               	movlw	1
  3729  001E9E  D001               	goto	l732
  3730  001EA0                     l1555:
  3731  001EA0  0E00               	movlw	0
  3732  001EA2                     l732:
  3733  001EA2  0012               	return	
  3734  001EA4                     __end_of_isWDTTO:
  3735                           	opt stack 0
  3736                           stkptr	equ	0xFFC
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _isPOR *****************
  3749 ;; Defined at:
  3750 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/ispor.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_reset_codes
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text31
  3779  001EA4                     __ptext31:
  3780                           	opt stack 0
  3781  001EA4                     _isPOR:
  3782                           	opt stack 27
  3783                           
  3784                           ;incstack = 0
  3785  001EA4  A2D0               	btfss	4048,1,c	;volatile
  3786  001EA6  A4D0               	btfss	4048,2,c	;volatile
  3787  001EA8  D005               	goto	l1463
  3788  001EAA  A0D0               	btfss	4048,0,c	;volatile
  3789  001EAC  A6D0               	btfss	4048,3,c	;volatile
  3790  001EAE  D002               	goto	l1463
  3791  001EB0  0E01               	movlw	1
  3792  001EB2  D001               	goto	l723
  3793  001EB4                     l1463:
  3794  001EB4  0E00               	movlw	0
  3795  001EB6                     l723:
  3796  001EB6  0012               	return	
  3797  001EB8                     __end_of_isPOR:
  3798                           	opt stack 0
  3799                           stkptr	equ	0xFFC
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function _isBOR *****************
  3812 ;; Defined at:
  3813 ;;		line 12 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/isbor.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      unsigned char 
  3820 ;; Registers used:
  3821 ;;		wreg
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_reset_codes
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text32
  3842  001F00                     __ptext32:
  3843                           	opt stack 0
  3844  001F00                     _isBOR:
  3845                           	opt stack 27
  3846                           
  3847                           ;incstack = 0
  3848  001F00  A0D0               	btfss	4048,0,c	;volatile
  3849  001F02  A2D0               	btfss	4048,1,c	;volatile
  3850  001F04  D002               	goto	l1511
  3851  001F06  0E01               	movlw	1
  3852  001F08  D001               	goto	l714
  3853  001F0A                     l1511:
  3854  001F0A  0E00               	movlw	0
  3855  001F0C                     l714:
  3856  001F0C  0012               	return	
  3857  001F0E                     __end_of_isBOR:
  3858                           	opt stack 0
  3859                           stkptr	equ	0xFFC
  3860                           tblptru	equ	0xFF8
  3861                           tblptrh	equ	0xFF7
  3862                           tblptrl	equ	0xFF6
  3863                           tablat	equ	0xFF5
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           intcon	equ	0xFF2
  3867                           postinc0	equ	0xFEE
  3868                           wreg	equ	0xFE8
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function _WDTtask *****************
  3872 ;; Defined at:
  3873 ;;		line 368 in file "../sumovore.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;		None               void
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    3
  3894 ;; This function calls:
  3895 ;;		_gtrap
  3896 ;;		_printf
  3897 ;; This function is called by:
  3898 ;;		_reset_codes
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text33
  3903  001DF6                     __ptext33:
  3904                           	opt stack 0
  3905  001DF6                     _WDTtask:
  3906                           	opt stack 25
  3907                           
  3908                           ;sumovore.c: 370: printf("<WDT TO>");
  3909                           
  3910                           ;incstack = 0
  3911  001DF6  0E10               	movlw	high STR_4
  3912  001DF8  6E11               	movwf	printf@f+1,c
  3913  001DFA  0E62               	movlw	low STR_4
  3914  001DFC  6E10               	movwf	printf@f,c
  3915  001DFE  ECE9  F00D         	call	_printf	;wreg free
  3916                           
  3917                           ;sumovore.c: 371: PORTDbits.RD0=!1;
  3918  001E02  9083               	bcf	3971,0,c	;volatile
  3919                           
  3920                           ;sumovore.c: 372: PORTDbits.RD1=!0;
  3921  001E04  8283               	bsf	3971,1,c	;volatile
  3922                           
  3923                           ;sumovore.c: 373: PORTDbits.RD2=!1;
  3924  001E06  9483               	bcf	3971,2,c	;volatile
  3925                           
  3926                           ;sumovore.c: 374: PORTDbits.RD3=!0;
  3927  001E08  8683               	bsf	3971,3,c	;volatile
  3928                           
  3929                           ;sumovore.c: 375: PORTDbits.RD4=!0;
  3930  001E0A  8883               	bsf	3971,4,c	;volatile
  3931                           
  3932                           ;sumovore.c: 376: gtrap();
  3933  001E0C  EC1C  F00D         	call	_gtrap	;wreg free
  3934  001E10  0012               	return	
  3935  001E12                     __end_of_WDTtask:
  3936                           	opt stack 0
  3937                           stkptr	equ	0xFFC
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon	equ	0xFF2
  3945                           postinc0	equ	0xFEE
  3946                           wreg	equ	0xFE8
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function _STKFULtask *****************
  3950 ;; Defined at:
  3951 ;;		line 387 in file "../sumovore.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;		None               void
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    3
  3972 ;; This function calls:
  3973 ;;		_gtrap
  3974 ;;		_printf
  3975 ;; This function is called by:
  3976 ;;		_reset_codes
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text34
  3981  001DD8                     __ptext34:
  3982                           	opt stack 0
  3983  001DD8                     _STKFULtask:
  3984                           	opt stack 25
  3985                           
  3986                           ;sumovore.c: 390: STKPTRbits.STKFUL = 0;
  3987                           
  3988                           ;incstack = 0
  3989  001DD8  9EFC               	bcf	stkptr,7,c	;volatile
  3990                           
  3991                           ;sumovore.c: 391: printf("<STKFUL>");
  3992  001DDA  0E10               	movlw	high STR_5
  3993  001DDC  6E11               	movwf	printf@f+1,c
  3994  001DDE  0E59               	movlw	low STR_5
  3995  001DE0  6E10               	movwf	printf@f,c
  3996  001DE2  ECE9  F00D         	call	_printf	;wreg free
  3997                           
  3998                           ;sumovore.c: 392: PORTDbits.RD0=!1;
  3999  001DE6  9083               	bcf	3971,0,c	;volatile
  4000                           
  4001                           ;sumovore.c: 393: PORTDbits.RD1=!0;
  4002  001DE8  8283               	bsf	3971,1,c	;volatile
  4003                           
  4004                           ;sumovore.c: 394: PORTDbits.RD2=!1;
  4005  001DEA  9483               	bcf	3971,2,c	;volatile
  4006                           
  4007                           ;sumovore.c: 395: PORTDbits.RD3=!0;
  4008  001DEC  8683               	bsf	3971,3,c	;volatile
  4009                           
  4010                           ;sumovore.c: 396: PORTDbits.RD4=!1;
  4011  001DEE  9883               	bcf	3971,4,c	;volatile
  4012                           
  4013                           ;sumovore.c: 397: gtrap();
  4014  001DF0  EC1C  F00D         	call	_gtrap	;wreg free
  4015  001DF4  0012               	return	
  4016  001DF6                     __end_of_STKFULtask:
  4017                           	opt stack 0
  4018                           stkptr	equ	0xFFC
  4019                           tblptru	equ	0xFF8
  4020                           tblptrh	equ	0xFF7
  4021                           tblptrl	equ	0xFF6
  4022                           tablat	equ	0xFF5
  4023                           prodh	equ	0xFF4
  4024                           prodl	equ	0xFF3
  4025                           intcon	equ	0xFF2
  4026                           postinc0	equ	0xFEE
  4027                           wreg	equ	0xFE8
  4028                           status	equ	0xFD8
  4029                           
  4030 ;; *************** function _RESETtask *****************
  4031 ;; Defined at:
  4032 ;;		line 403 in file "../sumovore.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;		None               void
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    3
  4053 ;; This function calls:
  4054 ;;		_gtrap
  4055 ;;		_printf
  4056 ;; This function is called by:
  4057 ;;		_reset_codes
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text35
  4062  001E12                     __ptext35:
  4063                           	opt stack 0
  4064  001E12                     _RESETtask:
  4065                           	opt stack 25
  4066                           
  4067                           ;sumovore.c: 406: printf(" <reset> ");
  4068                           
  4069                           ;incstack = 0
  4070  001E12  0E10               	movlw	high STR_6
  4071  001E14  6E11               	movwf	printf@f+1,c
  4072  001E16  0E4F               	movlw	low STR_6
  4073  001E18  6E10               	movwf	printf@f,c
  4074  001E1A  ECE9  F00D         	call	_printf	;wreg free
  4075                           
  4076                           ;sumovore.c: 407: PORTDbits.RD0=!1;
  4077  001E1E  9083               	bcf	3971,0,c	;volatile
  4078                           
  4079                           ;sumovore.c: 408: PORTDbits.RD1=!0;
  4080  001E20  8283               	bsf	3971,1,c	;volatile
  4081                           
  4082                           ;sumovore.c: 409: PORTDbits.RD2=!1;
  4083  001E22  9483               	bcf	3971,2,c	;volatile
  4084                           
  4085                           ;sumovore.c: 410: PORTDbits.RD3=!1;
  4086  001E24  9683               	bcf	3971,3,c	;volatile
  4087                           
  4088                           ;sumovore.c: 411: PORTDbits.RD4=!1;
  4089  001E26  9883               	bcf	3971,4,c	;volatile
  4090                           
  4091                           ;sumovore.c: 412: gtrap();
  4092  001E28  EC1C  F00D         	call	_gtrap	;wreg free
  4093  001E2C  0012               	return	
  4094  001E2E                     __end_of_RESETtask:
  4095                           	opt stack 0
  4096                           stkptr	equ	0xFFC
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           prodh	equ	0xFF4
  4102                           prodl	equ	0xFF3
  4103                           intcon	equ	0xFF2
  4104                           postinc0	equ	0xFEE
  4105                           wreg	equ	0xFE8
  4106                           status	equ	0xFD8
  4107                           
  4108 ;; *************** function _PORtask *****************
  4109 ;; Defined at:
  4110 ;;		line 305 in file "../sumovore.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  count2          4   24[COMRAM] unsigned long 
  4115 ;;  count1          4   20[COMRAM] unsigned long 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;		None               void
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;Total ram usage:        8 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    3
  4132 ;; This function calls:
  4133 ;;		_StatusReset
  4134 ;;		_printf
  4135 ;; This function is called by:
  4136 ;;		_reset_codes
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text36
  4141  0016DE                     __ptext36:
  4142                           	opt stack 0
  4143  0016DE                     _PORtask:
  4144                           	opt stack 25
  4145                           
  4146                           ;sumovore.c: 307: unsigned long count1=0, count2=0;
  4147                           
  4148                           ;incstack = 0
  4149  0016DE  0E00               	movlw	0
  4150  0016E0  6E15               	movwf	PORtask@count1,c
  4151  0016E2  0E00               	movlw	0
  4152  0016E4  6E16               	movwf	PORtask@count1+1,c
  4153  0016E6  0E00               	movlw	0
  4154  0016E8  6E17               	movwf	PORtask@count1+2,c
  4155  0016EA  0E00               	movlw	0
  4156  0016EC  6E18               	movwf	PORtask@count1+3,c
  4157  0016EE  0E00               	movlw	0
  4158  0016F0  6E19               	movwf	PORtask@count2,c
  4159  0016F2  0E00               	movlw	0
  4160  0016F4  6E1A               	movwf	PORtask@count2+1,c
  4161  0016F6  0E00               	movlw	0
  4162  0016F8  6E1B               	movwf	PORtask@count2+2,c
  4163  0016FA  0E00               	movlw	0
  4164  0016FC  6E1C               	movwf	PORtask@count2+3,c
  4165                           
  4166                           ;sumovore.c: 308: StatusReset();
  4167  0016FE  ECAF  F00F         	call	_StatusReset	;wreg free
  4168                           
  4169                           ;sumovore.c: 310: printf("<POR>");
  4170  001702  0E10               	movlw	high STR_2
  4171  001704  6E11               	movwf	printf@f+1,c
  4172  001706  0E78               	movlw	low STR_2
  4173  001708  6E10               	movwf	printf@f,c
  4174  00170A  ECE9  F00D         	call	_printf	;wreg free
  4175                           
  4176                           ;sumovore.c: 311: PORTDbits.RD0=!1;
  4177  00170E  9083               	bcf	3971,0,c	;volatile
  4178                           
  4179                           ;sumovore.c: 312: PORTDbits.RD1=!0;
  4180  001710  8283               	bsf	3971,1,c	;volatile
  4181                           
  4182                           ;sumovore.c: 313: PORTDbits.RD2=!0;
  4183  001712  8483               	bsf	3971,2,c	;volatile
  4184                           
  4185                           ;sumovore.c: 314: PORTDbits.RD3=!0;
  4186  001714  8683               	bsf	3971,3,c	;volatile
  4187                           
  4188                           ;sumovore.c: 315: PORTDbits.RD4=!0;
  4189  001716  8883               	bsf	3971,4,c	;volatile
  4190                           
  4191                           ;sumovore.c: 316: while(count1<10u)
  4192  001718  D02C               	goto	l214
  4193  00171A                     l215:
  4194  00171A  0004               	clrwdt		;# 
  4195                           
  4196                           ;sumovore.c: 319: if (count2==30000u)
  4197  00171C  501A               	movf	PORtask@count2+1,w,c
  4198  00171E  0A75               	xorlw	117
  4199  001720  0E30               	movlw	48
  4200  001722  B4D8               	btfsc	status,2,c
  4201  001724  1819               	xorwf	PORtask@count2,w,c
  4202  001726  101B               	iorwf	PORtask@count2+2,w,c
  4203  001728  101C               	iorwf	PORtask@count2+3,w,c
  4204  00172A  A4D8               	btfss	status,2,c
  4205  00172C  D011               	goto	l1493
  4206                           
  4207                           ;sumovore.c: 320: {
  4208                           ;sumovore.c: 321: count2=0;
  4209  00172E  0E00               	movlw	0
  4210  001730  6E19               	movwf	PORtask@count2,c
  4211  001732  0E00               	movlw	0
  4212  001734  6E1A               	movwf	PORtask@count2+1,c
  4213  001736  0E00               	movlw	0
  4214  001738  6E1B               	movwf	PORtask@count2+2,c
  4215  00173A  0E00               	movlw	0
  4216  00173C  6E1C               	movwf	PORtask@count2+3,c
  4217                           
  4218                           ;sumovore.c: 322: count1++;
  4219  00173E  0E01               	movlw	1
  4220  001740  2615               	addwf	PORtask@count1,f,c
  4221  001742  0E00               	movlw	0
  4222  001744  2216               	addwfc	PORtask@count1+1,f,c
  4223  001746  2217               	addwfc	PORtask@count1+2,f,c
  4224  001748  2218               	addwfc	PORtask@count1+3,f,c
  4225                           
  4226                           ;sumovore.c: 323: PORTDbits.RD0=!1;
  4227  00174A  9083               	bcf	3971,0,c	;volatile
  4228                           
  4229                           ;sumovore.c: 324: PORTDbits.RD1=!0;
  4230  00174C  8283               	bsf	3971,1,c	;volatile
  4231                           
  4232                           ;sumovore.c: 325: }
  4233  00174E  D00B               	goto	l1497
  4234  001750                     l1493:
  4235                           
  4236                           ;sumovore.c: 326: else if (count2==15000u)
  4237  001750  501A               	movf	PORtask@count2+1,w,c
  4238  001752  0A3A               	xorlw	58
  4239  001754  0E98               	movlw	152
  4240  001756  B4D8               	btfsc	status,2,c
  4241  001758  1819               	xorwf	PORtask@count2,w,c
  4242  00175A  101B               	iorwf	PORtask@count2+2,w,c
  4243  00175C  101C               	iorwf	PORtask@count2+3,w,c
  4244  00175E  A4D8               	btfss	status,2,c
  4245  001760  D002               	goto	l1497
  4246                           
  4247                           ;sumovore.c: 327: {
  4248                           ;sumovore.c: 328: PORTDbits.RD0=!0;
  4249  001762  8083               	bsf	3971,0,c	;volatile
  4250                           
  4251                           ;sumovore.c: 329: PORTDbits.RD1=!1;
  4252  001764  9283               	bcf	3971,1,c	;volatile
  4253  001766                     l1497:
  4254                           
  4255                           ;sumovore.c: 330: }
  4256                           ;sumovore.c: 331: count2++;
  4257  001766  0E01               	movlw	1
  4258  001768  2619               	addwf	PORtask@count2,f,c
  4259  00176A  0E00               	movlw	0
  4260  00176C  221A               	addwfc	PORtask@count2+1,f,c
  4261  00176E  221B               	addwfc	PORtask@count2+2,f,c
  4262  001770  221C               	addwfc	PORtask@count2+3,f,c
  4263  001772                     l214:
  4264  001772  0E0A               	movlw	10
  4265  001774  5C15               	subwf	PORtask@count1,w,c
  4266  001776  0E00               	movlw	0
  4267  001778  5816               	subwfb	PORtask@count1+1,w,c
  4268  00177A  0E00               	movlw	0
  4269  00177C  5817               	subwfb	PORtask@count1+2,w,c
  4270  00177E  0E00               	movlw	0
  4271  001780  5818               	subwfb	PORtask@count1+3,w,c
  4272  001782  B0D8               	btfsc	status,0,c
  4273  001784  0012               	return	
  4274  001786  D7C9               	goto	l215
  4275  001788                     __end_of_PORtask:
  4276                           	opt stack 0
  4277                           stkptr	equ	0xFFC
  4278                           tblptru	equ	0xFF8
  4279                           tblptrh	equ	0xFF7
  4280                           tblptrl	equ	0xFF6
  4281                           tablat	equ	0xFF5
  4282                           prodh	equ	0xFF4
  4283                           prodl	equ	0xFF3
  4284                           intcon	equ	0xFF2
  4285                           postinc0	equ	0xFEE
  4286                           wreg	equ	0xFE8
  4287                           status	equ	0xFD8
  4288                           
  4289 ;; *************** function _BORtask *****************
  4290 ;; Defined at:
  4291 ;;		line 347 in file "../sumovore.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;		None               void
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;Total ram usage:        0 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    3
  4312 ;; This function calls:
  4313 ;;		_StatusReset
  4314 ;;		_gtrap
  4315 ;;		_printf
  4316 ;; This function is called by:
  4317 ;;		_reset_codes
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text37
  4322  001D78                     __ptext37:
  4323                           	opt stack 0
  4324  001D78                     _BORtask:
  4325                           	opt stack 25
  4326                           
  4327                           ;sumovore.c: 349: StatusReset();
  4328                           
  4329                           ;incstack = 0
  4330  001D78  ECAF  F00F         	call	_StatusReset	;wreg free
  4331                           
  4332                           ;sumovore.c: 351: printf("<BOR>");
  4333  001D7C  0E10               	movlw	high STR_3
  4334  001D7E  6E11               	movwf	printf@f+1,c
  4335  001D80  0E72               	movlw	low STR_3
  4336  001D82  6E10               	movwf	printf@f,c
  4337  001D84  ECE9  F00D         	call	_printf	;wreg free
  4338                           
  4339                           ;sumovore.c: 352: PORTDbits.RD0=!0;
  4340  001D88  8083               	bsf	3971,0,c	;volatile
  4341                           
  4342                           ;sumovore.c: 353: PORTDbits.RD1=!0;
  4343  001D8A  8283               	bsf	3971,1,c	;volatile
  4344                           
  4345                           ;sumovore.c: 354: PORTDbits.RD2=!0;
  4346  001D8C  8483               	bsf	3971,2,c	;volatile
  4347                           
  4348                           ;sumovore.c: 355: PORTDbits.RD3=!0;
  4349  001D8E  8683               	bsf	3971,3,c	;volatile
  4350                           
  4351                           ;sumovore.c: 356: PORTDbits.RD4=!1;
  4352  001D90  9883               	bcf	3971,4,c	;volatile
  4353                           
  4354                           ;sumovore.c: 357: gtrap();
  4355  001D92  EC1C  F00D         	call	_gtrap	;wreg free
  4356  001D96  0012               	return	
  4357  001D98                     __end_of_BORtask:
  4358                           	opt stack 0
  4359                           stkptr	equ	0xFFC
  4360                           tblptru	equ	0xFF8
  4361                           tblptrh	equ	0xFF7
  4362                           tblptrl	equ	0xFF6
  4363                           tablat	equ	0xFF5
  4364                           prodh	equ	0xFF4
  4365                           prodl	equ	0xFF3
  4366                           intcon	equ	0xFF2
  4367                           postinc0	equ	0xFEE
  4368                           wreg	equ	0xFE8
  4369                           status	equ	0xFD8
  4370                           
  4371 ;; *************** function _StatusReset *****************
  4372 ;; Defined at:
  4373 ;;		line 10 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/reset/statrst.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;		None               void
  4380 ;; Registers used:
  4381 ;;		None
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_PORtask
  4398 ;;		_BORtask
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text38
  4403  001F5E                     __ptext38:
  4404                           	opt stack 0
  4405  001F5E                     _StatusReset:
  4406                           	opt stack 26
  4407                           
  4408                           ;incstack = 0
  4409  001F5E  82D0               	bsf	4048,1,c	;volatile
  4410  001F60  80D0               	bsf	4048,0,c	;volatile
  4411  001F62  0012               	return	
  4412  001F64                     __end_of_StatusReset:
  4413                           	opt stack 0
  4414                           stkptr	equ	0xFFC
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon	equ	0xFF2
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _openPORTE *****************
  4427 ;; Defined at:
  4428 ;;		line 177 in file "../sumovore.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, status,2
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_initialization
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text39
  4457  001F64                     __ptext39:
  4458                           	opt stack 0
  4459  001F64                     _openPORTE:
  4460                           	opt stack 28
  4461                           
  4462                           ;sumovore.c: 179: TRISE = 0b000;
  4463                           
  4464                           ;incstack = 0
  4465  001F64  0E00               	movlw	0
  4466  001F66  6E96               	movwf	3990,c	;volatile
  4467  001F68  0012               	return	
  4468  001F6A                     __end_of_openPORTE:
  4469                           	opt stack 0
  4470                           stkptr	equ	0xFFC
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           status	equ	0xFD8
  4481                           
  4482 ;; *************** function _openPORTCforUSART *****************
  4483 ;; Defined at:
  4484 ;;		line 123 in file "../sumovore.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;		None               void
  4491 ;; Registers used:
  4492 ;;		None
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    1
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_initialization
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text40
  4513  001F6A                     __ptext40:
  4514                           	opt stack 0
  4515  001F6A                     _openPORTCforUSART:
  4516                           	opt stack 28
  4517                           
  4518                           ;sumovore.c: 125: TRISCbits.TRISC6 = 0;
  4519                           
  4520                           ;incstack = 0
  4521  001F6A  9C94               	bcf	3988,6,c	;volatile
  4522                           
  4523                           ;sumovore.c: 126: TRISCbits.TRISC7 = 1;
  4524  001F6C  8E94               	bsf	3988,7,c	;volatile
  4525  001F6E  0012               	return	
  4526  001F70                     __end_of_openPORTCforUSART:
  4527                           	opt stack 0
  4528                           stkptr	equ	0xFFC
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon	equ	0xFF2
  4536                           postinc0	equ	0xFEE
  4537                           wreg	equ	0xFE8
  4538                           status	equ	0xFD8
  4539                           
  4540 ;; *************** function _openPORTCforPWM *****************
  4541 ;; Defined at:
  4542 ;;		line 132 in file "../sumovore.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		None
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_initialization
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text41
  4571  001F0E                     __ptext41:
  4572                           	opt stack 0
  4573  001F0E                     _openPORTCforPWM:
  4574                           	opt stack 28
  4575                           
  4576                           ;sumovore.c: 134: TRISCbits.TRISC0 = 0;
  4577                           
  4578                           ;incstack = 0
  4579  001F0E  9094               	bcf	3988,0,c	;volatile
  4580                           
  4581                           ;sumovore.c: 135: TRISCbits.TRISC1 = 0;
  4582  001F10  9294               	bcf	3988,1,c	;volatile
  4583                           
  4584                           ;sumovore.c: 136: TRISCbits.TRISC2 = 0;
  4585  001F12  9494               	bcf	3988,2,c	;volatile
  4586                           
  4587                           ;sumovore.c: 137: TRISCbits.TRISC3 = 0;
  4588  001F14  9694               	bcf	3988,3,c	;volatile
  4589                           
  4590                           ;sumovore.c: 138: TRISCbits.TRISC4 = 0;
  4591  001F16  9894               	bcf	3988,4,c	;volatile
  4592                           
  4593                           ;sumovore.c: 139: TRISCbits.TRISC5 = 0;
  4594  001F18  9A94               	bcf	3988,5,c	;volatile
  4595  001F1A  0012               	return	
  4596  001F1C                     __end_of_openPORTCforPWM:
  4597                           	opt stack 0
  4598                           stkptr	equ	0xFFC
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _openPORTB *****************
  4611 ;; Defined at:
  4612 ;;		line 157 in file "../sumovore.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, status,2
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_initialization
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text42
  4641  001F70                     __ptext42:
  4642                           	opt stack 0
  4643  001F70                     _openPORTB:
  4644                           	opt stack 28
  4645                           
  4646                           ;sumovore.c: 159: TRISB = 0B11000000;
  4647                           
  4648                           ;incstack = 0
  4649  001F70  0EC0               	movlw	192
  4650  001F72  6E93               	movwf	3987,c	;volatile
  4651  001F74  0012               	return	
  4652  001F76                     __end_of_openPORTB:
  4653                           	opt stack 0
  4654                           stkptr	equ	0xFFC
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           prodh	equ	0xFF4
  4660                           prodl	equ	0xFF3
  4661                           intcon	equ	0xFF2
  4662                           postinc0	equ	0xFEE
  4663                           wreg	equ	0xFE8
  4664                           status	equ	0xFD8
  4665                           
  4666 ;; *************** function _openPORTA *****************
  4667 ;; Defined at:
  4668 ;;		line 146 in file "../sumovore.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;		None               void
  4675 ;; Registers used:
  4676 ;;		wreg, status,2
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_initialization
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text43
  4697  001F76                     __ptext43:
  4698                           	opt stack 0
  4699  001F76                     _openPORTA:
  4700                           	opt stack 28
  4701                           
  4702                           ;sumovore.c: 148: TRISA = 0B11101111;
  4703                           
  4704                           ;incstack = 0
  4705  001F76  0EEF               	movlw	239
  4706  001F78  6E92               	movwf	3986,c	;volatile
  4707  001F7A  0012               	return	
  4708  001F7C                     __end_of_openPORTA:
  4709                           	opt stack 0
  4710                           stkptr	equ	0xFFC
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           status	equ	0xFD8
  4721                           
  4722 ;; *************** function _openLVD *****************
  4723 ;; Defined at:
  4724 ;;		line 426 in file "../sumovore.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;		None               void
  4731 ;; Registers used:
  4732 ;;		None
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_initialization
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text44
  4753  001E62                     __ptext44:
  4754                           	opt stack 0
  4755  001E62                     _openLVD:
  4756                           	opt stack 28
  4757                           
  4758                           ;sumovore.c: 428: RCONbits.IPEN = 1;
  4759                           
  4760                           ;incstack = 0
  4761  001E62  8ED0               	bsf	4048,7,c	;volatile
  4762                           
  4763                           ;sumovore.c: 429: HLVDCONbits.HLVDEN = 1;
  4764  001E64  88D2               	bsf	4050,4,c	;volatile
  4765                           
  4766                           ;sumovore.c: 431: IPR2bits.HLVDIP = 1;
  4767  001E66  84A2               	bsf	4002,2,c	;volatile
  4768                           
  4769                           ;sumovore.c: 432: HLVDCONbits.VDIRMAG = 0;
  4770  001E68  9ED2               	bcf	4050,7,c	;volatile
  4771                           
  4772                           ;sumovore.c: 434: HLVDCONbits.HLVDL3 = 1;
  4773  001E6A  86D2               	bsf	4050,3,c	;volatile
  4774                           
  4775                           ;sumovore.c: 435: HLVDCONbits.HLVDL2 = 1;
  4776  001E6C  84D2               	bsf	4050,2,c	;volatile
  4777                           
  4778                           ;sumovore.c: 436: HLVDCONbits.HLVDL1 = 1;
  4779  001E6E  82D2               	bsf	4050,1,c	;volatile
  4780                           
  4781                           ;sumovore.c: 437: HLVDCONbits.HLVDL0 = 0;
  4782  001E70  90D2               	bcf	4050,0,c	;volatile
  4783                           
  4784                           ;sumovore.c: 438: PIR2bits.HLVDIF = 0;
  4785  001E72  94A1               	bcf	4001,2,c	;volatile
  4786                           
  4787                           ;sumovore.c: 439: PIE2bits.HLVDIE = 1;
  4788  001E74  84A0               	bsf	4000,2,c	;volatile
  4789                           
  4790                           ;sumovore.c: 440: INTCONbits.GIEH = 1;
  4791  001E76  8EF2               	bsf	intcon,7,c	;volatile
  4792  001E78  0012               	return	
  4793  001E7A                     __end_of_openLVD:
  4794                           	opt stack 0
  4795                           stkptr	equ	0xFFC
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodh	equ	0xFF4
  4801                           prodl	equ	0xFF3
  4802                           intcon	equ	0xFF2
  4803                           postinc0	equ	0xFEE
  4804                           wreg	equ	0xFE8
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _SetDCPWM2 *****************
  4808 ;; Defined at:
  4809 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2setdc.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4814 ;; Return value:  Size  Location     Type
  4815 ;;		None               void
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:        6 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    1
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_initialization
  4834 ;;		_set_motor_speed
  4835 ;;		_motors_brake_all
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text45
  4840  001B24                     __ptext45:
  4841                           	opt stack 0
  4842  001B24                     _SetDCPWM2:
  4843                           	opt stack 25
  4844                           
  4845                           ;incstack = 0
  4846  001B24  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4847  001B28  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4848  001B2C  0E06               	movlw	6
  4849  001B2E                     u25:
  4850  001B2E  90D8               	bcf	status,0,c
  4851  001B30  3611               	rlcf	??_SetDCPWM2,f,c
  4852  001B32  3612               	rlcf	??_SetDCPWM2+1,f,c
  4853  001B34  2EE8               	decfsz	wreg,f,c
  4854  001B36  D7FB               	goto	u25
  4855  001B38  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4856  001B3C  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4857  001B40  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4858  001B44  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4859  001B48  90D8               	bcf	status,0,c
  4860  001B4A  3211               	rrcf	??_SetDCPWM2,f,c
  4861  001B4C  90D8               	bcf	status,0,c
  4862  001B4E  3211               	rrcf	??_SetDCPWM2,f,c
  4863  001B50  0E30               	movlw	48
  4864  001B52  1611               	andwf	??_SetDCPWM2,f,c
  4865  001B54  50BA               	movf	4026,w,c	;volatile
  4866  001B56  0BCF               	andlw	207
  4867  001B58  1011               	iorwf	??_SetDCPWM2,w,c
  4868  001B5A  6EBA               	movwf	4026,c	;volatile
  4869  001B5C  0012               	return	
  4870  001B5E                     __end_of_SetDCPWM2:
  4871                           	opt stack 0
  4872                           stkptr	equ	0xFFC
  4873                           tblptru	equ	0xFF8
  4874                           tblptrh	equ	0xFF7
  4875                           tblptrl	equ	0xFF6
  4876                           tablat	equ	0xFF5
  4877                           prodh	equ	0xFF4
  4878                           prodl	equ	0xFF3
  4879                           intcon	equ	0xFF2
  4880                           postinc0	equ	0xFEE
  4881                           wreg	equ	0xFE8
  4882                           status	equ	0xFD8
  4883                           
  4884 ;; *************** function _SetDCPWM1 *****************
  4885 ;; Defined at:
  4886 ;;		line 7 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1setdc.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4891 ;; Return value:  Size  Location     Type
  4892 ;;		None               void
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;Total ram usage:        6 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_initialization
  4911 ;;		_set_motor_speed
  4912 ;;		_motors_brake_all
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text46
  4917  001B5E                     __ptext46:
  4918                           	opt stack 0
  4919  001B5E                     _SetDCPWM1:
  4920                           	opt stack 25
  4921                           
  4922                           ;incstack = 0
  4923  001B5E  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  4924  001B62  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  4925  001B66  0E06               	movlw	6
  4926  001B68                     u15:
  4927  001B68  90D8               	bcf	status,0,c
  4928  001B6A  3611               	rlcf	??_SetDCPWM1,f,c
  4929  001B6C  3612               	rlcf	??_SetDCPWM1+1,f,c
  4930  001B6E  2EE8               	decfsz	wreg,f,c
  4931  001B70  D7FB               	goto	u15
  4932  001B72  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  4933  001B76  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  4934  001B7A  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  4935  001B7E  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  4936  001B82  90D8               	bcf	status,0,c
  4937  001B84  3211               	rrcf	??_SetDCPWM1,f,c
  4938  001B86  90D8               	bcf	status,0,c
  4939  001B88  3211               	rrcf	??_SetDCPWM1,f,c
  4940  001B8A  0E30               	movlw	48
  4941  001B8C  1611               	andwf	??_SetDCPWM1,f,c
  4942  001B8E  50BD               	movf	4029,w,c	;volatile
  4943  001B90  0BCF               	andlw	207
  4944  001B92  1011               	iorwf	??_SetDCPWM1,w,c
  4945  001B94  6EBD               	movwf	4029,c	;volatile
  4946  001B96  0012               	return	
  4947  001B98                     __end_of_SetDCPWM1:
  4948                           	opt stack 0
  4949                           stkptr	equ	0xFFC
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           prodh	equ	0xFF4
  4955                           prodl	equ	0xFF3
  4956                           intcon	equ	0xFF2
  4957                           postinc0	equ	0xFEE
  4958                           wreg	equ	0xFE8
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _OpenUSART *****************
  4962 ;; Defined at:
  4963 ;;		line 73 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/USART/uopen.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  config          1    wreg     unsigned char 
  4966 ;;  spbrg           2   14[COMRAM] unsigned int 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  config          1   19[COMRAM] unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;		None               void
  4971 ;; Registers used:
  4972 ;;		wreg, status,2
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;Total ram usage:        6 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    1
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_initialization
  4989 ;;		_configureUSART
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text47
  4994  001914                     __ptext47:
  4995                           	opt stack 0
  4996  001914                     _OpenUSART:
  4997                           	opt stack 28
  4998                           
  4999                           ;incstack = 0
  5000                           ;OpenUSART@config stored from wreg
  5001  001914  6E14               	movwf	OpenUSART@config,c
  5002  001916  0E00               	movlw	0
  5003  001918  6EAC               	movwf	4012,c	;volatile
  5004  00191A  0E00               	movlw	0
  5005  00191C  6EAB               	movwf	4011,c	;volatile
  5006  00191E  B014               	btfsc	OpenUSART@config,0,c
  5007  001920  88AC               	bsf	4012,4,c	;volatile
  5008  001922  A214               	btfss	OpenUSART@config,1,c
  5009  001924  D002               	goto	l1679
  5010  001926  8CAC               	bsf	4012,6,c	;volatile
  5011  001928  8CAB               	bsf	4011,6,c	;volatile
  5012  00192A                     l1679:
  5013  00192A  B414               	btfsc	OpenUSART@config,2,c
  5014  00192C  8EAC               	bsf	4012,7,c	;volatile
  5015  00192E  A614               	btfss	OpenUSART@config,3,c
  5016  001930  D002               	goto	l698
  5017  001932  88AB               	bsf	4011,4,c	;volatile
  5018  001934  D001               	goto	l1687
  5019  001936                     l698:
  5020  001936  8AAB               	bsf	4011,5,c	;volatile
  5021  001938                     l1687:
  5022  001938  B814               	btfsc	OpenUSART@config,4,c
  5023  00193A  84AC               	bsf	4012,2,c	;volatile
  5024  00193C  989E               	bcf	3998,4,c	;volatile
  5025  00193E  BA14               	btfsc	OpenUSART@config,5,c
  5026  001940  86AB               	bsf	4011,3,c	;volatile
  5027  001942  AC14               	btfss	OpenUSART@config,6,c
  5028  001944  D002               	goto	l702
  5029  001946  8A9D               	bsf	3997,5,c	;volatile
  5030  001948  D001               	goto	l703
  5031  00194A                     l702:
  5032  00194A  9A9D               	bcf	3997,5,c	;volatile
  5033  00194C                     l703:
  5034  00194C  9A9E               	bcf	3998,5,c	;volatile
  5035  00194E  AE14               	btfss	OpenUSART@config,7,c
  5036  001950  D002               	goto	l704
  5037  001952  889D               	bsf	3997,4,c	;volatile
  5038  001954  D001               	goto	l705
  5039  001956                     l704:
  5040  001956  989D               	bcf	3997,4,c	;volatile
  5041  001958                     l705:
  5042  001958  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5043  00195C  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5044  001960  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  5045  001964  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  5046  001966  5012               	movf	??_OpenUSART+1,w,c
  5047  001968  6EB0               	movwf	4016,c	;volatile
  5048  00196A  8AAC               	bsf	4012,5,c	;volatile
  5049  00196C  8EAB               	bsf	4011,7,c	;volatile
  5050  00196E  9C94               	bcf	3988,6,c	;volatile
  5051  001970  8E94               	bsf	3988,7,c	;volatile
  5052  001972  B8AC               	btfsc	4012,4,c	;volatile
  5053  001974  BEAC               	btfsc	4012,7,c	;volatile
  5054  001976  D001               	goto	l707
  5055  001978  8C94               	bsf	3988,6,c	;volatile
  5056  00197A                     l707:
  5057  00197A  0012               	return	
  5058  00197C                     __end_of_OpenUSART:
  5059                           	opt stack 0
  5060                           stkptr	equ	0xFFC
  5061                           tblptru	equ	0xFF8
  5062                           tblptrh	equ	0xFF7
  5063                           tblptrl	equ	0xFF6
  5064                           tablat	equ	0xFF5
  5065                           prodh	equ	0xFF4
  5066                           prodl	equ	0xFF3
  5067                           intcon	equ	0xFF2
  5068                           postinc0	equ	0xFEE
  5069                           wreg	equ	0xFE8
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _OpenTimer2 *****************
  5073 ;; Defined at:
  5074 ;;		line 17 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t2open.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  config          1    wreg     unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  config          1   14[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;Total ram usage:        1 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    1
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_initialization
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text48
  5103  001E2E                     __ptext48:
  5104                           	opt stack 0
  5105  001E2E                     _OpenTimer2:
  5106                           	opt stack 28
  5107                           
  5108                           ;incstack = 0
  5109                           ;OpenTimer2@config stored from wreg
  5110  001E2E  6E0F               	movwf	OpenTimer2@config,c
  5111  001E30  500F               	movf	OpenTimer2@config,w,c
  5112  001E32  0BFB               	andlw	251
  5113  001E34  6ECA               	movwf	4042,c	;volatile
  5114  001E36  0E00               	movlw	0
  5115  001E38  6ECC               	movwf	4044,c	;volatile
  5116  001E3A  929E               	bcf	3998,1,c	;volatile
  5117  001E3C  AE0F               	btfss	OpenTimer2@config,7,c
  5118  001E3E  D002               	goto	l672
  5119  001E40  829D               	bsf	3997,1,c	;volatile
  5120  001E42  D001               	goto	l673
  5121  001E44                     l672:
  5122  001E44  929D               	bcf	3997,1,c	;volatile
  5123  001E46                     l673:
  5124  001E46  84CA               	bsf	4042,2,c	;volatile
  5125  001E48  0012               	return	
  5126  001E4A                     __end_of_OpenTimer2:
  5127                           	opt stack 0
  5128                           stkptr	equ	0xFFC
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           intcon	equ	0xFF2
  5136                           postinc0	equ	0xFEE
  5137                           wreg	equ	0xFE8
  5138                           status	equ	0xFD8
  5139                           
  5140 ;; *************** function _OpenPWM2 *****************
  5141 ;; Defined at:
  5142 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw2open.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  period          1    wreg     unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  period          1   15[COMRAM] unsigned char 
  5147 ;;  ccp2mx          1   16[COMRAM] unsigned char 
  5148 ;;  pmmode          1    0        unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;		None               void
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;Total ram usage:        3 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_initialization
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text49
  5173  001B98                     __ptext49:
  5174                           	opt stack 0
  5175  001B98                     _OpenPWM2:
  5176                           	opt stack 28
  5177                           
  5178                           ;incstack = 0
  5179                           ;OpenPWM2@period stored from wreg
  5180  001B98  6E10               	movwf	OpenPWM2@period,c
  5181  001B9A  0E0C               	movlw	12
  5182  001B9C  6EBA               	movwf	4026,c	;volatile
  5183  001B9E  0E05               	movlw	5
  5184  001BA0  6EF6               	movwf	tblptrl,c
  5185  001BA2                     	if	1	;There is more than 1 active tblptr byte
  5186  001BA2  0E00               	movlw	0
  5187  001BA4  6EF7               	movwf	tblptrh,c
  5188  001BA6                     	endif
  5189  001BA6                     	if	1	;There are 3 active tblptr bytes
  5190  001BA6  0E30               	movlw	48
  5191  001BA8  6EF8               	movwf	tblptru,c
  5192  001BAA                     	endif
  5193  001BAA  0008               	tblrd		*
  5194  001BAC  CFF5 F00F          	movff	tablat,??_OpenPWM2
  5195  001BB0  A00F               	btfss	??_OpenPWM2,0,c
  5196  001BB2  D002               	goto	l1785
  5197  001BB4  6811               	setf	OpenPWM2@ccp2mx,c
  5198  001BB6  D002               	goto	l620
  5199  001BB8                     l1785:
  5200  001BB8  0E00               	movlw	0
  5201  001BBA  6E11               	movwf	OpenPWM2@ccp2mx,c
  5202  001BBC                     l620:
  5203  001BBC  5011               	movf	OpenPWM2@ccp2mx,w,c
  5204  001BBE  B4D8               	btfsc	status,2,c
  5205  001BC0  D002               	goto	l621
  5206  001BC2  9294               	bcf	3988,1,c	;volatile
  5207  001BC4  D001               	goto	l622
  5208  001BC6                     l621:
  5209  001BC6  9693               	bcf	3987,3,c	;volatile
  5210  001BC8                     l622:
  5211  001BC8  94CA               	bcf	4042,2,c	;volatile
  5212  001BCA  C010  FFCB         	movff	OpenPWM2@period,4043	;volatile
  5213  001BCE  84CA               	bsf	4042,2,c	;volatile
  5214  001BD0  0012               	return	
  5215  001BD2                     __end_of_OpenPWM2:
  5216                           	opt stack 0
  5217                           stkptr	equ	0xFFC
  5218                           tblptru	equ	0xFF8
  5219                           tblptrh	equ	0xFF7
  5220                           tblptrl	equ	0xFF6
  5221                           tablat	equ	0xFF5
  5222                           prodh	equ	0xFF4
  5223                           prodl	equ	0xFF3
  5224                           intcon	equ	0xFF2
  5225                           postinc0	equ	0xFEE
  5226                           wreg	equ	0xFE8
  5227                           status	equ	0xFD8
  5228                           
  5229 ;; *************** function _OpenPWM1 *****************
  5230 ;; Defined at:
  5231 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/PWM/pw1open.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  period          1    wreg     unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  period          1   14[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;		None               void
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;Total ram usage:        1 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_initialization
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text50
  5260  001EEE                     __ptext50:
  5261                           	opt stack 0
  5262  001EEE                     _OpenPWM1:
  5263                           	opt stack 28
  5264                           
  5265                           ;incstack = 0
  5266                           ;OpenPWM1@period stored from wreg
  5267  001EEE  6E0F               	movwf	OpenPWM1@period,c
  5268  001EF0  0E0C               	movlw	12
  5269  001EF2  12BD               	iorwf	4029,f,c	;volatile
  5270  001EF4  9494               	bcf	3988,2,c	;volatile
  5271  001EF6  94CA               	bcf	4042,2,c	;volatile
  5272  001EF8  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  5273  001EFC  84CA               	bsf	4042,2,c	;volatile
  5274  001EFE  0012               	return	
  5275  001F00                     __end_of_OpenPWM1:
  5276                           	opt stack 0
  5277                           stkptr	equ	0xFFC
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           intcon	equ	0xFF2
  5285                           postinc0	equ	0xFEE
  5286                           wreg	equ	0xFE8
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _OpenADC *****************
  5290 ;; Defined at:
  5291 ;;		line 68 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  config          1    wreg     unsigned char 
  5294 ;;  config2         1   14[COMRAM] unsigned char 
  5295 ;;  portconfig      1   15[COMRAM] unsigned char 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  config          1   18[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;		None               void
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;Total ram usage:        5 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_initialization
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text51
  5322  0019DA                     __ptext51:
  5323                           	opt stack 0
  5324  0019DA                     _OpenADC:
  5325                           	opt stack 28
  5326                           
  5327                           ;incstack = 0
  5328                           ;OpenADC@config stored from wreg
  5329  0019DA  6E13               	movwf	OpenADC@config,c
  5330  0019DC  0E00               	movlw	0
  5331  0019DE  6EC2               	movwf	4034,c	;volatile
  5332  0019E0  0E00               	movlw	0
  5333  0019E2  6EC0               	movwf	4032,c	;volatile
  5334  0019E4  90D8               	bcf	status,0,c
  5335  0019E6  300F               	rrcf	OpenADC@config2,w,c
  5336  0019E8  0B3C               	andlw	60
  5337  0019EA  6EC2               	movwf	4034,c	;volatile
  5338  0019EC  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  5339  0019F0  3A11               	swapf	??_OpenADC,f,c
  5340  0019F2  0EF0               	movlw	240
  5341  0019F4  1611               	andwf	??_OpenADC,f,c
  5342  0019F6  0E30               	movlw	48
  5343  0019F8  1611               	andwf	??_OpenADC,f,c
  5344  0019FA  5010               	movf	OpenADC@portconfig,w,c
  5345  0019FC  0B0F               	andlw	15
  5346  0019FE  1011               	iorwf	??_OpenADC,w,c
  5347  001A00  6EC1               	movwf	4033,c	;volatile
  5348  001A02  C013  F011         	movff	OpenADC@config,??_OpenADC
  5349  001A06  90D8               	bcf	status,0,c
  5350  001A08  3611               	rlcf	??_OpenADC,f,c
  5351  001A0A  90D8               	bcf	status,0,c
  5352  001A0C  3611               	rlcf	??_OpenADC,f,c
  5353  001A0E  0E38               	movlw	56
  5354  001A10  1611               	andwf	??_OpenADC,f,c
  5355  001A12  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  5356  001A16  3A12               	swapf	??_OpenADC+1,f,c
  5357  001A18  0E0F               	movlw	15
  5358  001A1A  1612               	andwf	??_OpenADC+1,f,c
  5359  001A1C  0E07               	movlw	7
  5360  001A1E  1612               	andwf	??_OpenADC+1,f,c
  5361  001A20  5013               	movf	OpenADC@config,w,c
  5362  001A22  0B80               	andlw	128
  5363  001A24  1012               	iorwf	??_OpenADC+1,w,c
  5364  001A26  1011               	iorwf	??_OpenADC,w,c
  5365  001A28  6EC0               	movwf	4032,c	;volatile
  5366  001A2A  AE0F               	btfss	OpenADC@config2,7,c
  5367  001A2C  D003               	goto	l572
  5368  001A2E  9C9E               	bcf	3998,6,c	;volatile
  5369  001A30  8C9D               	bsf	3997,6,c	;volatile
  5370  001A32  8CF2               	bsf	intcon,6,c	;volatile
  5371  001A34                     l572:
  5372  001A34  80C2               	bsf	4034,0,c	;volatile
  5373  001A36  0012               	return	
  5374  001A38                     __end_of_OpenADC:
  5375                           	opt stack 0
  5376                           stkptr	equ	0xFFC
  5377                           tblptru	equ	0xFF8
  5378                           tblptrh	equ	0xFF7
  5379                           tblptrl	equ	0xFF6
  5380                           tablat	equ	0xFF5
  5381                           prodh	equ	0xFF4
  5382                           prodl	equ	0xFF3
  5383                           intcon	equ	0xFF2
  5384                           postinc0	equ	0xFEE
  5385                           wreg	equ	0xFE8
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function _OpenTimer0 *****************
  5389 ;; Defined at:
  5390 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0open.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  config          1    wreg     unsigned char 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  config          1   14[COMRAM] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;		None               void
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        1 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_main
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text52
  5419  001D98                     __ptext52:
  5420                           	opt stack 0
  5421  001D98                     _OpenTimer0:
  5422                           	opt stack 29
  5423                           
  5424                           ;incstack = 0
  5425                           ;OpenTimer0@config stored from wreg
  5426  001D98  6E0F               	movwf	OpenTimer0@config,c
  5427  001D9A  500F               	movf	OpenTimer0@config,w,c
  5428  001D9C  0B7F               	andlw	127
  5429  001D9E  6ED5               	movwf	4053,c	;volatile
  5430  001DA0  0E00               	movlw	0
  5431  001DA2  6ED7               	movwf	4055,c	;volatile
  5432  001DA4  0E00               	movlw	0
  5433  001DA6  6ED6               	movwf	4054,c	;volatile
  5434  001DA8  94F2               	bcf	intcon,2,c	;volatile
  5435  001DAA  AE0F               	btfss	OpenTimer0@config,7,c
  5436  001DAC  D002               	goto	l643
  5437  001DAE  8AF2               	bsf	intcon,5,c	;volatile
  5438  001DB0  D001               	goto	l644
  5439  001DB2                     l643:
  5440  001DB2  9AF2               	bcf	intcon,5,c	;volatile
  5441  001DB4                     l644:
  5442  001DB4  8ED5               	bsf	4053,7,c	;volatile
  5443  001DB6  0012               	return	
  5444  001DB8                     __end_of_OpenTimer0:
  5445                           	opt stack 0
  5446                           stkptr	equ	0xFFC
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           wreg	equ	0xFE8
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function _LVtrap *****************
  5459 ;; Defined at:
  5460 ;;		line 447 in file "../sumovore.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;		None               void
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:        0 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    3
  5481 ;; This function calls:
  5482 ;;		_gtrap
  5483 ;;		_openPORTD
  5484 ;;		_printf
  5485 ;; This function is called by:
  5486 ;;		_main
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text53
  5491  001DB8                     __ptext53:
  5492                           	opt stack 0
  5493  001DB8                     _LVtrap:
  5494                           	opt stack 27
  5495                           
  5496                           ;sumovore.c: 449: printf("\\<LVD>");
  5497                           
  5498                           ;incstack = 0
  5499  001DB8  0E10               	movlw	high STR_7
  5500  001DBA  6E11               	movwf	printf@f+1,c
  5501  001DBC  0E6B               	movlw	low STR_7
  5502  001DBE  6E10               	movwf	printf@f,c
  5503  001DC0  ECE9  F00D         	call	_printf	;wreg free
  5504                           
  5505                           ;sumovore.c: 450: openPORTD();
  5506  001DC4  ECBE  F00F         	call	_openPORTD	;wreg free
  5507                           
  5508                           ;sumovore.c: 451: PORTDbits.RD0=!1;
  5509  001DC8  9083               	bcf	3971,0,c	;volatile
  5510                           
  5511                           ;sumovore.c: 452: PORTDbits.RD1=!0;
  5512  001DCA  8283               	bsf	3971,1,c	;volatile
  5513                           
  5514                           ;sumovore.c: 453: PORTDbits.RD2=!0;
  5515  001DCC  8483               	bsf	3971,2,c	;volatile
  5516                           
  5517                           ;sumovore.c: 454: PORTDbits.RD3=!1;
  5518  001DCE  9683               	bcf	3971,3,c	;volatile
  5519                           
  5520                           ;sumovore.c: 455: PORTDbits.RD4=!0;
  5521  001DD0  8883               	bsf	3971,4,c	;volatile
  5522                           
  5523                           ;sumovore.c: 456: gtrap();
  5524  001DD2  EC1C  F00D         	call	_gtrap	;wreg free
  5525  001DD6  0012               	return	
  5526  001DD8                     __end_of_LVtrap:
  5527                           	opt stack 0
  5528                           stkptr	equ	0xFFC
  5529                           tblptru	equ	0xFF8
  5530                           tblptrh	equ	0xFF7
  5531                           tblptrl	equ	0xFF6
  5532                           tablat	equ	0xFF5
  5533                           prodh	equ	0xFF4
  5534                           prodl	equ	0xFF3
  5535                           intcon	equ	0xFF2
  5536                           postinc0	equ	0xFEE
  5537                           wreg	equ	0xFE8
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _printf *****************
  5541 ;; Defined at:
  5542 ;;		line 464 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  f               2   15[COMRAM] PTR const unsigned char 
  5545 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  5546 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  _val            5    0        struct .
  5549 ;;  ap              2   17[COMRAM] PTR void [1]
  5550 ;;		 -> ?_printf(2), 
  5551 ;;  c               1   19[COMRAM] char 
  5552 ;;  flag            1    0        unsigned char 
  5553 ;;  prec            1    0        char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  2   15[COMRAM] int 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:        5 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    2
  5570 ;; This function calls:
  5571 ;;		_putch
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;;		_PORtask
  5575 ;;		_BORtask
  5576 ;;		_WDTtask
  5577 ;;		_STKFULtask
  5578 ;;		_RESETtask
  5579 ;;		_LVtrap
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text54
  5584  001BD2                     __ptext54:
  5585                           	opt stack 0
  5586  001BD2                     _printf:
  5587                           	opt stack 28
  5588                           
  5589                           ;doprnt.c: 466: va_list ap;
  5590                           ;doprnt.c: 499: signed char c;
  5591                           ;doprnt.c: 506: signed char prec;
  5592                           ;doprnt.c: 508: unsigned char flag;
  5593                           ;doprnt.c: 527: union {
  5594                           ;doprnt.c: 528: unsigned int _val;
  5595                           ;doprnt.c: 529: struct {
  5596                           ;doprnt.c: 530: const char * _cp;
  5597                           ;doprnt.c: 531: unsigned _len;
  5598                           ;doprnt.c: 532: } _str;
  5599                           ;doprnt.c: 533: } _val;
  5600                           ;doprnt.c: 542: *ap = __va_start();
  5601                           
  5602                           ;incstack = 0
  5603  001BD2  0E00               	movlw	high (?_printf+2)
  5604  001BD4  6E13               	movwf	printf@ap+1,c
  5605  001BD6  0E12               	movlw	low (?_printf+2)
  5606  001BD8  6E12               	movwf	printf@ap,c
  5607                           
  5608                           ;doprnt.c: 545: while(c = *f++) {
  5609  001BDA  D003               	goto	l1389
  5610  001BDC                     l1387:
  5611                           
  5612                           ;doprnt.c: 549: {
  5613                           ;doprnt.c: 550: (putch(c) );
  5614  001BDC  5014               	movf	printf@c,w,c
  5615  001BDE  EC9A  F00F         	call	_putch
  5616  001BE2                     l1389:
  5617  001BE2  C010  FFF6         	movff	printf@f,tblptrl
  5618  001BE6  C011  FFF7         	movff	printf@f+1,tblptrh
  5619  001BEA  4A10               	infsnz	printf@f,f,c
  5620  001BEC  2A11               	incf	printf@f+1,f,c
  5621  001BEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5622  001BEE  6AF8               	clrf	tblptru,c
  5623  001BF0                     	endif
  5624  001BF0                     	if	0	;tblptru may be non-zero
  5625  001BF0                     	endif
  5626  001BF0  0008               	tblrd		*
  5627  001BF2  CFF5 F014          	movff	tablat,printf@c
  5628  001BF6  6614               	tstfsz	printf@c& (0+255),c
  5629  001BF8  D7F1               	goto	l1387
  5630                           
  5631                           ;doprnt.c: 1478: }
  5632                           ;doprnt.c: 1542: }
  5633                           ;doprnt.c: 1549: return 0;
  5634                           ;	Return value of _printf is never used
  5635  001BFA  0012               	return	
  5636  001BFC                     __end_of_printf:
  5637                           	opt stack 0
  5638                           stkptr	equ	0xFFC
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           wreg	equ	0xFE8
  5648                           status	equ	0xFD8
  5649                           
  5650 ;; *************** function _putch *****************
  5651 ;; Defined at:
  5652 ;;		line 51 in file "../../Common/configureUSART.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  data            1    wreg     unsigned char 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  data            1   14[COMRAM] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;		None               void
  5659 ;; Registers used:
  5660 ;;		wreg
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:        1 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    1
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_printf
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text55
  5681  001F34                     __ptext55:
  5682                           	opt stack 0
  5683  001F34                     _putch:
  5684                           	opt stack 28
  5685                           
  5686                           ;incstack = 0
  5687                           ;putch@data stored from wreg
  5688  001F34  6E0F               	movwf	putch@data,c
  5689  001F36                     l532:
  5690  001F36  A89E               	btfss	3998,4,c	;volatile
  5691  001F38  D7FE               	goto	l532
  5692                           
  5693                           ;configureUSART.c: 54: TXREG = data;
  5694  001F3A  C00F  FFAD         	movff	putch@data,4013	;volatile
  5695  001F3E  0012               	return	
  5696  001F40                     __end_of_putch:
  5697                           	opt stack 0
  5698                           stkptr	equ	0xFFC
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           intcon	equ	0xFF2
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           status	equ	0xFD8
  5709                           
  5710 ;; *************** function _openPORTD *****************
  5711 ;; Defined at:
  5712 ;;		line 167 in file "../sumovore.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;		None
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;		None               void
  5719 ;; Registers used:
  5720 ;;		wreg, status,2
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;Total ram usage:        0 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_initialization
  5737 ;;		_LVtrap
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text56
  5742  001F7C                     __ptext56:
  5743                           	opt stack 0
  5744  001F7C                     _openPORTD:
  5745                           	opt stack 28
  5746                           
  5747                           ;sumovore.c: 169: TRISD = 0b01100000;
  5748                           
  5749                           ;incstack = 0
  5750  001F7C  0E60               	movlw	96
  5751  001F7E  6E95               	movwf	3989,c	;volatile
  5752  001F80  0012               	return	
  5753  001F82                     __end_of_openPORTD:
  5754                           	opt stack 0
  5755                           stkptr	equ	0xFFC
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           prodh	equ	0xFF4
  5761                           prodl	equ	0xFF3
  5762                           intcon	equ	0xFF2
  5763                           postinc0	equ	0xFEE
  5764                           wreg	equ	0xFE8
  5765                           status	equ	0xFD8
  5766                           
  5767 ;; *************** function _gtrap *****************
  5768 ;; Defined at:
  5769 ;;		line 462 in file "../sumovore.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  count           4   14[COMRAM] unsigned long 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;		None               void
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:        4 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    1
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_BORtask
  5794 ;;		_WDTtask
  5795 ;;		_STKFULtask
  5796 ;;		_RESETtask
  5797 ;;		_LVtrap
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text57
  5802  001A38                     __ptext57:
  5803                           	opt stack 0
  5804  001A38                     _gtrap:
  5805                           	opt stack 26
  5806                           
  5807                           ;sumovore.c: 464: unsigned long count=0;
  5808                           
  5809                           ;incstack = 0
  5810  001A38  0E00               	movlw	0
  5811  001A3A  6E0F               	movwf	gtrap@count,c
  5812  001A3C  0E00               	movlw	0
  5813  001A3E  6E10               	movwf	gtrap@count+1,c
  5814  001A40  0E00               	movlw	0
  5815  001A42  6E11               	movwf	gtrap@count+2,c
  5816  001A44  0E00               	movlw	0
  5817  001A46  6E12               	movwf	gtrap@count+3,c
  5818  001A48                     l241:
  5819  001A48  0004               	clrwdt		;# 
  5820                           
  5821                           ;sumovore.c: 469: if (count==30000u)
  5822  001A4A  5010               	movf	gtrap@count+1,w,c
  5823  001A4C  0A75               	xorlw	117
  5824  001A4E  0E30               	movlw	48
  5825  001A50  B4D8               	btfsc	status,2,c
  5826  001A52  180F               	xorwf	gtrap@count,w,c
  5827  001A54  1011               	iorwf	gtrap@count+2,w,c
  5828  001A56  1012               	iorwf	gtrap@count+3,w,c
  5829  001A58  A4D8               	btfss	status,2,c
  5830  001A5A  D00B               	goto	l1413
  5831                           
  5832                           ;sumovore.c: 470: {
  5833                           ;sumovore.c: 471: count=0;
  5834  001A5C  0E00               	movlw	0
  5835  001A5E  6E0F               	movwf	gtrap@count,c
  5836  001A60  0E00               	movlw	0
  5837  001A62  6E10               	movwf	gtrap@count+1,c
  5838  001A64  0E00               	movlw	0
  5839  001A66  6E11               	movwf	gtrap@count+2,c
  5840  001A68  0E00               	movlw	0
  5841  001A6A  6E12               	movwf	gtrap@count+3,c
  5842                           
  5843                           ;sumovore.c: 472: PORTDbits.RD0=!1;
  5844  001A6C  9083               	bcf	3971,0,c	;volatile
  5845                           
  5846                           ;sumovore.c: 473: PORTDbits.RD1=!0;
  5847  001A6E  8283               	bsf	3971,1,c	;volatile
  5848                           
  5849                           ;sumovore.c: 474: }
  5850  001A70  D00B               	goto	l1417
  5851  001A72                     l1413:
  5852                           
  5853                           ;sumovore.c: 475: else if (count==15000u)
  5854  001A72  5010               	movf	gtrap@count+1,w,c
  5855  001A74  0A3A               	xorlw	58
  5856  001A76  0E98               	movlw	152
  5857  001A78  B4D8               	btfsc	status,2,c
  5858  001A7A  180F               	xorwf	gtrap@count,w,c
  5859  001A7C  1011               	iorwf	gtrap@count+2,w,c
  5860  001A7E  1012               	iorwf	gtrap@count+3,w,c
  5861  001A80  A4D8               	btfss	status,2,c
  5862  001A82  D002               	goto	l1417
  5863                           
  5864                           ;sumovore.c: 476: {
  5865                           ;sumovore.c: 477: PORTDbits.RD0=!0;
  5866  001A84  8083               	bsf	3971,0,c	;volatile
  5867                           
  5868                           ;sumovore.c: 478: PORTDbits.RD1=!1;
  5869  001A86  9283               	bcf	3971,1,c	;volatile
  5870  001A88                     l1417:
  5871                           
  5872                           ;sumovore.c: 479: }
  5873                           ;sumovore.c: 480: count++;
  5874  001A88  0E01               	movlw	1
  5875  001A8A  260F               	addwf	gtrap@count,f,c
  5876  001A8C  0E00               	movlw	0
  5877  001A8E  2210               	addwfc	gtrap@count+1,f,c
  5878  001A90  2211               	addwfc	gtrap@count+2,f,c
  5879  001A92  2212               	addwfc	gtrap@count+3,f,c
  5880  001A94  D7D9               	goto	l241
  5881  001A96                     __end_of_gtrap:
  5882                           	opt stack 0
  5883                           stkptr	equ	0xFFC
  5884                           tblptru	equ	0xFF8
  5885                           tblptrh	equ	0xFF7
  5886                           tblptrl	equ	0xFF6
  5887                           tablat	equ	0xFF5
  5888                           prodh	equ	0xFF4
  5889                           prodl	equ	0xFF3
  5890                           intcon	equ	0xFF2
  5891                           postinc0	equ	0xFEE
  5892                           wreg	equ	0xFE8
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function _high_isr *****************
  5896 ;; Defined at:
  5897 ;;		line 24 in file "../interrupts.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;		None               void
  5904 ;; Registers used:
  5905 ;;		wreg, status,2
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;Total ram usage:       14 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		Interrupt level 2
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	intcode
  5925  000008                     __pintcode:
  5926                           	opt stack 0
  5927  000008                     _high_isr:
  5928                           	opt stack 24
  5929                           
  5930                           ;incstack = 0
  5931  000008  CFFA F001          	movff	pclath,??_high_isr
  5932  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5933  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5934  000014  ED4B  F00C         	call	int_func,f	;refresh shadow registers
  5935                           stkptr	equ	0xFFC
  5936                           pclatu	equ	0xFFB
  5937                           pclath	equ	0xFFA
  5938                           tblptru	equ	0xFF8
  5939                           tblptrh	equ	0xFF7
  5940                           tblptrl	equ	0xFF6
  5941                           tablat	equ	0xFF5
  5942                           prodh	equ	0xFF4
  5943                           prodl	equ	0xFF3
  5944                           intcon	equ	0xFF2
  5945                           postinc0	equ	0xFEE
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           status	equ	0xFD8
  5949                           
  5950                           	psect	intcode_body
  5951  001896                     __pintcode_body:
  5952                           	opt stack 24
  5953  001896                     int_func:
  5954                           	opt stack 24
  5955  001896  0006               	pop		; remove dummy address from shadow register refresh
  5956  001898  CFEA F004          	movff	fsr0h,??_high_isr+3
  5957  00189C  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5958  0018A0  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5959  0018A4  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5960  0018A8  CFDA F008          	movff	fsr2h,??_high_isr+7
  5961  0018AC  CFF3 F009          	movff	prodl,??_high_isr+8
  5962  0018B0  CFF4 F00A          	movff	prodh,??_high_isr+9
  5963  0018B4  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5964  0018B8  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  5965  0018BC  CFF8 F00D          	movff	tblptru,??_high_isr+12
  5966  0018C0  CFF5 F00E          	movff	tablat,??_high_isr+13
  5967                           
  5968                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  5969  0018C4  94A1               	bcf	4001,2,c	;volatile
  5970                           
  5971                           ;interrupts.c: 27: TRISA = 0xff;
  5972  0018C6  6892               	setf	3986,c	;volatile
  5973                           
  5974                           ;interrupts.c: 28: TRISB = 0xff;
  5975  0018C8  6893               	setf	3987,c	;volatile
  5976                           
  5977                           ;interrupts.c: 29: TRISC = 0xff;
  5978  0018CA  6894               	setf	3988,c	;volatile
  5979                           
  5980                           ;interrupts.c: 30: TRISD = 0xff;
  5981  0018CC  6895               	setf	3989,c	;volatile
  5982                           
  5983                           ;interrupts.c: 31: TRISE = 0x03;
  5984  0018CE  0E03               	movlw	3
  5985  0018D0  6E96               	movwf	3990,c	;volatile
  5986                           
  5987                           ;interrupts.c: 32: lvd_flag =1;
  5988  0018D2  0E01               	movlw	1
  5989  0018D4  6E2D               	movwf	_lvd_flag,c
  5990                           
  5991                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  5992  0018D6  94A0               	bcf	4000,2,c	;volatile
  5993                           
  5994                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  5995  0018D8  98D2               	bcf	4050,4,c	;volatile
  5996  0018DA  C00E  FFF5         	movff	??_high_isr+13,tablat
  5997  0018DE  C00D  FFF8         	movff	??_high_isr+12,tblptru
  5998  0018E2  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  5999  0018E6  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6000  0018EA  C00A  FFF4         	movff	??_high_isr+9,prodh
  6001  0018EE  C009  FFF3         	movff	??_high_isr+8,prodl
  6002  0018F2  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6003  0018F6  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6004  0018FA  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6005  0018FE  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6006  001902  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6007  001906  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6008  00190A  C002  FFFB         	movff	??_high_isr+1,pclatu
  6009  00190E  C001  FFFA         	movff	??_high_isr,pclath
  6010  001912  0011               	retfie		f
  6011  001914                     __end_of_high_isr:
  6012                           	opt stack 0
  6013                           stkptr	equ	0xFFC
  6014                           pclatu	equ	0xFFB
  6015                           pclath	equ	0xFFA
  6016                           tblptru	equ	0xFF8
  6017                           tblptrh	equ	0xFF7
  6018                           tblptrl	equ	0xFF6
  6019                           tablat	equ	0xFF5
  6020                           prodh	equ	0xFF4
  6021                           prodl	equ	0xFF3
  6022                           intcon	equ	0xFF2
  6023                           postinc0	equ	0xFEE
  6024                           fsr0h	equ	0xFEA
  6025                           fsr0l	equ	0xFE9
  6026                           wreg	equ	0xFE8
  6027                           fsr1h	equ	0xFE2
  6028                           fsr1l	equ	0xFE1
  6029                           fsr2h	equ	0xFDA
  6030                           fsr2l	equ	0xFD9
  6031                           status	equ	0xFD8
  6032                           stkptr	equ	0xFFC
  6033                           pclatu	equ	0xFFB
  6034                           pclath	equ	0xFFA
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           intcon	equ	0xFF2
  6042                           postinc0	equ	0xFEE
  6043                           fsr0h	equ	0xFEA
  6044                           fsr0l	equ	0xFE9
  6045                           wreg	equ	0xFE8
  6046                           fsr1h	equ	0xFE2
  6047                           fsr1l	equ	0xFE1
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052                           	psect	rparam
  6053  0000                     stkptr	equ	0xFFC
  6054                           pclatu	equ	0xFFB
  6055                           pclath	equ	0xFFA
  6056                           tblptru	equ	0xFF8
  6057                           tblptrh	equ	0xFF7
  6058                           tblptrl	equ	0xFF6
  6059                           tablat	equ	0xFF5
  6060                           prodh	equ	0xFF4
  6061                           prodl	equ	0xFF3
  6062                           intcon	equ	0xFF2
  6063                           postinc0	equ	0xFEE
  6064                           fsr0h	equ	0xFEA
  6065                           fsr0l	equ	0xFE9
  6066                           wreg	equ	0xFE8
  6067                           fsr1h	equ	0xFE2
  6068                           fsr1l	equ	0xFE1
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    14
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1446$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _motor_control->_set_directive
    _start_tmr->_WriteTimer0
    _check_state->_check_sensors
    _check_sensors->_adc
    _adc->_ReadADC
    _adc->_SetChanADC
    _change_track->_set_directive
    _turn_right->_set_motor_speed
    _turn_left->_set_motor_speed
    _straight_fwd->_set_motor_speed
    _spin_right->_set_motor_speed
    _spin_left->_set_motor_speed
    _pirouette_right->_set_motor_speed
    _pirouette_left->_set_motor_speed
    _full_stp->_set_motor_speed
    _set_motor_speed->_SetDCPWM1
    _set_motor_speed->_SetDCPWM2
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _LVtrap->_printf
    _printf->_putch

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45672
                             _LVtrap
                         _OpenTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                      _motor_control
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _motor_control                                        0     0      0   41525
                         _ReadTimer0
                       _change_track
                        _check_state
                            _clr_tmr
                           _full_stp
                      _set_directive
                          _start_tmr
 ---------------------------------------------------------------------------------
 (2) _start_tmr                                            0     0      0     151
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (3) _WriteTimer0                                          4     2      2     151
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clr_tmr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_state                                          0     0      0      30
                      _check_sensors
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_sensors                                        1     1      0      30
                                             19 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (4) _adc                                                  3     1      2      30
                                             16 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _change_track                                         0     0      0   19530
                            _clr_mem
                      _set_directive
 ---------------------------------------------------------------------------------
 (2) _set_directive                                        2     0      2   19530
                                             29 COMRAM     2     0      2
                           _full_stp
                     _pirouette_left
                    _pirouette_right
                          _spin_left
                         _spin_right
                       _straight_fwd
                          _turn_left
                         _turn_right
 ---------------------------------------------------------------------------------
 (3) _turn_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _turn_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _straight_fwd                                         0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_right                                           0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _spin_left                                            0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_right                                      0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _pirouette_left                                       0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (3) _full_stp                                             0     0      0    2254
                    _set_motor_speed
 ---------------------------------------------------------------------------------
 (4) _set_motor_speed                                      9     6      3    2254
                                             20 COMRAM     9     6      3
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (3) _clr_mem                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      30
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3225
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2245
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     446
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     461
                                             20 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     446
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM2                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM1                                            6     4      2     204
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     256
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      30
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     211
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     446
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12    10      2     416
                                             15 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _motor_control
     _ReadTimer0
     _change_track
       _clr_mem
       _set_directive
         _full_stp
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _pirouette_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _spin_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _straight_fwd
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_left
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
         _turn_right
           _set_motor_speed
             _SetDCPWM1
             _SetDCPWM2
     _check_state
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _set_leds
     _clr_tmr
     _full_stp
       _set_motor_speed
         _SetDCPWM1
         _SetDCPWM2
     _set_directive
       _full_stp
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _pirouette_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _spin_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _straight_fwd
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_left
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
       _turn_right
         _set_motor_speed
           _SetDCPWM1
           _SetDCPWM2
     _start_tmr
       _WriteTimer0
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      2D       1       35.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      34        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Apr  5 15:37:55 2018

                         _STKPTRbits 000FFC                                   u15 1B68  
                                 u25 1B2E                                   u70 1530  
                                 u90 155C                                   u76 1532  
                                 u96 155E                          __CFG_BORV$0 000000  
                   ??_pirouette_left 001E                                  l211 1B22  
                                l214 1772                                  l310 16DC  
                                l215 171A                                  l207 1B14  
                                l241 1A48                                  l330 19C0  
                                l323 1992                                  l180 1526  
                                l404 135C                                  l333 19D0  
                                l421 14A0                                  l326 19A2  
                                l183 1552                                  l336 19D8  
                                l532 1F36                                  l620 1BBC  
                                l621 1BC6                                  l622 1BC8  
                                l702 194A                                  l550 1F32  
                                l703 194C                                  l704 1956  
                                l705 1958                                  l457 1C22  
                                l714 1F0C                                  l643 1DB2  
                                l707 197A                                  l723 1EB6  
                                l644 1DB4                                  l572 1A34  
                                l732 1EA2                                  l672 1E44  
                                l673 1E46                                  l698 1936  
                                u100 1F30                                  u200 1620  
                                u210 1820                                  u220 1836  
                                u206 1622                                  u230 184E  
                                u160 1582                                  u240 1868  
                                u216 1822                                  u170 15A8  
                                u250 1884                                  u226 1838  
                                u180 15D2                                  u236 1850  
                                u190 15FA                                  u166 1584  
                                u246 186A                                  _PR2 000FCB  
                                u176 15AA                                  u256 1886  
                                u186 15D4                                  u196 15FC  
               __size_of_WriteTimer0 0012                                  _adc 1D54  
               __end_of_change_track 19DA                                  wreg 000FE8  
                  ??_pirouette_right 001E                      ReadTimer0@timer 0011  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               ?_adc 0011                                 l2011 128A  
                               l2003 1260                                 l2031 12F2  
                               l2023 12D0                                 l2015 12A2  
                               l2007 1272                                 l2041 1330  
                               l2043 1338                                 l2019 12BA  
                               l1413 1A72                                 l2053 1376  
                               l2037 131A                                 l2029 12EE  
                               l1511 1F0A                                 l1351 150E  
                               l2063 13AC                                 l2127 1AC6  
                               l1417 1A88                                 l1361 153E  
                               l1347 14F6                                 l1611 1644  
                               l2083 140A                                 l2075 13E8  
                               l2067 13C2                                 l2091 1418  
                               l2085 140E                                 l2077 13EC  
                               l2069 13CA                                 l2093 1488  
                               l1463 1EB4                                 l1367 1554  
                               l1359 1528                                 l1623 166E  
                               l2087 1412                                 l1641 16B0  
                               l1617 1658                                 l1387 1BDC  
                               l1555 1EA0                                 l1635 169A  
                               l1395 1D60                                 l1389 1BE2  
                               l1493 1750                                 l1725 1AF4  
                               l1629 1684                                 l1813 19AA  
                               l1735 1B1E                                 l1647 16C6  
                               l1497 1766                                 l1729 1B04  
                               l1913 110A                                 l1905 10DA  
                               l1923 1138                                 l1933 1162  
                               l1909 10F2                                 l1687 1938  
                               l1679 192A                                 l1951 11AC  
                               l1943 1192                                 l1919 112A  
                               l1785 1BB8                                 l1937 1172  
                               l1929 1158                                 l1971 11F8  
                               l1947 119C                                 l1965 11D8  
                               l1957 11CC                                 l1893 10A2  
                               l1993 1236                                 l1985 122A  
                               l1897 10BA                                 l1979 120A  
                               l1999 1256                      __end_of_BORtask 1D98  
                               STR_1 100F                                 STR_2 1078  
                               STR_3 1072                                 STR_4 1062  
                               STR_5 1059                                 STR_6 104F  
                               STR_7 106B                                 _TMR2 000FCC  
                       __CFG_WDTPS$8 000000                                 _TXIF 007CF4  
                   ??_initialization 001D                                 _main 1A96  
              __end_of_check_sensors 1630                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 pclat 000FFA  
                      __CFG_BOREN$ON 000000                      __end_of_PORtask 1788  
                               prodh 000FF4                                 prodl 000FF3  
              __size_of_straight_fwd 0026                                 start 0018  
                    __end_of_WDTtask 1E12                      __end_of_BusyADC 1F34  
                    __end_of_ReadADC 1F54                      __end_of_OpenADC 1A38  
                              ??_adc 0013                                ?_main 0001  
                              _T0CON 000FD5                                _T2CON 000FCA  
                 __size_of_RESETtask 001C                                _RCSTA 000FAB  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _SPBRG 000FAF                                _PORTD 000F83  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                      _set_motor_speed 14A2  
                              _TXREG 000FAD                                _TXSTA 000FAC  
                    __end_of_isWDTTO 1EA4              __end_of_openPORTCforPWM 1F1C  
                    __end_of_clr_mem 1F5E                      __end_of_clr_tmr 1F28  
                              _isBOR 1F00                                _isPOR 1EA4  
                              _count 0020                                _gtrap 1A38  
               __size_of_check_state 000A                         _straight_fwd 1C70  
                              _putch 1F34                      __end_of_openLVD 1E7A  
                         _ConvertADC 1F82                                tablat 000FF5  
         __size_of_openPORTCforUSART 0006                                status 000FD8  
                        ?_STKFULtask 0001                       __CFG_MCLRE$OFF 000000  
                    __initialization 1EB8                         __end_of_main 1AE4  
                         _ReadTimer0 1EDC                     __end_of_OpenPWM1 1F00  
                   __end_of_OpenPWM2 1BD2                               ??_main 0020  
                      __activetblptr 000003                           _SetChanADC 1E7A  
                          ??_BORtask 0015                               ?_isBOR 0001  
                             ?_isPOR 0001                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_gtrap 0001                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                               ?_putch 0001  
                          ??_PORtask 0015                            ??_WDTtask 0015  
                         _OpenTimer0 1D98                           _OpenTimer2 1E2E  
                             _TMR0IF 007F92                               _SPBRGH 000FB0  
                 __size_of_SetDCPWM1 003A                   __size_of_SetDCPWM2 003A  
                          ??_BusyADC 000F                            ??_ReadADC 0011  
                             _LVtrap 1DB8                    __end_of_RESETtask 1E2E  
                          ??_OpenADC 0011                         ?_reset_codes 0001  
                   __end_of_high_isr 1914                   __size_of_OpenUSART 0068  
                     __CFG_STVREN$ON 000000                     OpenTimer0@config 000F  
            __end_of_set_motor_speed 156C                     OpenTimer2@config 000F  
                             _memory 0022                               clear_0 1EBE  
                   __end_of_full_stp 1D54                __size_of_change_track 005E  
                          ??_isWDTTO 000F                               _printf 1BD2  
                          ??_clr_mem 000F                            ??_clr_tmr 000F  
                   __end_of_set_leds 1896                            ??_openLVD 000F  
                __size_of_STKFULtask 001E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     ?_openPORTCforPWM 0001  
              __end_of_set_directive 16DE                          ?_ConvertADC 0001  
                         __accesstop 0080              __end_of__initialization 1EC4  
        set_motor_speed@dir_modifier 001B                           adc@channel 0013  
                       _change_track 197C                __end_of_set_osc_32MHz 1C24  
                     __pcstackCOMRAM 0001                          ?_ReadTimer0 000F  
                      __end_of_isBOR 1F0E                        __end_of_isPOR 1EB8  
                    _pirouette_right 1CE2                        __end_of_gtrap 1A96  
                      __end_of_putch 1F40                    __end_of_SetDCPWM1 1B98  
                  __end_of_SetDCPWM2 1B5E                        ??_StatusReset 000F  
                        ?_SetChanADC 0001                        ?_lvd_flag_set 0001  
                            ??_isBOR 000F                              ??_isPOR 000F  
                  __end_of_OpenUSART 197C                              ??_gtrap 000F  
                            ??_putch 000F                          ?_OpenTimer0 0001  
                        ?_OpenTimer2 0001                            ?_OpenPWM1 0001  
                          ?_OpenPWM2 0001                              ?_LVtrap 0001  
                 __size_of_openPORTA 0006                   __size_of_openPORTB 0006  
                 __size_of_openPORTD 0006                   __size_of_openPORTE 0006  
              __end_of_motor_control 14A2                              _CCP1CON 000FBD  
                            _CCP2CON 000FBA                     WriteTimer0@timer 0011  
                   ?_set_motor_speed 0015                        ??_WriteTimer0 0011  
                __size_of_ConvertADC 0004                              ?_printf 0010  
                            _BORtask 1D78                       ??_lvd_flag_set 000F  
                 __size_of_spin_left 0026           set_motor_speed@motor_speed 0015  
                          ?_high_isr 0001                  __end_of_StatusReset 1F64  
                 __size_of_start_tmr 0018                  __size_of_ReadTimer0 0012  
                            _PORtask 16DE                              _WDTtask 1DF6  
                          ?_full_stp 0001                              _BusyADC 1F28  
                            _ReadADC 1F4A                           ??_OpenPWM1 000F  
                         ??_OpenPWM2 000F                         ??_STKFULtask 0015  
                            _SeeLine 002C                   __size_of_turn_left 0026  
            __end_of_pirouette_right 1D08                              _OpenADC 19DA  
                    __size_of_LVtrap 0020                              __Hparam 0000  
                __size_of_SetChanADC 0016                              __Lparam 0000  
                          ?_set_leds 0001                 __size_of_reset_codes 0040  
                       __psmallconst 1000                              __pcinit 1EB8  
                            _isWDTTO 1E90                              __ramtop 1000  
                __size_of_OpenTimer0 0020                  __size_of_OpenTimer2 001C  
                            __ptext0 1A96                              __ptext1 1080  
                            __ptext2 1E4A                              __ptext3 1ECA  
                            __ptext4 1F1C                              __ptext5 1F40  
                            __ptext6 1818                              __ptext7 156C  
                            __ptext8 1D54                              __ptext9 1E7A  
                            _clr_mem 1F54                              _clr_tmr 1F1C  
                    __size_of_printf 002A                            _T0CONbits 000FD5  
                       __size_of_adc 0024                            _T2CONbits 000FCA  
             __size_of_check_sensors 00C4                        ??_check_state 0015  
                            _openLVD 1E62                  __end_of_WriteTimer0 1EDC  
                 __end_of_STKFULtask 1DF6                    __end_of_openPORTA 1F7C  
                  __end_of_openPORTB 1F76                    __end_of_openPORTD 1F82  
                  __end_of_openPORTE 1F6A              __size_of_pirouette_left 0026  
                     OpenADC@config2 000F                           ??_high_isr 0001  
                     __pintcode_body 1896                 end_of_initialization 1EC4  
                            int_func 1896                           ??_full_stp 001E  
                         ??_set_leds 000F                           _move_state 0024  
                          _RCSTAbits 000FAB                              printf@c 0014  
                            printf@f 0010                    __end_of_spin_left 1CE2  
                          _RESETtask 1E12                              postinc0 000FEE  
            __size_of_initialization 0090                    __end_of_start_tmr 1E62  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
                          _PORTEbits 000F84                       set_osc_32MHz@i 000F  
                        _StatusReset 1F5E                    __end_of_turn_left 1C70  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                         _spin_right 1C96                         ??_ConvertADC 000F  
                __end_of_check_state 1F4A                            _TXSTAbits 000FAC  
                      _check_sensors 156C                     ?_pirouette_right 0001  
                     __end_of_LVtrap 1DD8                 __end_of_lvd_flag_set 1F8A  
                       ??_ReadTimer0 0011                           ?_RESETtask 0001  
                        _BAUDCONbits 000FB8                          _WriteTimer0 1ECA  
                         _turn_right 1C24                   __end_of_ConvertADC 1F86  
                       ??_SetChanADC 000F                       __end_of_printf 1BFC  
                start_initialization 1EB8                            _SetDCPWM1 1B5E  
                          _SetDCPWM2 1B24                      SetDCPWM1@DCycle 0013  
                        __end_of_adc 1D78                      SetDCPWM2@DCycle 0013  
                       ??_OpenTimer0 000F                         ??_OpenTimer2 000F  
                 __end_of_ReadTimer0 1EEE                            _OpenUSART 1914  
           __size_of_openPORTCforPWM 000E                       ?_check_sensors 0001  
                   __CFG_OSC$INTIO67 000000                             ??_LVtrap 0015  
                 __end_of_SetChanADC 1E90                    __size_of_OpenPWM1 0012  
                  __size_of_OpenPWM2 003A               __size_of_set_directive 00AE  
                           ??_printf 0012                           gtrap@count 000F  
                 __end_of_OpenTimer0 1DB8                   __end_of_OpenTimer2 1E4A  
                        __pbssCOMRAM 0020                             ?_BORtask 0001  
                        _check_state 1F40                           ?_SetDCPWM1 000F  
                         ?_SetDCPWM2 000F                          ?_spin_right 0001  
                      PORtask@count1 0015                        PORtask@count2 0019  
                __end_of__stringdata 107E                       _pirouette_left 1D08  
             __size_of_set_osc_32MHz 0028                        ?_straight_fwd 0001  
           set_motor_speed@the_motor 001A                             ?_PORtask 0001  
                           ?_WDTtask 0001                           ?_OpenUSART 000F  
                  __size_of_high_isr 190C                             ?_BusyADC 0001  
                           ?_ReadADC 000F                    OpenADC@portconfig 0010  
                           ?_OpenADC 000F                    __size_of_full_stp 0026  
                          __pintcode 0008                          ??_RESETtask 0015  
                     _initialization 1788                    __size_of_set_leds 007E  
                           ?_isWDTTO 0001                          ?_turn_right 0001  
                           ?_clr_mem 0001                             ?_clr_tmr 0001  
                        __smallconst 1000                    WriteTimer0@timer0 000F  
             __end_of_pirouette_left 1D2E                             ?_openLVD 0001  
           __size_of_set_motor_speed 00CA                       ??_straight_fwd 001E  
                     __size_of_isBOR 000E                       __size_of_isPOR 0014  
                     __size_of_gtrap 005E                       __size_of_putch 000C  
             __size_of_motor_control 0422                      ??_check_sensors 0014  
                      _set_directive 1630                            _openPORTA 1F76  
                          _openPORTB 1F70                            _openPORTD 1F7C  
                          _openPORTE 1F64                        OpenADC@config 0013  
              __size_of_lvd_flag_set 0004                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
                      ??_reset_codes 001D                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1               __end_of_initialization 1818  
                           _RCONbits 000FD0                    ??_openPORTCforPWM 000F  
                      _set_osc_32MHz 1BFC                  __size_of_spin_right 0026  
__end_ofset_motor_speed@motor_speeds 100F          set_motor_speed@motor_speeds 1001  
                        _HLVDCONbits 000FD2                            _threshold 0028  
                          _spin_left 1CBC                           _ADCON0bits 000FC2  
                        __stringdata 100F                            _tmr_state 002A  
                          _start_tmr 1E4A                         ?_StatusReset 0001  
                    ?_pirouette_left 0001                          ??_SetDCPWM1 0011  
                        ??_SetDCPWM2 0011                     __size_of_BORtask 0020  
                       _lvd_flag_set 1F86                            _turn_left 1C4A  
                     ?_set_directive 001E                     __size_of_PORtask 00AA  
                        ??_OpenUSART 0011                   SetDCPWM1@dutycycle 000F  
                         ?_openPORTA 0001                           ?_openPORTB 0001  
                         ?_openPORTD 0001                           ?_openPORTE 0001  
                   __size_of_WDTtask 001C                      OpenUSART@config 0014  
                __size_of_turn_right 0026                             _OpenPWM1 1EEE  
                           _OpenPWM2 1B98                     __size_of_BusyADC 000C  
                   __size_of_ReadADC 000A                             __Hrparam 0000  
                      ?_change_track 0001                     __size_of_OpenADC 005E  
                    ?_initialization 0001                             __Lrparam 0000  
                 SetDCPWM2@dutycycle 000F                       ?_set_osc_32MHz 0001  
                __end_of_reset_codes 1B24                        _motor_control 1080  
                       ?_WriteTimer0 000F                           ?_spin_left 0001  
                     OpenPWM2@ccp2mx 0011                     __size_of_isWDTTO 0014  
                         ?_start_tmr 0001                     __size_of_clr_mem 000A  
      set_motor_speed@speed_modifier 0016                     __size_of_clr_tmr 000C  
                     OpenPWM1@period 000F                       OpenPWM2@period 0010  
                   __size_of_openLVD 0018                             __ptext10 1F4A  
                           __ptext11 1F82                             __ptext20 1CE2  
                           __ptext12 1F28                             __ptext21 1D08  
                           __ptext13 197C                             __ptext30 1E90  
                           __ptext22 1D2E                             __ptext14 1630  
                           __ptext31 1EA4                             __ptext23 14A2  
                           __ptext15 1C24                             __ptext40 1F6A  
                           __ptext32 1F00                             __ptext24 1F54  
                           __ptext16 1C4A                             __ptext41 1F0E  
                           __ptext33 1DF6                             __ptext25 1EDC  
                           __ptext17 1C70                             __ptext50 1EEE  
                           __ptext42 1F70                             __ptext34 1DD8  
                           __ptext26 1F86                             __ptext18 1C96  
                           __ptext51 19DA                             __ptext43 1F76  
                           __ptext35 1E12                             __ptext27 1788  
                           __ptext19 1CBC                             __ptext52 1D98  
                           __ptext44 1E62                             __ptext36 16DE  
                           __ptext28 1BFC                             __ptext53 1DB8  
                           __ptext45 1B24                             __ptext37 1D78  
                           __ptext29 1AE4                             __ptext54 1BD2  
                           __ptext46 1B5E                             __ptext38 1F5E  
                           __ptext55 1F34                             __ptext47 1914  
                           __ptext39 1F64                             __ptext56 1F7C  
                           __ptext48 1E2E                             __ptext57 1A38  
                           __ptext49 1B98                           ?_turn_left 0001  
                           _high_isr 0008            set_motor_speed@duty_cycle 001C  
                  ??_set_motor_speed 0018                        __size_of_main 004E  
                           _full_stp 1D2E                       ??_change_track 0020  
                           _lvd_flag 002D                             _side_mem 0026  
                           _set_leds 1818                 __end_of_straight_fwd 1C96  
                     ?_motor_control 0001             __size_of_pirouette_right 0026  
                          putch@data 000F                          _OSCTUNEbits 000F9B  
                         _INTCONbits 000FF2                         ?_check_state 0001  
                     OpenUSART@spbrg 000F                         ??_spin_right 001E  
                    ??_set_directive 0020               set_directive@directive 001E  
                           intlevel2 0000                          ??_openPORTA 000F  
                        ??_openPORTB 000F                          ??_openPORTD 000F  
                        ??_openPORTE 000F                    _openPORTCforUSART 1F6A  
                  SetChanADC@channel 0010                      ??_set_osc_32MHz 000F  
                        _reset_codes 1AE4                           _OSCCONbits 000FD3  
                 ?_openPORTCforUSART 0001                             printf@ap 0012  
                 __end_of_spin_right 1CBC                  ??_openPORTCforUSART 000F  
                        ??_spin_left 001E                         ??_turn_right 001E  
                        ??_start_tmr 0013                 __size_of_StatusReset 0006  
                        ??_turn_left 001E                      _openPORTCforPWM 1F0E  
          __end_of_openPORTCforUSART 1F70                   __end_of_turn_right 1C4A  
                         _STKFULtask 1DD8                      ??_motor_control 0020  
